<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib"
                    xmlns:ObjectBinding="clr-namespace:WPFUIElementObjectBind;assembly=WPFConnectableControls"
                    xmlns:resx="clr-namespace:StyleableWindow.Properties"
                    xmlns:sw="clr-namespace:StyleableWindow">

    <!--the brushes used in the template (use these to customize the window look along with the window style (see the bottom of this file)-->
    <SolidColorBrush x:Key="WindowColor" Color="Red"/>
    <SolidColorBrush x:Key="WindowBorderColor" Color="Black"/>
    <SolidColorBrush x:Key="WindowBackColor" Color="White"/>
    <SolidColorBrush x:Key="WindowForeColor" Color="DarkBlue"/>
    <SolidColorBrush x:Key="WindowForeHighlightColor" Color="WhiteSmoke"/>
    <SolidColorBrush x:Key="WindowButtonColor" Color="White"/>
    <SolidColorBrush x:Key="WindowButtonOverColor" Color="LightBlue"/>
    <SolidColorBrush x:Key="WindowButtonPressedColor" Color="DarkBlue"/>
    <SolidColorBrush x:Key="SWPopupBackgroundBrush" Color="Red"/>
    <SolidColorBrush x:Key="SWPopupBorderBrush" Color="#FFB9B9B9"/>

    <!---red window brushes-->
    <!--<SolidColorBrush x:Key="WindowColor" Color="DarkRed"/>
        <SolidColorBrush x:Key="WindowBackColor" Color="DarkRed"/>
        <SolidColorBrush x:Key="WindowForeColor" Color="White"/>
        <SolidColorBrush x:Key="WindowForeHighlightColor" Color="White"/>
        <SolidColorBrush x:Key="WindowButtonColor" Color="OrangeRed"/>
        <SolidColorBrush x:Key="WindowButtonOverColor" Color="Orange"/>
        <SolidColorBrush x:Key="WindowButtonPressedColor" Color="DarkOrange"/>-->

    <!--The window template and it's components -->

    <ObjectBinding:WindowMinimizeCommand x:Key="MinimizeCommand"></ObjectBinding:WindowMinimizeCommand>
    <ObjectBinding:WindowMaximizeCommand x:Key="MaximizeCommand"></ObjectBinding:WindowMaximizeCommand>
    <ObjectBinding:WindowCloseCommand x:Key="CloseCommand"></ObjectBinding:WindowCloseCommand>




    <Style TargetType="{x:Type Button}" x:Key="WindowButton">
        <Setter Property="Height" Value="25"/>
        <Setter Property="Width" Value="25"/>
        <Setter Property="Background" Value="{StaticResource WindowButtonColor}"/>
        <Setter Property="Foreground" Value="{StaticResource WindowForeColor}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="{StaticResource WindowButtonColor}"/>
                            <Setter Property="Foreground" Value="{StaticResource WindowColor}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{StaticResource WindowButtonOverColor}"/>
                            <Setter Property="Foreground" Value="{StaticResource WindowForeHighlightColor}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="{StaticResource WindowButtonPressedColor}"/>
                            <Setter Property="Foreground" Value="{StaticResource WindowForeColor}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Image}" x:Key="WindowIcon">
        <Setter Property="Height" Value="25"/>
        <Setter Property="Width" Value="25"/>
    </Style>

    <Style x:Key="TransparentStyle" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="Transparent">
                        <ContentPresenter/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="WindowTemplate" TargetType="{x:Type sw:Window}">
        <Grid>
            <Border x:Name="ShadowBorder"  Background ="{StaticResource WindowBackColor}" BorderThickness="10" CornerRadius="10">
                <Border.Effect>
                    <DropShadowEffect BlurRadius="10" ShadowDepth="5" />
                </Border.Effect>
                <Border  Background="{StaticResource WindowBackColor}" CornerRadius="10,10,10,10" Padding="6" >
                    <Grid x:Name="WindowArea" Background="{StaticResource WindowBackColor}">

                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <Grid Grid.Row="0"  Background="{StaticResource WindowBackColor}" x:Name="TitleBarArea" Margin="5,0,5,0"  
                      sw:WindowDragBehavior.LeftMouseButtonDrag="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}">
                                <Grid >
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="50"/>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="30"/>
                                        <RowDefinition Height="Auto"/>
                                    </Grid.RowDefinitions>
                                    <StackPanel Grid.Column="0" Orientation="Horizontal" >

                                        <Label Grid.Column="0"                                           
                                        sw:ControlDoubleClickBehavior.ExecuteCommand="{StaticResource CloseCommand}"                                               
                                        sw:ControlDoubleClickBehavior.ExecuteCommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}" Padding="0">
                                            <Image DockPanel.Dock="Left" Style="{StaticResource WindowIcon}" VerticalAlignment="Bottom" Source="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}},Path=Icon}"                                         
                                        Width="24"                                           
                                        sw:ShowSystemMenuBehavior.TargetWindow="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"                                           
                                        sw:ShowSystemMenuBehavior.LeftButtonShowAt="{Binding ElementName=WindowContent}"/>
                                        </Label>
                                        <Button Margin="15,0,5,0"  Style="{StaticResource WindowButton}" Visibility="Collapsed" x:Name="BackButton"  Padding="2">
                                            <Image VerticalAlignment="Center" Width="20" Height="20" Source="Resources/Images/LeftArrow.png"></Image>
                                        </Button>
                                    </StackPanel>
                                    <Label Grid.Column="1" DockPanel.Dock="Left" Content="{TemplateBinding Property=Title}" FontWeight="SemiBold" Padding="10,0,0,0"                                                                                  
                                        HorizontalContentAlignment="Left"
                                        VerticalContentAlignment="Center"
                                        HorizontalAlignment="Stretch"
                                        VerticalAlignment="Stretch"
                                        Foreground="{StaticResource WindowForeColor}"                                           
                                        FontSize="16"
                                        
                                        sw:ControlDoubleClickBehavior.ExecuteCommand="{StaticResource MaximizeCommand}"
                                        sw:ControlDoubleClickBehavior.ExecuteCommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"
                                        sw:ShowSystemMenuBehavior.TargetWindow="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"
                                        sw:ShowSystemMenuBehavior.RightButtonShow="true">
                                    </Label>



                                    <Grid Grid.Column="2" >
                                        <Button Style="{StaticResource TransparentStyle}"  x:Name="LanguageButton" Width="28" Height="22"  >
                                            <Image Width="24" Height="24" Source="{Binding SelectedCulturePresentation.FlagImageUri}"></Image>
                                        </Button>

                                        <Popup Placement="Left" AllowsTransparency="True"  PopupAnimation="Fade" x:Name="LanguagePopup"  StaysOpen="False"   >

                                            <Border HorizontalAlignment="Stretch" Background="{StaticResource SWPopupBackgroundBrush}" BorderBrush="{StaticResource SWPopupBorderBrush}" BorderThickness="1"  CornerRadius="2">
                                                <Grid Background="WhiteSmoke">
                                                    <Grid >
                                                        <Grid.RowDefinitions>
                                                            <RowDefinition></RowDefinition>
                                                            <RowDefinition></RowDefinition>
                                                        </Grid.RowDefinitions>
                                                        <StackPanel Orientation="Horizontal"  Margin="3">
                                                            <Label Content="{Binding LanguageLabel}"/>
                                                            <ComboBox Width="256" Margin="10,0,0,0" ItemsSource="{Binding Cultures}"  SelectedItem="{Binding SelectedCulturePresentation}" >
                                                                <ComboBox.ItemTemplate>
                                                                    <DataTemplate>
                                                                        <StackPanel Orientation="Horizontal" >
                                                                            <Image Width="24" Height="24" Source="{Binding FlagImageUri}"></Image>
                                                                            <TextBlock Text="{Binding CultureInfo.EnglishName}" Margin="5,0,0,0"></TextBlock>
                                                                        </StackPanel>
                                                                    </DataTemplate>
                                                                </ComboBox.ItemTemplate>
                                                            </ComboBox>
                                                        </StackPanel>
                                                        <StackPanel  Margin="10" Grid.Row="1" Orientation="Horizontal">
                                                            <CheckBox IsChecked="{Binding UseDefaultCultureWhenValueMissing}" Content="{x:Static sw:CulturePresentation.DefaultLanguageLabel}" ></CheckBox>
                                                        </StackPanel>
                                                    </Grid>

                                                    <!--<ContentPresenter Content="{TemplateBinding LanguagePopup}"  />-->
                                                </Grid>
                                            </Border>
                                        </Popup>

                                    </Grid>
                                    <StackPanel HorizontalAlignment="Right"  Grid.Column="4" Orientation="Horizontal">
                                        <Button  x:Name="MinimizeBox" DockPanel.Dock="Right" Style="{StaticResource WindowButton}" Command="{StaticResource MinimizeCommand}" CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}">
                                            <Image Width="12" Height="12" Source="/StyleableWindow;component/Resources/Images/MinimizeWindow.png"></Image>
                                        </Button>
                                        <Button  x:Name="MaximizeBox" DockPanel.Dock="Right" Style="{StaticResource WindowButton}" Command="{StaticResource MaximizeCommand}" CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}">
                                            <Image Width="12" Height="12" Source="/StyleableWindow;component/Resources/Images/RestoreWindow.png"></Image>
                                        </Button>
                                        <Button x:Name="CloseBox" DockPanel.Dock="Right"  Style="{StaticResource WindowButton}" Command="{StaticResource CloseCommand}" CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}" >
                                            <Image x:Name="CloseBoxImage" Width="12" Height="12" Source="/StyleableWindow;component/Resources/Images/CloseWindow.png"></Image>
                                        </Button>
                                    </StackPanel>
                                    <Label Visibility="Collapsed" x:Name="SubTitle" Margin="20,0,0,0" Grid.Row="1" Grid.Column="1"  Grid.ColumnSpan="3" Foreground="DarkGray"></Label>
                                </Grid>


                            </Grid>
                            <Border Grid.Row="1" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
                                <Grid>
                                    <AdornerDecorator>
                                        <ContentPresenter x:Name="WindowContent"/>
                                    </AdornerDecorator>


                                    <ResizeGrip  x:Name="WindowResizeGrip" HorizontalAlignment="Right" IsTabStop="false" Visibility="Collapsed" VerticalAlignment="Bottom"/>
                                    <Line  x:Name="TitleBarLine" VerticalAlignment="Top" HorizontalAlignment="Stretch" StrokeThickness="0.5" Stroke="{StaticResource WindowBorderColor}"  X2="{Binding ActualWidth, RelativeSource={RelativeSource Self}}"></Line>
                                </Grid>
                            </Border>
                        </Grid>
                        <!--<Thumb x:Name="ThumbTop" Height="6" Margin="14,0" VerticalAlignment="Top" Cursor="SizeNS"  Opacity="0" sw:WindowResizeBehavior.TopResize="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"/>
                        <Thumb x:Name="ThumbTopLeft" Height="6" Width="6" VerticalAlignment="Top" HorizontalAlignment="Left" Cursor="SizeNWSE"  Opacity="0" sw:WindowResizeBehavior.TopLeftResize="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"/>
                        <Thumb x:Name="ThumbBottom" Height="6" Margin="14,0" VerticalAlignment="Bottom" Cursor="SizeNS" Opacity="0" sw:WindowResizeBehavior.BottomResize="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"/>
                        <Thumb x:Name="ThumbTopRight" Height="6" Width="6" VerticalAlignment="Top" HorizontalAlignment="Right" Cursor="SizeNESW"  Opacity="0" sw:WindowResizeBehavior.TopRightResize="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"/>
                        <Thumb x:Name="ThumbRight" HorizontalAlignment="Right" Margin="0,14" Width="6" Cursor="SizeWE"  Opacity="0" sw:WindowResizeBehavior.RightResize="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"/>
                        <Thumb x:Name="ThumbBottomRight" Height="6" Width="6" VerticalAlignment="Bottom" HorizontalAlignment="Right" Cursor="SizeNWSE"  Opacity="0" sw:WindowResizeBehavior.BottomRightResize="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"/>
                        <Thumb x:Name="ThumbLeft" HorizontalAlignment="Left" Margin="0,14" Width="6" Cursor="SizeWE"  Opacity="0" sw:WindowResizeBehavior.LeftResize="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"/>
                        <Thumb x:Name="ThumbBottomLeft" Height="6" Width="6" VerticalAlignment="Bottom" HorizontalAlignment="Left" Cursor="SizeNESW"  Opacity="0" sw:WindowResizeBehavior.BottomLeftResize="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"/>-->
                    </Grid>
                </Border>
            </Border>
            <Thumb x:Name="ThumbTop" Height="6" Margin="14,0" VerticalAlignment="Top" Cursor="SizeNS"  Opacity="0" sw:WindowResizeBehavior.TopResize="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"/>
            <Thumb x:Name="ThumbTopLeft" Height="6" Width="6" VerticalAlignment="Top" HorizontalAlignment="Left" Cursor="SizeNWSE"  Opacity="0" sw:WindowResizeBehavior.TopLeftResize="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"/>
            <Thumb x:Name="ThumbBottom" Height="6" Margin="14,0" VerticalAlignment="Bottom" Cursor="SizeNS" Opacity="0" sw:WindowResizeBehavior.BottomResize="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"/>
            <Thumb x:Name="ThumbTopRight" Height="6" Width="6" VerticalAlignment="Top" HorizontalAlignment="Right" Cursor="SizeNESW"  Opacity="0" sw:WindowResizeBehavior.TopRightResize="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"/>
            <Thumb x:Name="ThumbRight" HorizontalAlignment="Right" Margin="0,14" Width="6" Cursor="SizeWE"  Opacity="0" sw:WindowResizeBehavior.RightResize="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"/>
            <Thumb x:Name="ThumbBottomRight" Height="6" Width="6" VerticalAlignment="Bottom" HorizontalAlignment="Right" Cursor="SizeNWSE"  Opacity="0" sw:WindowResizeBehavior.BottomRightResize="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"/>
            <Thumb x:Name="ThumbLeft" HorizontalAlignment="Left" Margin="0,14" Width="6" Cursor="SizeWE"  Opacity="0" sw:WindowResizeBehavior.LeftResize="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"/>
            <Thumb x:Name="ThumbBottomLeft" Height="6" Width="6" VerticalAlignment="Bottom" HorizontalAlignment="Left" Cursor="SizeNESW"  Opacity="0" sw:WindowResizeBehavior.BottomLeftResize="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"/>

        </Grid>
        <ControlTemplate.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="ResizeMode" Value="CanResizeWithGrip"/>
                    <Condition Property="WindowState" Value="Normal"/>
                </MultiTrigger.Conditions>
                <Setter Property="Visibility" TargetName="WindowResizeGrip" Value="Visible"/>
            </MultiTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!-- the custom window style and the window template 
        Here you can customize the look of the window without having to touch the control template 
        or comment out the brushes and create a new style (see the red style below)-->

    <Style x:Key="CustomWindowStyle" TargetType="{x:Type Window}">
        <Setter Property="WindowStyle" Value="None"/>
        <Setter Property="AllowsTransparency" Value="True"/>
        <Setter Property="MinWidth" Value="200"/>
        <Setter Property="MinHeight" Value="46"/>
        <!--CaptionHeight + ResizeBorderThickness * 2-->
        <!--<Setter Property="Background" Value="Yellow"/>
            <Setter Property="BorderBrush" Value="Green"/>
            <Setter Property="BorderThickness" Value="7"/>
            <Setter Property="Foreground" Value="DarkRed"/>-->
        <Setter Property="Template" Value="{StaticResource WindowTemplate}"/>
    </Style>

    <!--the red style window-->
    <Style x:Key="RedWindowStyle" TargetType="{x:Type Window}">
        <Setter Property="WindowStyle" Value="None"/>
        <Setter Property="AllowsTransparency" Value="True"/>
        <Setter Property="MinWidth" Value="100"/>
        <Setter Property="MinHeight" Value="46"/>
        <Setter Property="Background" Value="white"/>
        <Setter Property="BorderBrush" Value="DarkRed"/>
        <Setter Property="BorderThickness" Value="7"/>
        <Setter Property="Foreground" Value="DarkGray"/>
        <Setter Property="Template" Value="{StaticResource WindowTemplate}"/>
    </Style>




    <Style x:Key="ModalDialog" TargetType="{x:Type sw:DialogContentControl }">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type sw:DialogContentControl }">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="auto"/>
                        </Grid.RowDefinitions>
                        <Grid Grid.Row="1" Margin="5">
                            <AdornerDecorator>
                                <ContentPresenter x:Name="GridContent"/>
                            </AdornerDecorator>
                        </Grid>


                        <Grid Background="WhiteSmoke" Grid.Row="2" Height="52"   >
                            <Grid Margin="20,6,20,6" >
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <Grid Grid.Column="0">
                                    <ContentPresenter  Content="{TemplateBinding Footer}" Margin="5,0,5,0" />
                                </Grid>
                                <StackPanel Orientation="Horizontal" Grid.Column="1" HorizontalAlignment="Right">
                                    <Button x:Name="OKButton" Style="{DynamicResource DefaultButtonStyle}"  Visibility="{Binding Path=OkButtonVisibility, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type  sw:DialogContentControl}}}"    Content="OK" Margin="5,0,5,0"  Command="{Binding Path=OKClickCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type  sw:DialogContentControl}}}" Width="50"   />
                                    <Button  x:Name="CancelButton" Visibility="{Binding Path=CancelButtonVisibility, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type  sw:DialogContentControl}}}"   Content="Cancel" Margin="5,0,5,0" Command="{Binding Path=CancelClickCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type  sw:DialogContentControl}}}" Width="90"  />
                                </StackPanel>
                                <!--<ContentPresenter x:Name="saa"  Content="{TemplateBinding  Content}"></ContentPresenter>-->
                            </Grid>
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



    <Style x:Key="PageDialogHost" TargetType="{x:Type sw:PageDialogViewEmulator }">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type sw:PageDialogViewEmulator}">
                    <Grid >
                        <AdornerDecorator>
                            <ContentPresenter x:Name="GridContent"/>
                        </AdornerDecorator>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



    <Style x:Key="PageDialog" TargetType="{x:Type sw:DialogContentControl }">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type sw:DialogContentControl }">
                    <Grid Background="WhiteSmoke">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="auto"/>
                        </Grid.RowDefinitions>
                        <Grid Background="#FFE5E5E5" Visibility="{Binding Path=HeaderVisibility, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type  sw:DialogContentControl}}}"  Grid.Row="0" Height="42" >
                            <Grid Margin="20,6,20,6" >
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="auto"/>
                                    <ColumnDefinition Width="auto"/>
                                    <ColumnDefinition Width="*"/>

                                    <ColumnDefinition Width="auto"/>

                                </Grid.ColumnDefinitions>
                                <Grid Grid.Column="1">
                                    <ContentPresenter HorizontalAlignment="Left"  Content="{TemplateBinding Footer}" Margin="15,0,5,0" />
                                </Grid>

                                <Grid Margin="10,0,10,0" Grid.Column="2">
                                    <!--<Label Style="{StaticResource AddressLabelStyle}"  VerticalAlignment="Center" HorizontalAlignment="Left" Content="Binding Path=PagesPath, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type  sw:DialogContentControl}}}">
                                         Height="{Binding ActualHeight, ElementName=DropDownBorder}"
                                    </Label>-->
                                    <Grid x:Name="PathColumnWidth" HorizontalAlignment="Stretch" ></Grid>
                                    <sw:PathTrimmingTextBlock 
                                        Width="{Binding ActualWidth, ElementName=PathColumnWidth}"
                                        HorizontalAlignment="Stretch"
                                        VerticalAlignment="Center"
                                        Path="{Binding Path=PagesPath, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type  sw:DialogContentControl}}}">
                                    </sw:PathTrimmingTextBlock>
                                </Grid>
                                <StackPanel Orientation="Horizontal" Grid.Column="0" HorizontalAlignment="left">
                                    <Grid>
                                        <Button Name="x_backButton"  HorizontalAlignment="Right" Margin="0,0,5,0" 
                                                Command="{Binding Path=BackClickCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type  sw:DialogContentControl}}}" 
                                                Visibility="{Binding Path=BackButtonVisibility, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type  sw:DialogContentControl}}}" 
                                                Width="70"  >
                                            <StackPanel Orientation="Horizontal">
                                                <Image Margin="4,0,0,0" Width="16" Source="/MenuDesignerLib;component/Resources/Images/Metro/back.png"/>
                                                <TextBlock Margin="6,0,6,0" VerticalAlignment="Center"  Text="Back" ></TextBlock>
                                            </StackPanel>
                                        </Button>
                                        <Button Name="x_closeButton" HorizontalAlignment="Right" Margin="0,0,5,0" 
                                                Command="{Binding Path=CloseClickCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type  sw:DialogContentControl}}}" 
                                                Visibility="{Binding Path=CloseButtonVisibility, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type  sw:DialogContentControl}}}" 
                                                Width="70"  >
                                            <StackPanel Orientation="Horizontal">
                                                <!--<Image Width="20" Source="/MenuDesignerLib;component/Resources/Images/Metro/back.png"/>-->
                                                <TextBlock Margin="6,0,6,0" VerticalAlignment="Center"  Text="Close" ></TextBlock>
                                            </StackPanel>
                                        </Button>
                                        <Popup StaysOpen="False" AllowsTransparency="True" IsOpen="{Binding Path=IsSavePopUpOpen,  RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type  sw:DialogContentControl}}}">
                                            <Border Grid.Row="1"   Background ="{StaticResource WindowBackColor}" BorderThickness="10" CornerRadius="10">
                                                <Border.Effect>
                                                    <DropShadowEffect BlurRadius="10" ShadowDepth="5" />
                                                </Border.Effect>
                                                <Border  Background="{StaticResource WindowBackColor}" CornerRadius="10,10,10,10" Padding="6" >
                                                    <Grid Margin="5">
                                                        <Grid.RowDefinitions>
                                                            <RowDefinition Height="60"/>
                                                            <RowDefinition Height="auto"/>
                                                        </Grid.RowDefinitions>
                                                        <Grid Grid.Row="0" >
                                                            <Label  VerticalAlignment="Center" HorizontalAlignment="Center">Save Changes ?</Label>
                                                        </Grid>
                                                        <StackPanel Grid.Row="1" Orientation="Horizontal" Margin="5" >
                                                            <Button  Style="{DynamicResource DefaultButtonStyle}"   Content="Yes" Margin="5,0,5,0"  Command="{Binding Path=BackAndSaveCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type  sw:DialogContentControl}}}" Width="70" Height="30" />
                                                            <Button HorizontalAlignment="Right" Margin="0,0,5,0" Content="No" Width="70" Command="{Binding Path=BackAndDontSaveCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type  sw:DialogContentControl}}}" />
                                                            <Button HorizontalAlignment="Right" Margin="0,0,5,0" Content="Cancel"  Width="70"  Command="{Binding Path=CloseSavePopupCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type  sw:DialogContentControl}}}" />

                                                        </StackPanel>
                                                    </Grid>
                                                </Border>
                                            </Border>
                                        </Popup>
                                    </Grid>
                                    <Button Name="x_saveButton"  Style="{DynamicResource DefaultButtonStyle}"     Content="Save" Margin="5,0,5,0" 
                                             Command="{Binding Path=SaveClickCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type  sw:DialogContentControl}}}" Width="90"   
                                             Visibility="{Binding Path=SaveButtonVisibility, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type  sw:DialogContentControl}}}" />
                                </StackPanel>



                                <Slider Width="100"  Maximum="1" Minimum="0"  Visibility="{Binding Path=ScalingControlVisibility ,RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type sw:DialogContentControl}}}"  Value="{Binding Path=Scale,  RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type  sw:DialogContentControl}}}"  VerticalAlignment="Center" Grid.Column="3"></Slider>
                                <!--<ContentPresenter x:Name="saa"  Content="{TemplateBinding  Content}"></ContentPresenter>-->
                            </Grid>
                        </Grid>

                        <Grid Grid.Row="1"  HorizontalAlignment="Stretch" >
                            <Grid >
                                <Grid Margin="5" x:Name="HostArea">
                                    <AdornerDecorator >
                                        <Grid x:Name="ContentArea">

                                            <Border Grid.Row="1" Visibility="{Binding Path=BorderVisibility ,RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type sw:DialogContentControl}}}"    Background ="{StaticResource WindowBackColor}" BorderThickness="10" CornerRadius="10">
                                                <Border.Effect>
                                                    <DropShadowEffect BlurRadius="10" ShadowDepth="5" />
                                                </Border.Effect>

                                            </Border>
                                            <Border   Margin="{Binding Path=BorderMargin ,RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type sw:DialogContentControl}}}"      Background="{StaticResource WindowBackColor}" CornerRadius="{Binding Path=CornerRadius ,RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type sw:DialogContentControl}}}" >
                                                <Grid >
                                                    <Grid.RowDefinitions>
                                                        <RowDefinition Height="auto"/>
                                                        <RowDefinition Height="*"/>
                                                    </Grid.RowDefinitions>
                                                    <Grid Visibility="{Binding Path=PageTitleBarVisibility ,RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type sw:DialogContentControl}}}" Grid.Row="0"  Background="{StaticResource WindowBackColor}" x:Name="TitleBarArea" Margin="15,10,15,0" >
                                                        <Grid >
                                                            <Grid.ColumnDefinitions>
                                                                <ColumnDefinition Width="50"/>
                                                                <ColumnDefinition Width="*"/>
                                                                <ColumnDefinition Width="Auto"/>
                                                                <ColumnDefinition Width="40"/>
                                                            </Grid.ColumnDefinitions>
                                                            <Grid.RowDefinitions>
                                                                <RowDefinition Height="30"/>
                                                                <RowDefinition Height="Auto"/>
                                                            </Grid.RowDefinitions>
                                                            <StackPanel Grid.Column="0" Orientation="Horizontal" >

                                                                <Label Grid.Column="0"  Padding="0">
                                                                    <Image DockPanel.Dock="Left" Style="{StaticResource WindowIcon}" VerticalAlignment="Bottom" Source="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type sw:DialogContentControl}},Path=Icon}" Width="24"/>
                                                                </Label>
                                                            </StackPanel>
                                                            <Label Grid.Column="1" DockPanel.Dock="Left" Content="{TemplateBinding Property=Title}" FontWeight="SemiBold" Padding="10,0,0,0"                                                                                  
                                                        HorizontalContentAlignment="Left"
                                                        VerticalContentAlignment="Center"
                                                        HorizontalAlignment="Stretch"
                                                        VerticalAlignment="Stretch"
                                                        Foreground="{StaticResource WindowForeColor}"                                           
                                                        FontSize="16">
                                                            </Label>
                                                            <Grid Grid.Column="2" >
                                                                <Button Style="{StaticResource TransparentStyle}"  x:Name="LanguageButton" Width="28" Height="22"  >
                                                                    <Image Width="24" Height="24" Source="{Binding Path= SelectedCulturePresentation.FlagImageUri}"></Image>
                                                                </Button>

                                                                <Popup Placement="Left" AllowsTransparency="True"  PopupAnimation="Fade" x:Name="LanguagePopup"  StaysOpen="False"   >

                                                                    <Border HorizontalAlignment="Stretch" Background="{StaticResource SWPopupBackgroundBrush}" BorderBrush="{StaticResource SWPopupBorderBrush}" BorderThickness="1"  CornerRadius="2">
                                                                        <Grid Background="WhiteSmoke">
                                                                            <Grid >
                                                                                <Grid.RowDefinitions>
                                                                                    <RowDefinition></RowDefinition>
                                                                                    <RowDefinition></RowDefinition>
                                                                                </Grid.RowDefinitions>
                                                                                <StackPanel Orientation="Horizontal"  Margin="3">
                                                                                    <Label Content="{Binding Path=LanguageLabel}"/>
                                                                                    <ComboBox Width="256" Margin="10,0,0,0" ItemsSource="{Binding Path=Cultures}"  SelectedItem="{Binding Path=SelectedCulturePresentation}" >
                                                                                        <ComboBox.ItemTemplate>
                                                                                            <DataTemplate>
                                                                                                <StackPanel Orientation="Horizontal" >
                                                                                                    <Image Width="24" Height="24" Source="{Binding Path=FlagImageUri}"></Image>
                                                                                                    <TextBlock Text="{Binding Path=CultureInfo.EnglishName}" Margin="5,0,0,0"></TextBlock>
                                                                                                </StackPanel>
                                                                                            </DataTemplate>
                                                                                        </ComboBox.ItemTemplate>
                                                                                    </ComboBox>
                                                                                </StackPanel>
                                                                                <StackPanel  Margin="10" Grid.Row="1" Orientation="Horizontal">
                                                                                    <CheckBox IsChecked="{Binding Path=UseDefaultCultureWhenValueMissing}" Content="{x:Static sw:CulturePresentation.DefaultLanguageLabel}" ></CheckBox>
                                                                                </StackPanel>
                                                                            </Grid>

                                                                            <!--<ContentPresenter Content="{TemplateBinding LanguagePopup}"  />-->
                                                                        </Grid>
                                                                    </Border>
                                                                </Popup>
                                                            </Grid>
                                                            <Label Visibility="Collapsed" x:Name="SubTitle" Margin="20,0,0,0" Grid.Row="1" Grid.Column="1"  Grid.ColumnSpan="3" Foreground="DarkGray"></Label>
                                                        </Grid>
                                                    </Grid>
                                                    <Line Margin="10,0,10,0" Visibility="{Binding Path=PageTitleBarVisibility ,RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type sw:DialogContentControl}}}" Grid.Row="1" x:Name="TitleBarLine" VerticalAlignment="Top" HorizontalAlignment="Stretch" StrokeThickness="0.5" Stroke="{StaticResource WindowBorderColor}"  X2="{Binding ActualWidth, RelativeSource={RelativeSource Self}}"></Line>

                                                    <ContentPresenter Margin="{Binding Path=PagePadding ,RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type sw:DialogContentControl}}}"  Grid.Row="1"  x:Name="GridContent"/>
                                                </Grid>

                                            </Border>
                                        </Grid>
                                    </AdornerDecorator>
                                </Grid>
                            </Grid>
                        </Grid>

                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>

