<?xml version="1.0" encoding="utf-8"?>
<reflection>
  <assemblies>
    <assembly name="OOAdvantech">
      <assemblydata version="1.0.2.0" culture="" key="00240000048000009400000006020000002400005253413100040000010001009D2E2A1D236CD58A973DDB53C86BDCCF5C1063B3FF3B4092FCDEAD8D35392897474C8BD8CD72F3310CD6C2B380452E6A0CEA5B8DF8114ABA968C70DBA6FA28A1207D0A785E57A423B4E4C1B703A4EB8EECC5C665E94E9281C4AC808E898E17C23CF703F7A6E54EC7EE3226E5D9322F090087C560C44DB589DAF4CB191DF056EF" hash="SHA1" />
      <attributes>
        <attribute>
          <type api="T:System.Reflection.AssemblyTitleAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyConfigurationAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCompanyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyProductAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCopyrightAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyTrademarkAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDelaySignAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyKeyFileAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>..\..\StrongName.snk</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyKeyNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
        </attribute>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.BuildAssemblyMetadata" ref="true" />
        </attribute>
      </attributes>
    </assembly>
  </assemblies>
  <apis>
    <api id="N:OOAdvantech">
      <apidata name="OOAdvantech" group="namespace" />
      <elements>
        <element api="T:OOAdvantech.Distribution" />
        <element api="T:OOAdvantech.ObjectsContext" />
        <element api="T:OOAdvantech.EventUnderProtection" />
        <element api="T:OOAdvantech.EventUnderProtection.ExceptionHandling" />
        <element api="T:OOAdvantech.EventUnderProtection.EventHandlerException" />
        <element api="T:OOAdvantech.EventUnderProtection.MulticastExeption" />
        <element api="T:OOAdvantech.DragDropMethod" />
        <element api="T:OOAdvantech.AccessorBuilder" />
        <element api="T:OOAdvantech.AccessorBuilder.FieldPropertyAccessor" />
        <element api="T:OOAdvantech.AccessorBuilder.GetHandler" />
        <element api="T:OOAdvantech.AccessorBuilder.SetHandler" />
        <element api="T:OOAdvantech.AccessorBuilder.InstantiateObjectHandler" />
        <element api="T:OOAdvantech.AccessorBuilder.FastInvokeHandler" />
        <element api="T:OOAdvantech.Member`1" />
        <element api="T:OOAdvantech.IAccount`1" />
        <element api="T:OOAdvantech.MemberAcount`1" />
        <element api="T:OOAdvantech.ObjectChangeStateHandle" />
        <element api="T:OOAdvantech.ExtensionProperties" />
      </elements>
    </api>
    <api id="T:OOAdvantech.AccessorBuilder">
      <apidata name="AccessorBuilder" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="F:OOAdvantech.AccessorBuilder.AllMembers" />
        <element api="M:OOAdvantech.AccessorBuilder.CreateProperty(System.Reflection.Emit.TypeBuilder,System.Type,System.String)" />
        <element api="M:OOAdvantech.AccessorBuilder.GetInterfaceTypeBuilder(System.String)" />
        <element api="M:OOAdvantech.AccessorBuilder.GetFieldAccessor(System.Reflection.FieldInfo)" />
        <element api="M:OOAdvantech.AccessorBuilder.GetPropertyAccessor(System.Reflection.PropertyInfo)" />
        <element api="M:OOAdvantech.AccessorBuilder.GetMethodInvoker(System.Reflection.MethodInfo)" />
        <element api="M:OOAdvantech.AccessorBuilder.GetConstructorInvoker(System.Reflection.ConstructorInfo)" />
        <element api="M:OOAdvantech.AccessorBuilder.CreateConstructorInvoker(System.Reflection.ConstructorInfo)" />
        <element api="M:OOAdvantech.AccessorBuilder.CreateInstantiateObjectHandler(System.Type)" />
        <element api="M:OOAdvantech.AccessorBuilder.CreateGetHandler(System.Type,System.Reflection.PropertyInfo)" />
        <element api="M:OOAdvantech.AccessorBuilder.CreateGetHandler(System.Type,System.Reflection.FieldInfo)" />
        <element api="M:OOAdvantech.AccessorBuilder.CreateSetHandler(System.Type,System.Reflection.PropertyInfo)" />
        <element api="M:OOAdvantech.AccessorBuilder.CreateSetHandler(System.Type,System.Reflection.FieldInfo)" />
        <element api="M:OOAdvantech.AccessorBuilder.CreateInstance(System.Type)" />
        <element api="M:OOAdvantech.AccessorBuilder.CreateInstance(System.Type,System.Type[],System.Object[])" />
        <element api="M:OOAdvantech.AccessorBuilder.GetDefaultValue(System.Type)" />
      </elements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech" />
      </containers>
    </api>
    <api id="F:OOAdvantech.AccessorBuilder.AllMembers">
      <apidata name="AllMembers" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Reflection.BindingFlags" ref="false" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech" />
        <type api="T:OOAdvantech.AccessorBuilder" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.AccessorBuilder.CreateConstructorInvoker(System.Reflection.ConstructorInfo)">
      <apidata name="CreateConstructorInvoker" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="constInfo">
          <type api="T:System.Reflection.ConstructorInfo" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:OOAdvantech.AccessorBuilder.FastInvokeHandler" ref="true">
          <type api="T:OOAdvantech.AccessorBuilder" ref="true" />
        </type>
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech" />
        <type api="T:OOAdvantech.AccessorBuilder" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.AccessorBuilder.CreateGetHandler(System.Type,System.Reflection.FieldInfo)">
      <apidata name="CreateGetHandler" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="fieldInfo">
          <type api="T:System.Reflection.FieldInfo" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:OOAdvantech.AccessorBuilder.GetHandler" ref="true">
          <type api="T:OOAdvantech.AccessorBuilder" ref="true" />
        </type>
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech" />
        <type api="T:OOAdvantech.AccessorBuilder" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.AccessorBuilder.CreateGetHandler(System.Type,System.Reflection.PropertyInfo)">
      <apidata name="CreateGetHandler" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="propertyInfo">
          <type api="T:System.Reflection.PropertyInfo" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:OOAdvantech.AccessorBuilder.GetHandler" ref="true">
          <type api="T:OOAdvantech.AccessorBuilder" ref="true" />
        </type>
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech" />
        <type api="T:OOAdvantech.AccessorBuilder" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.AccessorBuilder.CreateInstance(System.Type)">
      <apidata name="CreateInstance" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech" />
        <type api="T:OOAdvantech.AccessorBuilder" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.AccessorBuilder.CreateInstance(System.Type,System.Type[],System.Object[])">
      <apidata name="CreateInstance" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="paramsTypes">
          <arrayOf rank="1">
            <type api="T:System.Type" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="ctorParams" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech" />
        <type api="T:OOAdvantech.AccessorBuilder" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.AccessorBuilder.CreateInstantiateObjectHandler(System.Type)">
      <apidata name="CreateInstantiateObjectHandler" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:OOAdvantech.AccessorBuilder.InstantiateObjectHandler" ref="true">
          <type api="T:OOAdvantech.AccessorBuilder" ref="true" />
        </type>
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech" />
        <type api="T:OOAdvantech.AccessorBuilder" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.AccessorBuilder.CreateProperty(System.Reflection.Emit.TypeBuilder,System.Type,System.String)">
      <apidata name="CreateProperty" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="typeBuilder">
          <type api="T:System.Reflection.Emit.TypeBuilder" ref="true" />
        </parameter>
        <parameter name="propertyType">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="propertyName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech" />
        <type api="T:OOAdvantech.AccessorBuilder" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.AccessorBuilder.CreateSetHandler(System.Type,System.Reflection.FieldInfo)">
      <apidata name="CreateSetHandler" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="fieldInfo">
          <type api="T:System.Reflection.FieldInfo" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:OOAdvantech.AccessorBuilder.SetHandler" ref="true">
          <type api="T:OOAdvantech.AccessorBuilder" ref="true" />
        </type>
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech" />
        <type api="T:OOAdvantech.AccessorBuilder" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.AccessorBuilder.CreateSetHandler(System.Type,System.Reflection.PropertyInfo)">
      <apidata name="CreateSetHandler" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="propertyInfo">
          <type api="T:System.Reflection.PropertyInfo" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:OOAdvantech.AccessorBuilder.SetHandler" ref="true">
          <type api="T:OOAdvantech.AccessorBuilder" ref="true" />
        </type>
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech" />
        <type api="T:OOAdvantech.AccessorBuilder" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.AccessorBuilder.GetConstructorInvoker(System.Reflection.ConstructorInfo)">
      <apidata name="GetConstructorInvoker" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="constInfo">
          <type api="T:System.Reflection.ConstructorInfo" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:OOAdvantech.AccessorBuilder.FastInvokeHandler" ref="true">
          <type api="T:OOAdvantech.AccessorBuilder" ref="true" />
        </type>
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech" />
        <type api="T:OOAdvantech.AccessorBuilder" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.AccessorBuilder.GetDefaultValue(System.Type)">
      <apidata name="GetDefaultValue" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech" />
        <type api="T:OOAdvantech.AccessorBuilder" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.AccessorBuilder.GetFieldAccessor(System.Reflection.FieldInfo)">
      <apidata name="GetFieldAccessor" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="fieldInfo">
          <type api="T:System.Reflection.FieldInfo" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:OOAdvantech.AccessorBuilder.FieldPropertyAccessor" ref="true">
          <type api="T:OOAdvantech.AccessorBuilder" ref="true" />
        </type>
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech" />
        <type api="T:OOAdvantech.AccessorBuilder" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.AccessorBuilder.GetInterfaceTypeBuilder(System.String)">
      <apidata name="GetInterfaceTypeBuilder" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="interfaceName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Reflection.Emit.TypeBuilder" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech" />
        <type api="T:OOAdvantech.AccessorBuilder" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.AccessorBuilder.GetMethodInvoker(System.Reflection.MethodInfo)">
      <apidata name="GetMethodInvoker" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="methodInfo">
          <type api="T:System.Reflection.MethodInfo" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:OOAdvantech.AccessorBuilder.FastInvokeHandler" ref="true">
          <type api="T:OOAdvantech.AccessorBuilder" ref="true" />
        </type>
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech" />
        <type api="T:OOAdvantech.AccessorBuilder" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.AccessorBuilder.GetPropertyAccessor(System.Reflection.PropertyInfo)">
      <apidata name="GetPropertyAccessor" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="propertyInfo">
          <type api="T:System.Reflection.PropertyInfo" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:OOAdvantech.AccessorBuilder.FieldPropertyAccessor" ref="true">
          <type api="T:OOAdvantech.AccessorBuilder" ref="true" />
        </type>
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech" />
        <type api="T:OOAdvantech.AccessorBuilder" ref="true" />
      </containers>
    </api>
    <api id="T:OOAdvantech.AccessorBuilder.FastInvokeHandler">
      <apidata name="FastInvokeHandler" group="type" subgroup="delegate" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <parameters>
        <parameter name="target">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="paramters">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech" />
        <type api="T:OOAdvantech.AccessorBuilder" ref="true" />
      </containers>
    </api>
    <api id="T:OOAdvantech.AccessorBuilder.FieldPropertyAccessor">
      <apidata name="FieldPropertyAccessor" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="F:OOAdvantech.AccessorBuilder.FieldPropertyAccessor.MemberInfo" />
        <element api="M:OOAdvantech.AccessorBuilder.FieldPropertyAccessor.#ctor" />
        <element api="M:OOAdvantech.AccessorBuilder.FieldPropertyAccessor.#ctor(System.Reflection.MemberInfo,System.Boolean,System.Boolean)" />
        <element api="P:OOAdvantech.AccessorBuilder.FieldPropertyAccessor.GetValue" />
        <element api="P:OOAdvantech.AccessorBuilder.FieldPropertyAccessor.SetValue" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech" />
        <type api="T:OOAdvantech.AccessorBuilder" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.AccessorBuilder.FieldPropertyAccessor.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech" />
        <type api="T:OOAdvantech.AccessorBuilder.FieldPropertyAccessor" ref="true">
          <type api="T:OOAdvantech.AccessorBuilder" ref="true" />
        </type>
      </containers>
    </api>
    <api id="M:OOAdvantech.AccessorBuilder.FieldPropertyAccessor.#ctor(System.Reflection.MemberInfo,System.Boolean,System.Boolean)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="memberInfo">
          <type api="T:System.Reflection.MemberInfo" ref="true" />
        </parameter>
        <parameter name="isMember">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="initializationRequired">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech" />
        <type api="T:OOAdvantech.AccessorBuilder.FieldPropertyAccessor" ref="true">
          <type api="T:OOAdvantech.AccessorBuilder" ref="true" />
        </type>
      </containers>
    </api>
    <api id="P:OOAdvantech.AccessorBuilder.FieldPropertyAccessor.GetValue">
      <apidata name="GetValue" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_GetValue" />
      <returns>
        <type api="T:OOAdvantech.AccessorBuilder.GetHandler" ref="true">
          <type api="T:OOAdvantech.AccessorBuilder" ref="true" />
        </type>
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech" />
        <type api="T:OOAdvantech.AccessorBuilder.FieldPropertyAccessor" ref="true">
          <type api="T:OOAdvantech.AccessorBuilder" ref="true" />
        </type>
      </containers>
    </api>
    <api id="F:OOAdvantech.AccessorBuilder.FieldPropertyAccessor.MemberInfo">
      <apidata name="MemberInfo" group="member" subgroup="field" />
      <memberdata visibility="public" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Reflection.MemberInfo" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech" />
        <type api="T:OOAdvantech.AccessorBuilder.FieldPropertyAccessor" ref="true">
          <type api="T:OOAdvantech.AccessorBuilder" ref="true" />
        </type>
      </containers>
    </api>
    <api id="P:OOAdvantech.AccessorBuilder.FieldPropertyAccessor.SetValue">
      <apidata name="SetValue" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_SetValue" />
      <returns>
        <type api="T:OOAdvantech.AccessorBuilder.SetHandler" ref="true">
          <type api="T:OOAdvantech.AccessorBuilder" ref="true" />
        </type>
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech" />
        <type api="T:OOAdvantech.AccessorBuilder.FieldPropertyAccessor" ref="true">
          <type api="T:OOAdvantech.AccessorBuilder" ref="true" />
        </type>
      </containers>
    </api>
    <api id="T:OOAdvantech.AccessorBuilder.GetHandler">
      <apidata name="GetHandler" group="type" subgroup="delegate" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <parameters>
        <parameter name="source">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech" />
        <type api="T:OOAdvantech.AccessorBuilder" ref="true" />
      </containers>
    </api>
    <api id="T:OOAdvantech.AccessorBuilder.InstantiateObjectHandler">
      <apidata name="InstantiateObjectHandler" group="type" subgroup="delegate" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech" />
        <type api="T:OOAdvantech.AccessorBuilder" ref="true" />
      </containers>
    </api>
    <api id="T:OOAdvantech.AccessorBuilder.SetHandler">
      <apidata name="SetHandler" group="type" subgroup="delegate" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <parameters>
        <parameter name="source">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech" />
        <type api="T:OOAdvantech.AccessorBuilder" ref="true" />
      </containers>
    </api>
    <api id="T:OOAdvantech.Distribution">
      <apidata name="Distribution" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:OOAdvantech.Distribution.ReferenceEquals(System.Object,System.Object)" />
        <element api="M:OOAdvantech.Distribution.#ctor" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Distribution.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech" />
        <type api="T:OOAdvantech.Distribution" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Distribution.ReferenceEquals(System.Object,System.Object)">
      <apidata name="ReferenceEquals" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="left">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="right">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech" />
        <type api="T:OOAdvantech.Distribution" ref="true" />
      </containers>
    </api>
    <api id="T:OOAdvantech.DragDropMethod">
      <apidata name="DragDropMethod" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="F:OOAdvantech.DragDropMethod.None" />
        <element api="F:OOAdvantech.DragDropMethod.Copy" />
        <element api="F:OOAdvantech.DragDropMethod.Move" />
        <element api="F:OOAdvantech.DragDropMethod.Link" />
      </elements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech" />
      </containers>
    </api>
    <api id="F:OOAdvantech.DragDropMethod.Copy">
      <apidata name="Copy" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:OOAdvantech.DragDropMethod" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech" />
        <type api="T:OOAdvantech.DragDropMethod" ref="false" />
      </containers>
    </api>
    <api id="F:OOAdvantech.DragDropMethod.Link">
      <apidata name="Link" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:OOAdvantech.DragDropMethod" ref="false" />
      </returns>
      <value>4</value>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech" />
        <type api="T:OOAdvantech.DragDropMethod" ref="false" />
      </containers>
    </api>
    <api id="F:OOAdvantech.DragDropMethod.Move">
      <apidata name="Move" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:OOAdvantech.DragDropMethod" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech" />
        <type api="T:OOAdvantech.DragDropMethod" ref="false" />
      </containers>
    </api>
    <api id="F:OOAdvantech.DragDropMethod.None">
      <apidata name="None" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:OOAdvantech.DragDropMethod" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech" />
        <type api="T:OOAdvantech.DragDropMethod" ref="false" />
      </containers>
    </api>
    <api id="T:OOAdvantech.EventUnderProtection">
      <apidata name="EventUnderProtection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:OOAdvantech.EventUnderProtection.Invoke``1(``0@,OOAdvantech.EventUnderProtection.ExceptionHandling,System.Object[])" />
        <element api="M:OOAdvantech.EventUnderProtection.#ctor" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech" />
      </containers>
    </api>
    <api id="M:OOAdvantech.EventUnderProtection.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech" />
        <type api="T:OOAdvantech.EventUnderProtection" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.EventUnderProtection.Invoke``1(``0@,OOAdvantech.EventUnderProtection.ExceptionHandling,System.Object[])">
      <apidata name="Invoke" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="_event">
          <referenceTo>
            <template name="T" index="0" api="M:OOAdvantech.EventUnderProtection.Invoke``1(``0@,OOAdvantech.EventUnderProtection.ExceptionHandling,System.Object[])" />
          </referenceTo>
        </parameter>
        <parameter name="exceptionHandling">
          <type api="T:OOAdvantech.EventUnderProtection.ExceptionHandling" ref="false">
            <type api="T:OOAdvantech.EventUnderProtection" ref="true" />
          </type>
        </parameter>
        <parameter name="eventParams" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech" />
        <type api="T:OOAdvantech.EventUnderProtection" ref="true" />
      </containers>
    </api>
    <api id="T:OOAdvantech.EventUnderProtection.EventHandlerException">
      <apidata name="EventHandlerException" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" layout="sequential" format="ansi" />
      <elements>
        <element api="F:OOAdvantech.EventUnderProtection.EventHandlerException.Exception" />
        <element api="F:OOAdvantech.EventUnderProtection.EventHandlerException.EventHandler" />
        <element api="M:OOAdvantech.EventUnderProtection.EventHandlerException.#ctor(System.Delegate,System.Exception)" />
        <element api="M:System.ValueType.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.Equals(System.Object)">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.ValueType" ref="true" />
          </containers>
        </element>
        <element api="M:System.ValueType.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.GetHashCode">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.ValueType" ref="true" />
          </containers>
        </element>
        <element api="M:System.ValueType.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.ToString">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.ValueType" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech" />
        <type api="T:OOAdvantech.EventUnderProtection" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.EventUnderProtection.EventHandlerException.#ctor(System.Delegate,System.Exception)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="eventHandler">
          <type api="T:System.Delegate" ref="true" />
        </parameter>
        <parameter name="exception">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech" />
        <type api="T:OOAdvantech.EventUnderProtection.EventHandlerException" ref="false">
          <type api="T:OOAdvantech.EventUnderProtection" ref="true" />
        </type>
      </containers>
    </api>
    <api id="F:OOAdvantech.EventUnderProtection.EventHandlerException.EventHandler">
      <apidata name="EventHandler" group="member" subgroup="field" />
      <memberdata visibility="public" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Delegate" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech" />
        <type api="T:OOAdvantech.EventUnderProtection.EventHandlerException" ref="false">
          <type api="T:OOAdvantech.EventUnderProtection" ref="true" />
        </type>
      </containers>
    </api>
    <api id="F:OOAdvantech.EventUnderProtection.EventHandlerException.Exception">
      <apidata name="Exception" group="member" subgroup="field" />
      <memberdata visibility="public" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Exception" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech" />
        <type api="T:OOAdvantech.EventUnderProtection.EventHandlerException" ref="false">
          <type api="T:OOAdvantech.EventUnderProtection" ref="true" />
        </type>
      </containers>
    </api>
    <api id="T:OOAdvantech.EventUnderProtection.ExceptionHandling">
      <apidata name="ExceptionHandling" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="F:OOAdvantech.EventUnderProtection.ExceptionHandling.Default" />
        <element api="F:OOAdvantech.EventUnderProtection.ExceptionHandling.IgnoreExceptions" />
        <element api="F:OOAdvantech.EventUnderProtection.ExceptionHandling.RemoveEventHandlersWithException" />
        <element api="F:OOAdvantech.EventUnderProtection.ExceptionHandling.RemoveDisconnectedEventHandlers" />
        <element api="F:OOAdvantech.EventUnderProtection.ExceptionHandling.CatchExceptions" />
      </elements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech" />
        <type api="T:OOAdvantech.EventUnderProtection" ref="true" />
      </containers>
    </api>
    <api id="F:OOAdvantech.EventUnderProtection.ExceptionHandling.CatchExceptions">
      <apidata name="CatchExceptions" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:OOAdvantech.EventUnderProtection.ExceptionHandling" ref="false">
          <type api="T:OOAdvantech.EventUnderProtection" ref="true" />
        </type>
      </returns>
      <value>8</value>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech" />
        <type api="T:OOAdvantech.EventUnderProtection.ExceptionHandling" ref="false">
          <type api="T:OOAdvantech.EventUnderProtection" ref="true" />
        </type>
      </containers>
    </api>
    <api id="F:OOAdvantech.EventUnderProtection.ExceptionHandling.Default">
      <apidata name="Default" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:OOAdvantech.EventUnderProtection.ExceptionHandling" ref="false">
          <type api="T:OOAdvantech.EventUnderProtection" ref="true" />
        </type>
      </returns>
      <value>0</value>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech" />
        <type api="T:OOAdvantech.EventUnderProtection.ExceptionHandling" ref="false">
          <type api="T:OOAdvantech.EventUnderProtection" ref="true" />
        </type>
      </containers>
    </api>
    <api id="F:OOAdvantech.EventUnderProtection.ExceptionHandling.IgnoreExceptions">
      <apidata name="IgnoreExceptions" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:OOAdvantech.EventUnderProtection.ExceptionHandling" ref="false">
          <type api="T:OOAdvantech.EventUnderProtection" ref="true" />
        </type>
      </returns>
      <value>1</value>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech" />
        <type api="T:OOAdvantech.EventUnderProtection.ExceptionHandling" ref="false">
          <type api="T:OOAdvantech.EventUnderProtection" ref="true" />
        </type>
      </containers>
    </api>
    <api id="F:OOAdvantech.EventUnderProtection.ExceptionHandling.RemoveDisconnectedEventHandlers">
      <apidata name="RemoveDisconnectedEventHandlers" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:OOAdvantech.EventUnderProtection.ExceptionHandling" ref="false">
          <type api="T:OOAdvantech.EventUnderProtection" ref="true" />
        </type>
      </returns>
      <value>4</value>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech" />
        <type api="T:OOAdvantech.EventUnderProtection.ExceptionHandling" ref="false">
          <type api="T:OOAdvantech.EventUnderProtection" ref="true" />
        </type>
      </containers>
    </api>
    <api id="F:OOAdvantech.EventUnderProtection.ExceptionHandling.RemoveEventHandlersWithException">
      <apidata name="RemoveEventHandlersWithException" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:OOAdvantech.EventUnderProtection.ExceptionHandling" ref="false">
          <type api="T:OOAdvantech.EventUnderProtection" ref="true" />
        </type>
      </returns>
      <value>2</value>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech" />
        <type api="T:OOAdvantech.EventUnderProtection.ExceptionHandling" ref="false">
          <type api="T:OOAdvantech.EventUnderProtection" ref="true" />
        </type>
      </containers>
    </api>
    <api id="T:OOAdvantech.EventUnderProtection.MulticastExeption">
      <apidata name="MulticastExeption" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="F:OOAdvantech.EventUnderProtection.MulticastExeption.Exceptions" />
        <element api="M:OOAdvantech.EventUnderProtection.MulticastExeption.#ctor(System.String,System.Collections.Generic.List{OOAdvantech.EventUnderProtection.EventHandlerException})" />
        <element api="M:System.Exception.GetBaseException">
          <apidata name="GetBaseException" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.GetBaseException">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.ToString">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.ToString">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <apidata name="GetObjectData" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="info">
              <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
            </parameter>
            <parameter name="context">
              <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
              <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
            </member>
            <member api="M:System.Runtime.InteropServices._Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Security.Permissions.SecurityPermissionAttribute" ref="true" />
              <argument>
                <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
                <enumValue>
                  <field name="LinkDemand" />
                </enumValue>
              </argument>
              <assignment name="Flags">
                <type api="T:System.Security.Permissions.SecurityPermissionFlag" ref="false" />
                <enumValue>
                  <field name="SerializationFormatter" />
                </enumValue>
              </assignment>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Exception.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.GetType">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Message">
          <apidata name="Message" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_Message" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.Message">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Data">
          <apidata name="Data" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_Data" />
          <returns>
            <type api="T:System.Collections.IDictionary" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.InnerException">
          <apidata name="InnerException" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_InnerException" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.InnerException">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.TargetSite">
          <apidata name="TargetSite" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_TargetSite" />
          <returns>
            <type api="T:System.Reflection.MethodBase" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.TargetSite">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.StackTrace">
          <apidata name="StackTrace" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_StackTrace" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.StackTrace">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.HelpLink">
          <apidata name="HelpLink" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_HelpLink" />
          <setter name="set_HelpLink" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.HelpLink">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Source">
          <apidata name="Source" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Source" />
          <setter name="set_Source" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.Source">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.HResult">
          <apidata name="HResult" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_HResult" />
          <setter name="set_HResult" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech" />
        <type api="T:OOAdvantech.EventUnderProtection" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.EventUnderProtection.MulticastExeption.#ctor(System.String,System.Collections.Generic.List{OOAdvantech.EventUnderProtection.EventHandlerException})">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="exceptions">
          <type api="T:System.Collections.Generic.List`1" ref="true">
            <specialization>
              <type api="T:OOAdvantech.EventUnderProtection.EventHandlerException" ref="false">
                <type api="T:OOAdvantech.EventUnderProtection" ref="true" />
              </type>
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech" />
        <type api="T:OOAdvantech.EventUnderProtection.MulticastExeption" ref="true">
          <type api="T:OOAdvantech.EventUnderProtection" ref="true" />
        </type>
      </containers>
    </api>
    <api id="F:OOAdvantech.EventUnderProtection.MulticastExeption.Exceptions">
      <apidata name="Exceptions" group="member" subgroup="field" />
      <memberdata visibility="public" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Collections.Generic.List`1" ref="true">
          <specialization>
            <type api="T:OOAdvantech.EventUnderProtection.EventHandlerException" ref="false">
              <type api="T:OOAdvantech.EventUnderProtection" ref="true" />
            </type>
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech" />
        <type api="T:OOAdvantech.EventUnderProtection.MulticastExeption" ref="true">
          <type api="T:OOAdvantech.EventUnderProtection" ref="true" />
        </type>
      </containers>
    </api>
    <api id="T:OOAdvantech.ExtensionProperties">
      <apidata name="ExtensionProperties" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:OOAdvantech.Transactions.ITransactionalObject" ref="true" />
        <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
      </implements>
      <elements>
        <element api="M:OOAdvantech.ExtensionProperties.#ctor" />
        <element api="M:OOAdvantech.ExtensionProperties.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:OOAdvantech.ExtensionProperties.IsTransactional(System.Type)" />
        <element api="M:OOAdvantech.ExtensionProperties.GetExtensionPropertiesField(System.Type)" />
        <element api="M:OOAdvantech.ExtensionProperties.GetExtensionPropertiesFromObject(System.Object)" />
        <element api="M:OOAdvantech.ExtensionProperties.SetProperty(System.String,System.Object)" />
        <element api="M:OOAdvantech.ExtensionProperties.GetProperty(System.String)" />
        <element api="M:OOAdvantech.ExtensionProperties.RemoveProperty(System.String)" />
        <element api="M:OOAdvantech.ExtensionProperties.MergeChanges(OOAdvantech.Transactions.Transaction,OOAdvantech.Transactions.Transaction)" />
        <element api="M:OOAdvantech.ExtensionProperties.MarkChanges(OOAdvantech.Transactions.Transaction)" />
        <element api="M:OOAdvantech.ExtensionProperties.MarkChanges(OOAdvantech.Transactions.Transaction,System.Reflection.FieldInfo[])" />
        <element api="M:OOAdvantech.ExtensionProperties.UndoChanges(OOAdvantech.Transactions.Transaction)" />
        <element api="M:OOAdvantech.ExtensionProperties.CommitChanges(OOAdvantech.Transactions.Transaction)" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:OOAdvantech.Transactions.ContainByValue" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:OOAdvantech.ExtensionProperties.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech" />
        <type api="T:OOAdvantech.ExtensionProperties" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.ExtensionProperties.CommitChanges(OOAdvantech.Transactions.Transaction)">
      <apidata name="CommitChanges" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="transaction">
          <type api="T:OOAdvantech.Transactions.Transaction" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:OOAdvantech.Transactions.ITransactionalObject.CommitChanges(OOAdvantech.Transactions.Transaction)">
          <type api="T:OOAdvantech.Transactions.ITransactionalObject" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech" />
        <type api="T:OOAdvantech.ExtensionProperties" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.ExtensionProperties.GetExtensionPropertiesField(System.Type)">
      <apidata name="GetExtensionPropertiesField" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="typeWithExtensionProperties">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Reflection.FieldInfo" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech" />
        <type api="T:OOAdvantech.ExtensionProperties" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.ExtensionProperties.GetExtensionPropertiesFromObject(System.Object)">
      <apidata name="GetExtensionPropertiesFromObject" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="objectWithExtensionProperties">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:OOAdvantech.ExtensionProperties" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech" />
        <type api="T:OOAdvantech.ExtensionProperties" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.ExtensionProperties.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <apidata name="GetObjectData" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech" />
        <type api="T:OOAdvantech.ExtensionProperties" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.ExtensionProperties.GetProperty(System.String)">
      <apidata name="GetProperty" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="propertyName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech" />
        <type api="T:OOAdvantech.ExtensionProperties" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.ExtensionProperties.IsTransactional(System.Type)">
      <apidata name="IsTransactional" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech" />
        <type api="T:OOAdvantech.ExtensionProperties" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.ExtensionProperties.MarkChanges(OOAdvantech.Transactions.Transaction)">
      <apidata name="MarkChanges" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="transaction">
          <type api="T:OOAdvantech.Transactions.Transaction" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:OOAdvantech.Transactions.ITransactionalObject.MarkChanges(OOAdvantech.Transactions.Transaction)">
          <type api="T:OOAdvantech.Transactions.ITransactionalObject" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech" />
        <type api="T:OOAdvantech.ExtensionProperties" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.ExtensionProperties.MarkChanges(OOAdvantech.Transactions.Transaction,System.Reflection.FieldInfo[])">
      <apidata name="MarkChanges" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="transaction">
          <type api="T:OOAdvantech.Transactions.Transaction" ref="true" />
        </parameter>
        <parameter name="fields">
          <arrayOf rank="1">
            <type api="T:System.Reflection.FieldInfo" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <implements>
        <member api="M:OOAdvantech.Transactions.ITransactionalObject.MarkChanges(OOAdvantech.Transactions.Transaction,System.Reflection.FieldInfo[])">
          <type api="T:OOAdvantech.Transactions.ITransactionalObject" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech" />
        <type api="T:OOAdvantech.ExtensionProperties" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.ExtensionProperties.MergeChanges(OOAdvantech.Transactions.Transaction,OOAdvantech.Transactions.Transaction)">
      <apidata name="MergeChanges" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="masterTransaction">
          <type api="T:OOAdvantech.Transactions.Transaction" ref="true" />
        </parameter>
        <parameter name="nestedTransaction">
          <type api="T:OOAdvantech.Transactions.Transaction" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:OOAdvantech.Transactions.ITransactionalObject.MergeChanges(OOAdvantech.Transactions.Transaction,OOAdvantech.Transactions.Transaction)">
          <type api="T:OOAdvantech.Transactions.ITransactionalObject" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech" />
        <type api="T:OOAdvantech.ExtensionProperties" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.ExtensionProperties.RemoveProperty(System.String)">
      <apidata name="RemoveProperty" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="propertyName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech" />
        <type api="T:OOAdvantech.ExtensionProperties" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.ExtensionProperties.SetProperty(System.String,System.Object)">
      <apidata name="SetProperty" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="propertyName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="propertyValue">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech" />
        <type api="T:OOAdvantech.ExtensionProperties" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.ExtensionProperties.UndoChanges(OOAdvantech.Transactions.Transaction)">
      <apidata name="UndoChanges" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="transaction">
          <type api="T:OOAdvantech.Transactions.Transaction" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:OOAdvantech.Transactions.ITransactionalObject.UndoChanges(OOAdvantech.Transactions.Transaction)">
          <type api="T:OOAdvantech.Transactions.ITransactionalObject" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech" />
        <type api="T:OOAdvantech.ExtensionProperties" ref="true" />
      </containers>
    </api>
    <api id="T:OOAdvantech.IAccount`1">
      <apidata name="IAccount" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <templates>
        <template name="T" />
      </templates>
      <elements>
        <element api="M:OOAdvantech.IAccount`1.GetTransaction(`0)" />
        <element api="M:OOAdvantech.IAccount`1.MakeTransaction(System.Object)" />
      </elements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech" />
      </containers>
    </api>
    <api id="M:OOAdvantech.IAccount`1.GetTransaction(`0)">
      <apidata name="GetTransaction" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="newValue">
          <template name="T" index="0" api="T:OOAdvantech.IAccount`1" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech" />
        <type api="T:OOAdvantech.IAccount`1" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.IAccount`1.MakeTransaction(System.Object)">
      <apidata name="MakeTransaction" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="transaction">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="T:OOAdvantech.IAccount`1" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech" />
        <type api="T:OOAdvantech.IAccount`1" ref="true" />
      </containers>
    </api>
    <api id="T:OOAdvantech.Member`1">
      <apidata name="Member" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:OOAdvantech.MemberAcount`1" ref="true" />
        </descendents>
      </family>
      <templates>
        <template name="T" />
      </templates>
      <implements>
        <type api="T:OOAdvantech.Transactions.ITransactionalObject" ref="true" />
      </implements>
      <elements>
        <element api="F:OOAdvantech.Member`1._Value" />
        <element api="M:OOAdvantech.Member`1.#ctor(`0)" />
        <element api="M:OOAdvantech.Member`1.#ctor" />
        <element api="M:OOAdvantech.Member`1.op_Implicit(OOAdvantech.Member{`0})~`0" />
        <element api="M:OOAdvantech.Member`1.SetValue(OOAdvantech.AccessorBuilder.FieldPropertyAccessor,System.Object@,System.Object)" />
        <element api="M:OOAdvantech.Member`1.GetValue(OOAdvantech.AccessorBuilder.GetHandler,System.Object)" />
        <element api="M:OOAdvantech.Member`1.OOAdvantech#Transactions#ITransactionalObject#MergeChanges(OOAdvantech.Transactions.Transaction,OOAdvantech.Transactions.Transaction)" />
        <element api="M:OOAdvantech.Member`1.OOAdvantech#Transactions#ITransactionalObject#MarkChanges(OOAdvantech.Transactions.Transaction)" />
        <element api="M:OOAdvantech.Member`1.OOAdvantech#Transactions#ITransactionalObject#MarkChanges(OOAdvantech.Transactions.Transaction,System.Reflection.FieldInfo[])" />
        <element api="M:OOAdvantech.Member`1.OOAdvantech#Transactions#ITransactionalObject#UndoChanges(OOAdvantech.Transactions.Transaction)" />
        <element api="M:OOAdvantech.Member`1.OOAdvantech#Transactions#ITransactionalObject#CommitChanges(OOAdvantech.Transactions.Transaction)" />
        <element api="M:OOAdvantech.Member`1.MergeChanges(OOAdvantech.Transactions.Transaction,OOAdvantech.Transactions.Transaction)" />
        <element api="M:OOAdvantech.Member`1.MarkChanges(OOAdvantech.Transactions.Transaction)" />
        <element api="M:OOAdvantech.Member`1.MarkChanges(OOAdvantech.Transactions.Transaction,System.Reflection.FieldInfo[])" />
        <element api="M:OOAdvantech.Member`1.UndoChanges(OOAdvantech.Transactions.Transaction)" />
        <element api="M:OOAdvantech.Member`1.CommitChanges(OOAdvantech.Transactions.Transaction)" />
        <element api="P:OOAdvantech.Member`1.Value" />
        <element api="P:OOAdvantech.Member`1.UnInitialized" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:OOAdvantech.Transactions.ContainByValue" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:OOAdvantech.Member`1.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech" />
        <type api="T:OOAdvantech.Member`1" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Member`1.#ctor(`0)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="value">
          <template name="T" index="0" api="T:OOAdvantech.Member`1" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech" />
        <type api="T:OOAdvantech.Member`1" ref="true" />
      </containers>
    </api>
    <api id="F:OOAdvantech.Member`1._Value">
      <apidata name="_Value" group="member" subgroup="field" />
      <memberdata visibility="family" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <template name="T" index="0" api="T:OOAdvantech.Member`1" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech" />
        <type api="T:OOAdvantech.Member`1" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Member`1.CommitChanges(OOAdvantech.Transactions.Transaction)">
      <apidata name="CommitChanges" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="transaction">
          <type api="T:OOAdvantech.Transactions.Transaction" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech" />
        <type api="T:OOAdvantech.Member`1" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Member`1.GetValue(OOAdvantech.AccessorBuilder.GetHandler,System.Object)">
      <apidata name="GetValue" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="fieldGet">
          <type api="T:OOAdvantech.AccessorBuilder.GetHandler" ref="true">
            <type api="T:OOAdvantech.AccessorBuilder" ref="true" />
          </type>
        </parameter>
        <parameter name="memberOwner">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech" />
        <type api="T:OOAdvantech.Member`1" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Member`1.MarkChanges(OOAdvantech.Transactions.Transaction)">
      <apidata name="MarkChanges" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="transaction">
          <type api="T:OOAdvantech.Transactions.Transaction" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech" />
        <type api="T:OOAdvantech.Member`1" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Member`1.MarkChanges(OOAdvantech.Transactions.Transaction,System.Reflection.FieldInfo[])">
      <apidata name="MarkChanges" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="transaction">
          <type api="T:OOAdvantech.Transactions.Transaction" ref="true" />
        </parameter>
        <parameter name="fields">
          <arrayOf rank="1">
            <type api="T:System.Reflection.FieldInfo" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech" />
        <type api="T:OOAdvantech.Member`1" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Member`1.MergeChanges(OOAdvantech.Transactions.Transaction,OOAdvantech.Transactions.Transaction)">
      <apidata name="MergeChanges" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="masterTransaction">
          <type api="T:OOAdvantech.Transactions.Transaction" ref="true" />
        </parameter>
        <parameter name="nestedTransaction">
          <type api="T:OOAdvantech.Transactions.Transaction" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech" />
        <type api="T:OOAdvantech.Member`1" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Member`1.OOAdvantech#Transactions#ITransactionalObject#CommitChanges(OOAdvantech.Transactions.Transaction)">
      <apidata name="CommitChanges" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="transaction">
          <type api="T:OOAdvantech.Transactions.Transaction" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:OOAdvantech.Transactions.ITransactionalObject.CommitChanges(OOAdvantech.Transactions.Transaction)">
          <type api="T:OOAdvantech.Transactions.ITransactionalObject" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech" />
        <type api="T:OOAdvantech.Member`1" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Member`1.OOAdvantech#Transactions#ITransactionalObject#MarkChanges(OOAdvantech.Transactions.Transaction)">
      <apidata name="MarkChanges" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="transaction">
          <type api="T:OOAdvantech.Transactions.Transaction" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:OOAdvantech.Transactions.ITransactionalObject.MarkChanges(OOAdvantech.Transactions.Transaction)">
          <type api="T:OOAdvantech.Transactions.ITransactionalObject" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech" />
        <type api="T:OOAdvantech.Member`1" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Member`1.OOAdvantech#Transactions#ITransactionalObject#MarkChanges(OOAdvantech.Transactions.Transaction,System.Reflection.FieldInfo[])">
      <apidata name="MarkChanges" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="transaction">
          <type api="T:OOAdvantech.Transactions.Transaction" ref="true" />
        </parameter>
        <parameter name="fields">
          <arrayOf rank="1">
            <type api="T:System.Reflection.FieldInfo" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <implements>
        <member api="M:OOAdvantech.Transactions.ITransactionalObject.MarkChanges(OOAdvantech.Transactions.Transaction,System.Reflection.FieldInfo[])">
          <type api="T:OOAdvantech.Transactions.ITransactionalObject" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech" />
        <type api="T:OOAdvantech.Member`1" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Member`1.OOAdvantech#Transactions#ITransactionalObject#MergeChanges(OOAdvantech.Transactions.Transaction,OOAdvantech.Transactions.Transaction)">
      <apidata name="MergeChanges" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="masterTransaction">
          <type api="T:OOAdvantech.Transactions.Transaction" ref="true" />
        </parameter>
        <parameter name="nestedTransaction">
          <type api="T:OOAdvantech.Transactions.Transaction" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:OOAdvantech.Transactions.ITransactionalObject.MergeChanges(OOAdvantech.Transactions.Transaction,OOAdvantech.Transactions.Transaction)">
          <type api="T:OOAdvantech.Transactions.ITransactionalObject" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech" />
        <type api="T:OOAdvantech.Member`1" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Member`1.OOAdvantech#Transactions#ITransactionalObject#UndoChanges(OOAdvantech.Transactions.Transaction)">
      <apidata name="UndoChanges" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="transaction">
          <type api="T:OOAdvantech.Transactions.Transaction" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:OOAdvantech.Transactions.ITransactionalObject.UndoChanges(OOAdvantech.Transactions.Transaction)">
          <type api="T:OOAdvantech.Transactions.ITransactionalObject" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech" />
        <type api="T:OOAdvantech.Member`1" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Member`1.op_Implicit(OOAdvantech.Member{`0})~`0">
      <apidata name="Implicit" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="p">
          <type api="T:OOAdvantech.Member`1" ref="true">
            <specialization>
              <template name="T" index="0" api="T:OOAdvantech.Member`1" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="T:OOAdvantech.Member`1" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech" />
        <type api="T:OOAdvantech.Member`1" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Member`1.SetValue(OOAdvantech.AccessorBuilder.FieldPropertyAccessor,System.Object@,System.Object)">
      <apidata name="SetValue" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="fastFieldAccessor">
          <type api="T:OOAdvantech.AccessorBuilder.FieldPropertyAccessor" ref="true">
            <type api="T:OOAdvantech.AccessorBuilder" ref="true" />
          </type>
        </parameter>
        <parameter name="memberOwner">
          <referenceTo>
            <type api="T:System.Object" ref="true" />
          </referenceTo>
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech" />
        <type api="T:OOAdvantech.Member`1" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Member`1.UndoChanges(OOAdvantech.Transactions.Transaction)">
      <apidata name="UndoChanges" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="transaction">
          <type api="T:OOAdvantech.Transactions.Transaction" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech" />
        <type api="T:OOAdvantech.Member`1" ref="true" />
      </containers>
    </api>
    <api id="P:OOAdvantech.Member`1.UnInitialized">
      <apidata name="UnInitialized" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_UnInitialized" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech" />
        <type api="T:OOAdvantech.Member`1" ref="true" />
      </containers>
    </api>
    <api id="P:OOAdvantech.Member`1.Value">
      <apidata name="Value" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Value" />
      <setter name="set_Value" />
      <returns>
        <template name="T" index="0" api="T:OOAdvantech.Member`1" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech" />
        <type api="T:OOAdvantech.Member`1" ref="true" />
      </containers>
    </api>
    <api id="T:OOAdvantech.MemberAcount`1">
      <apidata name="MemberAcount" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:OOAdvantech.Member`1" ref="true">
            <specialization>
              <template name="T" index="0" api="T:OOAdvantech.MemberAcount`1" />
            </specialization>
          </type>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="T">
          <constrained value="true" ctor="true" />
        </template>
      </templates>
      <elements>
        <element api="M:OOAdvantech.MemberAcount`1.#ctor" />
        <element api="M:OOAdvantech.MemberAcount`1.#ctor(`0)" />
        <element api="M:OOAdvantech.MemberAcount`1.CommitChanges(OOAdvantech.Transactions.Transaction)" />
        <element api="M:OOAdvantech.MemberAcount`1.MarkChanges(OOAdvantech.Transactions.Transaction)" />
        <element api="M:OOAdvantech.MemberAcount`1.MarkChanges(OOAdvantech.Transactions.Transaction,System.Reflection.FieldInfo[])" />
        <element api="M:OOAdvantech.MemberAcount`1.MergeChanges(OOAdvantech.Transactions.Transaction,OOAdvantech.Transactions.Transaction)" />
        <element api="M:OOAdvantech.MemberAcount`1.UndoChanges(OOAdvantech.Transactions.Transaction)" />
        <element api="P:OOAdvantech.MemberAcount`1.Value" />
        <element api="F:OOAdvantech.Member`1._Value" />
        <element api="M:OOAdvantech.Member`1.OOAdvantech#Transactions#ITransactionalObject#MergeChanges(OOAdvantech.Transactions.Transaction,OOAdvantech.Transactions.Transaction)" />
        <element api="M:OOAdvantech.Member`1.OOAdvantech#Transactions#ITransactionalObject#MarkChanges(OOAdvantech.Transactions.Transaction)" />
        <element api="M:OOAdvantech.Member`1.OOAdvantech#Transactions#ITransactionalObject#MarkChanges(OOAdvantech.Transactions.Transaction,System.Reflection.FieldInfo[])" />
        <element api="M:OOAdvantech.Member`1.OOAdvantech#Transactions#ITransactionalObject#UndoChanges(OOAdvantech.Transactions.Transaction)" />
        <element api="M:OOAdvantech.Member`1.OOAdvantech#Transactions#ITransactionalObject#CommitChanges(OOAdvantech.Transactions.Transaction)" />
        <element api="P:OOAdvantech.Member`1.UnInitialized" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MemberAcount`1.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech" />
        <type api="T:OOAdvantech.MemberAcount`1" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MemberAcount`1.#ctor(`0)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="value">
          <template name="T" index="0" api="T:OOAdvantech.MemberAcount`1" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech" />
        <type api="T:OOAdvantech.MemberAcount`1" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MemberAcount`1.CommitChanges(OOAdvantech.Transactions.Transaction)">
      <apidata name="CommitChanges" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:OOAdvantech.Member`1.CommitChanges(OOAdvantech.Transactions.Transaction)">
          <type api="T:OOAdvantech.Member`1" ref="true">
            <specialization>
              <template name="T" index="0" api="T:OOAdvantech.MemberAcount`1" />
            </specialization>
          </type>
        </member>
      </overrides>
      <parameters>
        <parameter name="transaction">
          <type api="T:OOAdvantech.Transactions.Transaction" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech" />
        <type api="T:OOAdvantech.MemberAcount`1" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MemberAcount`1.MarkChanges(OOAdvantech.Transactions.Transaction)">
      <apidata name="MarkChanges" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:OOAdvantech.Member`1.MarkChanges(OOAdvantech.Transactions.Transaction)">
          <type api="T:OOAdvantech.Member`1" ref="true">
            <specialization>
              <template name="T" index="0" api="T:OOAdvantech.MemberAcount`1" />
            </specialization>
          </type>
        </member>
      </overrides>
      <parameters>
        <parameter name="transaction">
          <type api="T:OOAdvantech.Transactions.Transaction" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech" />
        <type api="T:OOAdvantech.MemberAcount`1" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MemberAcount`1.MarkChanges(OOAdvantech.Transactions.Transaction,System.Reflection.FieldInfo[])">
      <apidata name="MarkChanges" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:OOAdvantech.Member`1.MarkChanges(OOAdvantech.Transactions.Transaction,System.Reflection.FieldInfo[])">
          <type api="T:OOAdvantech.Member`1" ref="true">
            <specialization>
              <template name="T" index="0" api="T:OOAdvantech.MemberAcount`1" />
            </specialization>
          </type>
        </member>
      </overrides>
      <parameters>
        <parameter name="transaction">
          <type api="T:OOAdvantech.Transactions.Transaction" ref="true" />
        </parameter>
        <parameter name="fields">
          <arrayOf rank="1">
            <type api="T:System.Reflection.FieldInfo" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech" />
        <type api="T:OOAdvantech.MemberAcount`1" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MemberAcount`1.MergeChanges(OOAdvantech.Transactions.Transaction,OOAdvantech.Transactions.Transaction)">
      <apidata name="MergeChanges" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:OOAdvantech.Member`1.MergeChanges(OOAdvantech.Transactions.Transaction,OOAdvantech.Transactions.Transaction)">
          <type api="T:OOAdvantech.Member`1" ref="true">
            <specialization>
              <template name="T" index="0" api="T:OOAdvantech.MemberAcount`1" />
            </specialization>
          </type>
        </member>
      </overrides>
      <parameters>
        <parameter name="masterTransaction">
          <type api="T:OOAdvantech.Transactions.Transaction" ref="true" />
        </parameter>
        <parameter name="nestedTransaction">
          <type api="T:OOAdvantech.Transactions.Transaction" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech" />
        <type api="T:OOAdvantech.MemberAcount`1" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MemberAcount`1.UndoChanges(OOAdvantech.Transactions.Transaction)">
      <apidata name="UndoChanges" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:OOAdvantech.Member`1.UndoChanges(OOAdvantech.Transactions.Transaction)">
          <type api="T:OOAdvantech.Member`1" ref="true">
            <specialization>
              <template name="T" index="0" api="T:OOAdvantech.MemberAcount`1" />
            </specialization>
          </type>
        </member>
      </overrides>
      <parameters>
        <parameter name="transaction">
          <type api="T:OOAdvantech.Transactions.Transaction" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech" />
        <type api="T:OOAdvantech.MemberAcount`1" ref="true" />
      </containers>
    </api>
    <api id="P:OOAdvantech.MemberAcount`1.Value">
      <apidata name="Value" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:OOAdvantech.Member`1.Value">
          <type api="T:OOAdvantech.Member`1" ref="true">
            <specialization>
              <template name="T" index="0" api="T:OOAdvantech.MemberAcount`1" />
            </specialization>
          </type>
        </member>
      </overrides>
      <propertydata get="true" set="true" />
      <getter name="get_Value" />
      <setter name="set_Value" />
      <returns>
        <template name="T" index="0" api="T:OOAdvantech.MemberAcount`1" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech" />
        <type api="T:OOAdvantech.MemberAcount`1" ref="true" />
      </containers>
    </api>
    <api id="T:OOAdvantech.ObjectChangeStateHandle">
      <apidata name="ObjectChangeStateHandle" group="type" subgroup="delegate" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <parameters>
        <parameter name="_object">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="member">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech" />
      </containers>
    </api>
    <api id="T:OOAdvantech.ObjectsContext">
      <apidata name="ObjectsContext" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.MarshalByRefObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:OOAdvantech.PersistenceLayer.ObjectStorage" ref="true" />
        </descendents>
      </family>
      <implements>
        <type api="T:OOAdvantech.Remoting.IExtMarshalByRefObject" ref="true" />
      </implements>
      <elements>
        <element api="M:OOAdvantech.ObjectsContext.Init" />
        <element api="M:OOAdvantech.ObjectsContext.#ctor" />
        <element api="M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="cloneIdentity">
              <type api="T:System.Boolean" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.MarshalByRefObject" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.MarshalByRefObject" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.MarshalByRefObject.GetLifetimeService">
          <apidata name="GetLifetimeService" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.MarshalByRefObject" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Security.Permissions.SecurityPermissionAttribute" ref="true" />
              <argument>
                <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
                <enumValue>
                  <field name="LinkDemand" />
                </enumValue>
              </argument>
              <assignment name="Flags">
                <type api="T:System.Security.Permissions.SecurityPermissionFlag" ref="false" />
                <enumValue>
                  <field name="Infrastructure" />
                </enumValue>
              </assignment>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.MarshalByRefObject.InitializeLifetimeService">
          <apidata name="InitializeLifetimeService" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.MarshalByRefObject" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Security.Permissions.SecurityPermissionAttribute" ref="true" />
              <argument>
                <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
                <enumValue>
                  <field name="LinkDemand" />
                </enumValue>
              </argument>
              <assignment name="Flags">
                <type api="T:System.Security.Permissions.SecurityPermissionFlag" ref="false" />
                <enumValue>
                  <field name="Infrastructure" />
                </enumValue>
              </assignment>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.MarshalByRefObject.CreateObjRef(System.Type)">
          <apidata name="CreateObjRef" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="requestedType">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Runtime.Remoting.ObjRef" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.MarshalByRefObject" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Security.Permissions.SecurityPermissionAttribute" ref="true" />
              <argument>
                <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
                <enumValue>
                  <field name="LinkDemand" />
                </enumValue>
              </argument>
              <assignment name="Flags">
                <type api="T:System.Security.Permissions.SecurityPermissionFlag" ref="false" />
                <enumValue>
                  <field name="Infrastructure" />
                </enumValue>
              </assignment>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech" />
      </containers>
    </api>
    <api id="M:OOAdvantech.ObjectsContext.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech" />
        <type api="T:OOAdvantech.ObjectsContext" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.ObjectsContext.Init">
      <apidata name="Init" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech" />
        <type api="T:OOAdvantech.ObjectsContext" ref="true" />
      </containers>
    </api>
    <api id="N:OOAdvantech.Collections">
      <apidata name="OOAdvantech.Collections" group="namespace" />
      <elements>
        <element api="T:OOAdvantech.Collections.Hashtable" />
        <element api="T:OOAdvantech.Collections.Map" />
        <element api="T:OOAdvantech.Collections.Member" />
        <element api="T:OOAdvantech.Collections.Stack" />
        <element api="T:OOAdvantech.Collections.StructureSet" />
        <element api="T:OOAdvantech.Collections.ArrayList" />
        <element api="T:OOAdvantech.Collections.Vector" />
        <element api="T:OOAdvantech.Collections.CollectionAccessType" />
        <element api="T:OOAdvantech.Collections.MemberList" />
        <element api="T:OOAdvantech.Collections.MemberList.MemberEnumerator" />
        <element api="T:OOAdvantech.Collections.Queue" />
      </elements>
    </api>
    <api id="T:OOAdvantech.Collections.ArrayList">
      <apidata name="ArrayList" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Collections.ArrayList" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:OOAdvantech.Collections.Vector" ref="true" />
        </descendents>
      </family>
      <implements>
        <type api="T:System.Runtime.Serialization.IDeserializationCallback" ref="true" />
      </implements>
      <elements>
        <element api="M:OOAdvantech.Collections.ArrayList.Clone" />
        <element api="M:OOAdvantech.Collections.ArrayList.#ctor(System.Int32)" />
        <element api="M:OOAdvantech.Collections.ArrayList.#ctor(System.Collections.ICollection)" />
        <element api="M:OOAdvantech.Collections.ArrayList.#ctor" />
        <element api="M:OOAdvantech.Collections.ArrayList.OnDeserialization(System.Object)" />
        <element api="M:System.Collections.ArrayList.Add(System.Object)">
          <apidata name="Add" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="value">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <implements>
            <member api="M:System.Collections.IList.Add(System.Object)">
              <type api="T:System.Collections.IList" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.ArrayList" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.ArrayList.AddRange(System.Collections.ICollection)">
          <apidata name="AddRange" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="c">
              <type api="T:System.Collections.ICollection" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.ArrayList" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.ArrayList.BinarySearch(System.Int32,System.Int32,System.Object,System.Collections.IComparer)">
          <apidata name="BinarySearch" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
            <parameter name="count">
              <type api="T:System.Int32" ref="false" />
            </parameter>
            <parameter name="value">
              <type api="T:System.Object" ref="true" />
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.IComparer" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.ArrayList" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.ArrayList.BinarySearch(System.Object)">
          <apidata name="BinarySearch" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="value">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.ArrayList" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.ArrayList.BinarySearch(System.Object,System.Collections.IComparer)">
          <apidata name="BinarySearch" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="value">
              <type api="T:System.Object" ref="true" />
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.IComparer" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.ArrayList" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.ArrayList.Clear">
          <apidata name="Clear" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <implements>
            <member api="M:System.Collections.IList.Clear">
              <type api="T:System.Collections.IList" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.ArrayList" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.ArrayList.Contains(System.Object)">
          <apidata name="Contains" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="item">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="M:System.Collections.IList.Contains(System.Object)">
              <type api="T:System.Collections.IList" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.ArrayList" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.ArrayList.CopyTo(System.Array)">
          <apidata name="CopyTo" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="array">
              <type api="T:System.Array" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.ArrayList" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.ArrayList.CopyTo(System.Array,System.Int32)">
          <apidata name="CopyTo" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="array">
              <type api="T:System.Array" ref="true" />
            </parameter>
            <parameter name="arrayIndex">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)">
              <type api="T:System.Collections.ICollection" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.ArrayList" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.ArrayList.CopyTo(System.Int32,System.Array,System.Int32,System.Int32)">
          <apidata name="CopyTo" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
            <parameter name="array">
              <type api="T:System.Array" ref="true" />
            </parameter>
            <parameter name="arrayIndex">
              <type api="T:System.Int32" ref="false" />
            </parameter>
            <parameter name="count">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.ArrayList" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.ArrayList.GetEnumerator">
          <apidata name="GetEnumerator" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Collections.IEnumerator" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Collections.IEnumerable.GetEnumerator">
              <type api="T:System.Collections.IEnumerable" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.ArrayList" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.ArrayList.GetEnumerator(System.Int32,System.Int32)">
          <apidata name="GetEnumerator" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
            <parameter name="count">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.IEnumerator" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.ArrayList" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.ArrayList.IndexOf(System.Object)">
          <apidata name="IndexOf" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="value">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <implements>
            <member api="M:System.Collections.IList.IndexOf(System.Object)">
              <type api="T:System.Collections.IList" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.ArrayList" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.ArrayList.IndexOf(System.Object,System.Int32)">
          <apidata name="IndexOf" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="value">
              <type api="T:System.Object" ref="true" />
            </parameter>
            <parameter name="startIndex">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.ArrayList" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.ArrayList.IndexOf(System.Object,System.Int32,System.Int32)">
          <apidata name="IndexOf" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="value">
              <type api="T:System.Object" ref="true" />
            </parameter>
            <parameter name="startIndex">
              <type api="T:System.Int32" ref="false" />
            </parameter>
            <parameter name="count">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.ArrayList" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.ArrayList.Insert(System.Int32,System.Object)">
          <apidata name="Insert" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
            <parameter name="value">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Collections.IList.Insert(System.Int32,System.Object)">
              <type api="T:System.Collections.IList" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.ArrayList" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.ArrayList.InsertRange(System.Int32,System.Collections.ICollection)">
          <apidata name="InsertRange" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
            <parameter name="c">
              <type api="T:System.Collections.ICollection" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.ArrayList" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.ArrayList.LastIndexOf(System.Object)">
          <apidata name="LastIndexOf" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="value">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.ArrayList" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.ArrayList.LastIndexOf(System.Object,System.Int32)">
          <apidata name="LastIndexOf" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="value">
              <type api="T:System.Object" ref="true" />
            </parameter>
            <parameter name="startIndex">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.ArrayList" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.ArrayList.LastIndexOf(System.Object,System.Int32,System.Int32)">
          <apidata name="LastIndexOf" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="value">
              <type api="T:System.Object" ref="true" />
            </parameter>
            <parameter name="startIndex">
              <type api="T:System.Int32" ref="false" />
            </parameter>
            <parameter name="count">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.ArrayList" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.ArrayList.Remove(System.Object)">
          <apidata name="Remove" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Collections.IList.Remove(System.Object)">
              <type api="T:System.Collections.IList" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.ArrayList" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.ArrayList.RemoveAt(System.Int32)">
          <apidata name="RemoveAt" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Collections.IList.RemoveAt(System.Int32)">
              <type api="T:System.Collections.IList" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.ArrayList" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.ArrayList.RemoveRange(System.Int32,System.Int32)">
          <apidata name="RemoveRange" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
            <parameter name="count">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.ArrayList" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.ArrayList.Reverse">
          <apidata name="Reverse" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.ArrayList" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.ArrayList.Reverse(System.Int32,System.Int32)">
          <apidata name="Reverse" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
            <parameter name="count">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.ArrayList" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.ArrayList.SetRange(System.Int32,System.Collections.ICollection)">
          <apidata name="SetRange" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
            <parameter name="c">
              <type api="T:System.Collections.ICollection" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.ArrayList" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.ArrayList.GetRange(System.Int32,System.Int32)">
          <apidata name="GetRange" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
            <parameter name="count">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.ArrayList" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.ArrayList" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.ArrayList.Sort">
          <apidata name="Sort" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.ArrayList" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.ArrayList.Sort(System.Collections.IComparer)">
          <apidata name="Sort" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="comparer">
              <type api="T:System.Collections.IComparer" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.ArrayList" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.ArrayList.Sort(System.Int32,System.Int32,System.Collections.IComparer)">
          <apidata name="Sort" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
            <parameter name="count">
              <type api="T:System.Int32" ref="false" />
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.IComparer" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.ArrayList" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.ArrayList.ToArray">
          <apidata name="ToArray" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <arrayOf rank="1">
              <type api="T:System.Object" ref="true" />
            </arrayOf>
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.ArrayList" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.ArrayList.ToArray(System.Type)">
          <apidata name="ToArray" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="type">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Array" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.ArrayList" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.ArrayList.TrimToSize">
          <apidata name="TrimToSize" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.ArrayList" ref="true" />
          </containers>
        </element>
        <element api="P:System.Collections.ArrayList.Capacity">
          <apidata name="Capacity" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Capacity" />
          <setter name="set_Capacity" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.ArrayList" ref="true" />
          </containers>
        </element>
        <element api="P:System.Collections.ArrayList.Count">
          <apidata name="Count" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_Count" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <implements>
            <member api="P:System.Collections.ICollection.Count">
              <type api="T:System.Collections.ICollection" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.ArrayList" ref="true" />
          </containers>
        </element>
        <element api="P:System.Collections.ArrayList.IsFixedSize">
          <apidata name="IsFixedSize" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_IsFixedSize" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:System.Collections.IList.IsFixedSize">
              <type api="T:System.Collections.IList" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.ArrayList" ref="true" />
          </containers>
        </element>
        <element api="P:System.Collections.ArrayList.IsReadOnly">
          <apidata name="IsReadOnly" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_IsReadOnly" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:System.Collections.IList.IsReadOnly">
              <type api="T:System.Collections.IList" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.ArrayList" ref="true" />
          </containers>
        </element>
        <element api="P:System.Collections.ArrayList.IsSynchronized">
          <apidata name="IsSynchronized" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_IsSynchronized" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:System.Collections.ICollection.IsSynchronized">
              <type api="T:System.Collections.ICollection" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.ArrayList" ref="true" />
          </containers>
        </element>
        <element api="P:System.Collections.ArrayList.SyncRoot">
          <apidata name="SyncRoot" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_SyncRoot" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Collections.ICollection.SyncRoot">
              <type api="T:System.Collections.ICollection" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.ArrayList" ref="true" />
          </containers>
        </element>
        <element api="P:System.Collections.ArrayList.Item(System.Int32)">
          <apidata name="Item" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Item" />
          <setter name="set_Item" />
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Collections.IList.Item(System.Int32)">
              <type api="T:System.Collections.IList" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.ArrayList" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Collections" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Collections.ArrayList.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Collections" />
        <type api="T:OOAdvantech.Collections.ArrayList" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Collections.ArrayList.#ctor(System.Collections.ICollection)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="c">
          <type api="T:System.Collections.ICollection" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Collections" />
        <type api="T:OOAdvantech.Collections.ArrayList" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Collections.ArrayList.#ctor(System.Int32)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="capacity">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Collections" />
        <type api="T:OOAdvantech.Collections.ArrayList" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Collections.ArrayList.Clone">
      <apidata name="Clone" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Collections.ArrayList.Clone">
          <type api="T:System.Collections.ArrayList" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ICloneable.Clone">
          <type api="T:System.ICloneable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Collections" />
        <type api="T:OOAdvantech.Collections.ArrayList" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Collections.ArrayList.OnDeserialization(System.Object)">
      <apidata name="OnDeserialization" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(System.Object)">
          <type api="T:System.Runtime.Serialization.IDeserializationCallback" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Collections" />
        <type api="T:OOAdvantech.Collections.ArrayList" ref="true" />
      </containers>
    </api>
    <api id="T:OOAdvantech.Collections.CollectionAccessType">
      <apidata name="CollectionAccessType" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="F:OOAdvantech.Collections.CollectionAccessType.ReadOnly" />
        <element api="F:OOAdvantech.Collections.CollectionAccessType.ReadWrite" />
      </elements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Collections" />
      </containers>
    </api>
    <api id="F:OOAdvantech.Collections.CollectionAccessType.ReadOnly">
      <apidata name="ReadOnly" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:OOAdvantech.Collections.CollectionAccessType" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Collections" />
        <type api="T:OOAdvantech.Collections.CollectionAccessType" ref="false" />
      </containers>
    </api>
    <api id="F:OOAdvantech.Collections.CollectionAccessType.ReadWrite">
      <apidata name="ReadWrite" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:OOAdvantech.Collections.CollectionAccessType" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Collections" />
        <type api="T:OOAdvantech.Collections.CollectionAccessType" ref="false" />
      </containers>
    </api>
    <api id="T:OOAdvantech.Collections.Hashtable">
      <apidata name="Hashtable" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Collections.Hashtable" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:OOAdvantech.Collections.Map" ref="true" />
        </descendents>
      </family>
      <elements>
        <element api="M:OOAdvantech.Collections.Hashtable.Clone" />
        <element api="M:OOAdvantech.Collections.Hashtable.#ctor(System.Int32)" />
        <element api="M:OOAdvantech.Collections.Hashtable.#ctor(System.Collections.IHashCodeProvider,System.Collections.IComparer)" />
        <element api="M:OOAdvantech.Collections.Hashtable.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:OOAdvantech.Collections.Hashtable.#ctor(System.Collections.IDictionary,System.Single,System.Collections.IHashCodeProvider,System.Collections.IComparer)" />
        <element api="M:OOAdvantech.Collections.Hashtable.#ctor" />
        <element api="M:OOAdvantech.Collections.Hashtable.#ctor(System.Collections.IDictionary,System.Collections.IHashCodeProvider,System.Collections.IComparer)" />
        <element api="M:OOAdvantech.Collections.Hashtable.#ctor(System.Collections.IDictionary,System.Single)" />
        <element api="M:OOAdvantech.Collections.Hashtable.#ctor(System.Collections.IDictionary)" />
        <element api="M:OOAdvantech.Collections.Hashtable.#ctor(System.Int32,System.Single)" />
        <element api="M:OOAdvantech.Collections.Hashtable.#ctor(System.Int32,System.Collections.IHashCodeProvider,System.Collections.IComparer)" />
        <element api="M:OOAdvantech.Collections.Hashtable.#ctor(System.Int32,System.Single,System.Collections.IHashCodeProvider,System.Collections.IComparer)" />
        <element api="M:OOAdvantech.Collections.Hashtable.OnDeserialization(System.Object)" />
        <element api="M:System.Collections.Hashtable.Add(System.Object,System.Object)">
          <apidata name="Add" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="key">
              <type api="T:System.Object" ref="true" />
            </parameter>
            <parameter name="value">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Collections.IDictionary.Add(System.Object,System.Object)">
              <type api="T:System.Collections.IDictionary" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.Hashtable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.Hashtable.Clear">
          <apidata name="Clear" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <implements>
            <member api="M:System.Collections.IDictionary.Clear">
              <type api="T:System.Collections.IDictionary" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.Hashtable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.Hashtable.Contains(System.Object)">
          <apidata name="Contains" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="key">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="M:System.Collections.IDictionary.Contains(System.Object)">
              <type api="T:System.Collections.IDictionary" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.Hashtable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.Hashtable.ContainsKey(System.Object)">
          <apidata name="ContainsKey" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="key">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.Hashtable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.Hashtable.ContainsValue(System.Object)">
          <apidata name="ContainsValue" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="value">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.Hashtable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.Hashtable.CopyTo(System.Array,System.Int32)">
          <apidata name="CopyTo" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="array">
              <type api="T:System.Array" ref="true" />
            </parameter>
            <parameter name="arrayIndex">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)">
              <type api="T:System.Collections.ICollection" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.Hashtable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.Hashtable.System#Collections#IEnumerable#GetEnumerator">
          <apidata name="GetEnumerator" group="member" subgroup="method" />
          <memberdata visibility="private" />
          <proceduredata virtual="true" final="true" eii="true" />
          <returns>
            <type api="T:System.Collections.IEnumerator" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Collections.IEnumerable.GetEnumerator">
              <type api="T:System.Collections.IEnumerable" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.Hashtable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.Hashtable.GetEnumerator">
          <apidata name="GetEnumerator" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Collections.IDictionaryEnumerator" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Collections.IDictionary.GetEnumerator">
              <type api="T:System.Collections.IDictionary" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.Hashtable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.Hashtable.GetHash(System.Object)">
          <apidata name="GetHash" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="key">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.Hashtable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.Hashtable.KeyEquals(System.Object,System.Object)">
          <apidata name="KeyEquals" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="item">
              <type api="T:System.Object" ref="true" />
            </parameter>
            <parameter name="key">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.Hashtable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.Hashtable.Remove(System.Object)">
          <apidata name="Remove" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="key">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Collections.IDictionary.Remove(System.Object)">
              <type api="T:System.Collections.IDictionary" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.Hashtable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.Hashtable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <apidata name="GetObjectData" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="info">
              <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
            </parameter>
            <parameter name="context">
              <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
              <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.Hashtable" ref="true" />
          </containers>
        </element>
        <element api="P:System.Collections.Hashtable.hcp">
          <apidata name="hcp" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_hcp" />
          <setter name="set_hcp" />
          <returns>
            <type api="T:System.Collections.IHashCodeProvider" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.Hashtable" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.ObsoleteAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Please use EqualityComparer property.</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="P:System.Collections.Hashtable.comparer">
          <apidata name="comparer" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_comparer" />
          <setter name="set_comparer" />
          <returns>
            <type api="T:System.Collections.IComparer" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.Hashtable" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.ObsoleteAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Please use KeyComparer properties.</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="P:System.Collections.Hashtable.EqualityComparer">
          <apidata name="EqualityComparer" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_EqualityComparer" />
          <returns>
            <type api="T:System.Collections.IEqualityComparer" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.Hashtable" ref="true" />
          </containers>
        </element>
        <element api="P:System.Collections.Hashtable.Item(System.Object)">
          <apidata name="Item" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Item" />
          <setter name="set_Item" />
          <parameters>
            <parameter name="key">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Collections.IDictionary.Item(System.Object)">
              <type api="T:System.Collections.IDictionary" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.Hashtable" ref="true" />
          </containers>
        </element>
        <element api="P:System.Collections.Hashtable.IsReadOnly">
          <apidata name="IsReadOnly" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_IsReadOnly" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:System.Collections.IDictionary.IsReadOnly">
              <type api="T:System.Collections.IDictionary" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.Hashtable" ref="true" />
          </containers>
        </element>
        <element api="P:System.Collections.Hashtable.IsFixedSize">
          <apidata name="IsFixedSize" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_IsFixedSize" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:System.Collections.IDictionary.IsFixedSize">
              <type api="T:System.Collections.IDictionary" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.Hashtable" ref="true" />
          </containers>
        </element>
        <element api="P:System.Collections.Hashtable.IsSynchronized">
          <apidata name="IsSynchronized" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_IsSynchronized" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:System.Collections.ICollection.IsSynchronized">
              <type api="T:System.Collections.ICollection" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.Hashtable" ref="true" />
          </containers>
        </element>
        <element api="P:System.Collections.Hashtable.Keys">
          <apidata name="Keys" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_Keys" />
          <returns>
            <type api="T:System.Collections.ICollection" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Collections.IDictionary.Keys">
              <type api="T:System.Collections.IDictionary" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.Hashtable" ref="true" />
          </containers>
        </element>
        <element api="P:System.Collections.Hashtable.Values">
          <apidata name="Values" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_Values" />
          <returns>
            <type api="T:System.Collections.ICollection" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Collections.IDictionary.Values">
              <type api="T:System.Collections.IDictionary" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.Hashtable" ref="true" />
          </containers>
        </element>
        <element api="P:System.Collections.Hashtable.SyncRoot">
          <apidata name="SyncRoot" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_SyncRoot" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Collections.ICollection.SyncRoot">
              <type api="T:System.Collections.ICollection" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.Hashtable" ref="true" />
          </containers>
        </element>
        <element api="P:System.Collections.Hashtable.Count">
          <apidata name="Count" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_Count" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <implements>
            <member api="P:System.Collections.ICollection.Count">
              <type api="T:System.Collections.ICollection" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.Hashtable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Collections" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Collections.Hashtable.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Collections" />
        <type api="T:OOAdvantech.Collections.Hashtable" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Collections.Hashtable.#ctor(System.Collections.IDictionary)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="d">
          <type api="T:System.Collections.IDictionary" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Collections" />
        <type api="T:OOAdvantech.Collections.Hashtable" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Collections.Hashtable.#ctor(System.Collections.IDictionary,System.Collections.IHashCodeProvider,System.Collections.IComparer)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="d">
          <type api="T:System.Collections.IDictionary" ref="true" />
        </parameter>
        <parameter name="hcp">
          <type api="T:System.Collections.IHashCodeProvider" ref="true" />
        </parameter>
        <parameter name="comparer">
          <type api="T:System.Collections.IComparer" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Collections" />
        <type api="T:OOAdvantech.Collections.Hashtable" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Collections.Hashtable.#ctor(System.Collections.IDictionary,System.Single)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="d">
          <type api="T:System.Collections.IDictionary" ref="true" />
        </parameter>
        <parameter name="loadFactor">
          <type api="T:System.Single" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Collections" />
        <type api="T:OOAdvantech.Collections.Hashtable" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Collections.Hashtable.#ctor(System.Collections.IDictionary,System.Single,System.Collections.IHashCodeProvider,System.Collections.IComparer)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="d">
          <type api="T:System.Collections.IDictionary" ref="true" />
        </parameter>
        <parameter name="loadFactor">
          <type api="T:System.Single" ref="false" />
        </parameter>
        <parameter name="hcp">
          <type api="T:System.Collections.IHashCodeProvider" ref="true" />
        </parameter>
        <parameter name="comparer">
          <type api="T:System.Collections.IComparer" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Collections" />
        <type api="T:OOAdvantech.Collections.Hashtable" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Collections.Hashtable.#ctor(System.Collections.IHashCodeProvider,System.Collections.IComparer)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="hcp">
          <type api="T:System.Collections.IHashCodeProvider" ref="true" />
        </parameter>
        <parameter name="comparer">
          <type api="T:System.Collections.IComparer" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Collections" />
        <type api="T:OOAdvantech.Collections.Hashtable" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Collections.Hashtable.#ctor(System.Int32)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="capacity">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Collections" />
        <type api="T:OOAdvantech.Collections.Hashtable" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Collections.Hashtable.#ctor(System.Int32,System.Collections.IHashCodeProvider,System.Collections.IComparer)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="capacity">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="hcp">
          <type api="T:System.Collections.IHashCodeProvider" ref="true" />
        </parameter>
        <parameter name="comparer">
          <type api="T:System.Collections.IComparer" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Collections" />
        <type api="T:OOAdvantech.Collections.Hashtable" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Collections.Hashtable.#ctor(System.Int32,System.Single)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="capacity">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="loadFactor">
          <type api="T:System.Single" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Collections" />
        <type api="T:OOAdvantech.Collections.Hashtable" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Collections.Hashtable.#ctor(System.Int32,System.Single,System.Collections.IHashCodeProvider,System.Collections.IComparer)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="capacity">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="loadFactor">
          <type api="T:System.Single" ref="false" />
        </parameter>
        <parameter name="hcp">
          <type api="T:System.Collections.IHashCodeProvider" ref="true" />
        </parameter>
        <parameter name="comparer">
          <type api="T:System.Collections.IComparer" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Collections" />
        <type api="T:OOAdvantech.Collections.Hashtable" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Collections.Hashtable.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Collections" />
        <type api="T:OOAdvantech.Collections.Hashtable" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Collections.Hashtable.Clone">
      <apidata name="Clone" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Collections.Hashtable.Clone">
          <type api="T:System.Collections.Hashtable" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ICloneable.Clone">
          <type api="T:System.ICloneable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Collections" />
        <type api="T:OOAdvantech.Collections.Hashtable" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Collections.Hashtable.OnDeserialization(System.Object)">
      <apidata name="OnDeserialization" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Collections.Hashtable.OnDeserialization(System.Object)">
          <type api="T:System.Collections.Hashtable" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(System.Object)">
          <type api="T:System.Runtime.Serialization.IDeserializationCallback" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Collections" />
        <type api="T:OOAdvantech.Collections.Hashtable" ref="true" />
      </containers>
    </api>
    <api id="T:OOAdvantech.Collections.Map">
      <apidata name="Map" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:OOAdvantech.Collections.Hashtable" ref="true" />
          <type api="T:System.Collections.Hashtable" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:OOAdvantech.Collections.Map.Clear" />
        <element api="M:OOAdvantech.Collections.Map.Remove(System.Object)" />
        <element api="M:OOAdvantech.Collections.Map.#ctor" />
        <element api="M:OOAdvantech.Collections.Map.#ctor(System.Int32)" />
        <element api="M:OOAdvantech.Collections.Map.#ctor(System.Collections.IDictionary)" />
        <element api="M:OOAdvantech.Collections.Map.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:OOAdvantech.Collections.Map.Clone" />
        <element api="M:OOAdvantech.Collections.Hashtable.OnDeserialization(System.Object)" />
        <element api="M:System.Collections.Hashtable.Add(System.Object,System.Object)">
          <apidata name="Add" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="key">
              <type api="T:System.Object" ref="true" />
            </parameter>
            <parameter name="value">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Collections.IDictionary.Add(System.Object,System.Object)">
              <type api="T:System.Collections.IDictionary" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.Hashtable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.Hashtable.Contains(System.Object)">
          <apidata name="Contains" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="key">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="M:System.Collections.IDictionary.Contains(System.Object)">
              <type api="T:System.Collections.IDictionary" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.Hashtable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.Hashtable.ContainsKey(System.Object)">
          <apidata name="ContainsKey" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="key">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.Hashtable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.Hashtable.ContainsValue(System.Object)">
          <apidata name="ContainsValue" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="value">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.Hashtable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.Hashtable.CopyTo(System.Array,System.Int32)">
          <apidata name="CopyTo" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="array">
              <type api="T:System.Array" ref="true" />
            </parameter>
            <parameter name="arrayIndex">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)">
              <type api="T:System.Collections.ICollection" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.Hashtable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.Hashtable.System#Collections#IEnumerable#GetEnumerator">
          <apidata name="GetEnumerator" group="member" subgroup="method" />
          <memberdata visibility="private" />
          <proceduredata virtual="true" final="true" eii="true" />
          <returns>
            <type api="T:System.Collections.IEnumerator" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Collections.IEnumerable.GetEnumerator">
              <type api="T:System.Collections.IEnumerable" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.Hashtable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.Hashtable.GetEnumerator">
          <apidata name="GetEnumerator" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Collections.IDictionaryEnumerator" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Collections.IDictionary.GetEnumerator">
              <type api="T:System.Collections.IDictionary" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.Hashtable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.Hashtable.GetHash(System.Object)">
          <apidata name="GetHash" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="key">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.Hashtable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.Hashtable.KeyEquals(System.Object,System.Object)">
          <apidata name="KeyEquals" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="item">
              <type api="T:System.Object" ref="true" />
            </parameter>
            <parameter name="key">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.Hashtable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.Hashtable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <apidata name="GetObjectData" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="info">
              <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
            </parameter>
            <parameter name="context">
              <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
              <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.Hashtable" ref="true" />
          </containers>
        </element>
        <element api="P:System.Collections.Hashtable.hcp">
          <apidata name="hcp" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_hcp" />
          <setter name="set_hcp" />
          <returns>
            <type api="T:System.Collections.IHashCodeProvider" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.Hashtable" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.ObsoleteAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Please use EqualityComparer property.</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="P:System.Collections.Hashtable.comparer">
          <apidata name="comparer" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_comparer" />
          <setter name="set_comparer" />
          <returns>
            <type api="T:System.Collections.IComparer" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.Hashtable" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.ObsoleteAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Please use KeyComparer properties.</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="P:System.Collections.Hashtable.EqualityComparer">
          <apidata name="EqualityComparer" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_EqualityComparer" />
          <returns>
            <type api="T:System.Collections.IEqualityComparer" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.Hashtable" ref="true" />
          </containers>
        </element>
        <element api="P:System.Collections.Hashtable.Item(System.Object)">
          <apidata name="Item" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Item" />
          <setter name="set_Item" />
          <parameters>
            <parameter name="key">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Collections.IDictionary.Item(System.Object)">
              <type api="T:System.Collections.IDictionary" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.Hashtable" ref="true" />
          </containers>
        </element>
        <element api="P:System.Collections.Hashtable.IsReadOnly">
          <apidata name="IsReadOnly" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_IsReadOnly" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:System.Collections.IDictionary.IsReadOnly">
              <type api="T:System.Collections.IDictionary" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.Hashtable" ref="true" />
          </containers>
        </element>
        <element api="P:System.Collections.Hashtable.IsFixedSize">
          <apidata name="IsFixedSize" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_IsFixedSize" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:System.Collections.IDictionary.IsFixedSize">
              <type api="T:System.Collections.IDictionary" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.Hashtable" ref="true" />
          </containers>
        </element>
        <element api="P:System.Collections.Hashtable.IsSynchronized">
          <apidata name="IsSynchronized" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_IsSynchronized" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:System.Collections.ICollection.IsSynchronized">
              <type api="T:System.Collections.ICollection" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.Hashtable" ref="true" />
          </containers>
        </element>
        <element api="P:System.Collections.Hashtable.Keys">
          <apidata name="Keys" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_Keys" />
          <returns>
            <type api="T:System.Collections.ICollection" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Collections.IDictionary.Keys">
              <type api="T:System.Collections.IDictionary" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.Hashtable" ref="true" />
          </containers>
        </element>
        <element api="P:System.Collections.Hashtable.Values">
          <apidata name="Values" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_Values" />
          <returns>
            <type api="T:System.Collections.ICollection" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Collections.IDictionary.Values">
              <type api="T:System.Collections.IDictionary" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.Hashtable" ref="true" />
          </containers>
        </element>
        <element api="P:System.Collections.Hashtable.SyncRoot">
          <apidata name="SyncRoot" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_SyncRoot" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Collections.ICollection.SyncRoot">
              <type api="T:System.Collections.ICollection" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.Hashtable" ref="true" />
          </containers>
        </element>
        <element api="P:System.Collections.Hashtable.Count">
          <apidata name="Count" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_Count" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <implements>
            <member api="P:System.Collections.ICollection.Count">
              <type api="T:System.Collections.ICollection" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.Hashtable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Collections" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Collections.Map.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Collections" />
        <type api="T:OOAdvantech.Collections.Map" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Collections.Map.#ctor(System.Collections.IDictionary)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="d">
          <type api="T:System.Collections.IDictionary" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Collections" />
        <type api="T:OOAdvantech.Collections.Map" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Collections.Map.#ctor(System.Int32)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="capacity">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Collections" />
        <type api="T:OOAdvantech.Collections.Map" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Collections.Map.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Collections" />
        <type api="T:OOAdvantech.Collections.Map" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Collections.Map.Clear">
      <apidata name="Clear" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Collections.Hashtable.Clear">
          <type api="T:System.Collections.Hashtable" ref="true" />
        </member>
      </overrides>
      <implements>
        <member api="M:System.Collections.IDictionary.Clear">
          <type api="T:System.Collections.IDictionary" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Collections" />
        <type api="T:OOAdvantech.Collections.Map" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Collections.Map.Clone">
      <apidata name="Clone" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:OOAdvantech.Collections.Hashtable.Clone">
          <type api="T:OOAdvantech.Collections.Hashtable" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ICloneable.Clone">
          <type api="T:System.ICloneable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Collections" />
        <type api="T:OOAdvantech.Collections.Map" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Collections.Map.Remove(System.Object)">
      <apidata name="Remove" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Collections.Hashtable.Remove(System.Object)">
          <type api="T:System.Collections.Hashtable" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="key">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Collections.IDictionary.Remove(System.Object)">
          <type api="T:System.Collections.IDictionary" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Collections" />
        <type api="T:OOAdvantech.Collections.Map" ref="true" />
      </containers>
    </api>
    <api id="T:OOAdvantech.Collections.Member">
      <apidata name="Member" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="true" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="F:OOAdvantech.Collections.Member.Owner" />
        <element api="M:OOAdvantech.Collections.Member.#ctor" />
        <element api="P:OOAdvantech.Collections.Member.Type" />
        <element api="P:OOAdvantech.Collections.Member.Name" />
        <element api="P:OOAdvantech.Collections.Member.ID" />
        <element api="P:OOAdvantech.Collections.Member.Value" />
        <element api="P:OOAdvantech.Collections.Member.DerivedMember" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Collections" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Collections.Member.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Collections" />
        <type api="T:OOAdvantech.Collections.Member" ref="true" />
      </containers>
    </api>
    <api id="P:OOAdvantech.Collections.Member.DerivedMember">
      <apidata name="DerivedMember" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_DerivedMember" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Collections" />
        <type api="T:OOAdvantech.Collections.Member" ref="true" />
      </containers>
    </api>
    <api id="P:OOAdvantech.Collections.Member.ID">
      <apidata name="ID" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_ID" />
      <setter name="set_ID" />
      <returns>
        <type api="T:System.Int16" ref="false" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Collections" />
        <type api="T:OOAdvantech.Collections.Member" ref="true" />
      </containers>
    </api>
    <api id="P:OOAdvantech.Collections.Member.Name">
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Name" />
      <setter name="set_Name" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Collections" />
        <type api="T:OOAdvantech.Collections.Member" ref="true" />
      </containers>
    </api>
    <api id="F:OOAdvantech.Collections.Member.Owner">
      <apidata name="Owner" group="member" subgroup="field" />
      <memberdata visibility="public" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:OOAdvantech.Collections.MemberList" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Collections" />
        <type api="T:OOAdvantech.Collections.Member" ref="true" />
      </containers>
    </api>
    <api id="P:OOAdvantech.Collections.Member.Type">
      <apidata name="Type" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_Type" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Collections" />
        <type api="T:OOAdvantech.Collections.Member" ref="true" />
      </containers>
    </api>
    <api id="P:OOAdvantech.Collections.Member.Value">
      <apidata name="Value" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Value" />
      <setter name="set_Value" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Collections" />
        <type api="T:OOAdvantech.Collections.Member" ref="true" />
      </containers>
    </api>
    <api id="T:OOAdvantech.Collections.MemberList">
      <apidata name="MemberList" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="true" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="F:OOAdvantech.Collections.MemberList.Members" />
        <element api="M:OOAdvantech.Collections.MemberList.GetMember(System.String)" />
        <element api="M:OOAdvantech.Collections.MemberList.GetEnumerator" />
        <element api="M:OOAdvantech.Collections.MemberList.#ctor" />
        <element api="P:OOAdvantech.Collections.MemberList.Count" />
        <element api="P:OOAdvantech.Collections.MemberList.Item(System.String)" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Collections" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Collections.MemberList.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Collections" />
        <type api="T:OOAdvantech.Collections.MemberList" ref="true" />
      </containers>
    </api>
    <api id="P:OOAdvantech.Collections.MemberList.Count">
      <apidata name="Count" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Count" />
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Collections" />
        <type api="T:OOAdvantech.Collections.MemberList" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Collections.MemberList.GetEnumerator">
      <apidata name="GetEnumerator" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:OOAdvantech.Collections.MemberList.MemberEnumerator" ref="true">
          <type api="T:OOAdvantech.Collections.MemberList" ref="true" />
        </type>
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Collections" />
        <type api="T:OOAdvantech.Collections.MemberList" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Collections.MemberList.GetMember(System.String)">
      <apidata name="GetMember" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="Index">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:OOAdvantech.Collections.Member" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Collections" />
        <type api="T:OOAdvantech.Collections.MemberList" ref="true" />
      </containers>
    </api>
    <api id="P:OOAdvantech.Collections.MemberList.Item(System.String)">
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Item" />
      <parameters>
        <parameter name="Index">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:OOAdvantech.Collections.Member" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Collections" />
        <type api="T:OOAdvantech.Collections.MemberList" ref="true" />
      </containers>
    </api>
    <api id="F:OOAdvantech.Collections.MemberList.Members">
      <apidata name="Members" group="member" subgroup="field" />
      <memberdata visibility="public" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Collections.Hashtable" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Collections" />
        <type api="T:OOAdvantech.Collections.MemberList" ref="true" />
      </containers>
    </api>
    <api id="T:OOAdvantech.Collections.MemberList.MemberEnumerator">
      <apidata name="MemberEnumerator" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:OOAdvantech.Collections.MemberList.MemberEnumerator.#ctor(OOAdvantech.Collections.MemberList)" />
        <element api="M:OOAdvantech.Collections.MemberList.MemberEnumerator.MoveNext" />
        <element api="P:OOAdvantech.Collections.MemberList.MemberEnumerator.Current" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Collections" />
        <type api="T:OOAdvantech.Collections.MemberList" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Collections.MemberList.MemberEnumerator.#ctor(OOAdvantech.Collections.MemberList)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="coll">
          <type api="T:OOAdvantech.Collections.MemberList" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Collections" />
        <type api="T:OOAdvantech.Collections.MemberList.MemberEnumerator" ref="true">
          <type api="T:OOAdvantech.Collections.MemberList" ref="true" />
        </type>
      </containers>
    </api>
    <api id="P:OOAdvantech.Collections.MemberList.MemberEnumerator.Current">
      <apidata name="Current" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Current" />
      <returns>
        <type api="T:OOAdvantech.Collections.Member" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Collections" />
        <type api="T:OOAdvantech.Collections.MemberList.MemberEnumerator" ref="true">
          <type api="T:OOAdvantech.Collections.MemberList" ref="true" />
        </type>
      </containers>
    </api>
    <api id="M:OOAdvantech.Collections.MemberList.MemberEnumerator.MoveNext">
      <apidata name="MoveNext" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Collections" />
        <type api="T:OOAdvantech.Collections.MemberList.MemberEnumerator" ref="true">
          <type api="T:OOAdvantech.Collections.MemberList" ref="true" />
        </type>
      </containers>
    </api>
    <api id="T:OOAdvantech.Collections.Queue">
      <apidata name="Queue" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Collections.Queue" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Runtime.Serialization.IDeserializationCallback" ref="true" />
      </implements>
      <elements>
        <element api="M:OOAdvantech.Collections.Queue.Clone" />
        <element api="M:OOAdvantech.Collections.Queue.#ctor" />
        <element api="M:OOAdvantech.Collections.Queue.#ctor(System.Int32)" />
        <element api="M:OOAdvantech.Collections.Queue.#ctor(System.Collections.ICollection)" />
        <element api="M:OOAdvantech.Collections.Queue.#ctor(System.Int32,System.Single)" />
        <element api="M:OOAdvantech.Collections.Queue.OnDeserialization(System.Object)" />
        <element api="M:System.Collections.Queue.Clear">
          <apidata name="Clear" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.Queue" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.Queue.CopyTo(System.Array,System.Int32)">
          <apidata name="CopyTo" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="array">
              <type api="T:System.Array" ref="true" />
            </parameter>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)">
              <type api="T:System.Collections.ICollection" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.Queue" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.Queue.Enqueue(System.Object)">
          <apidata name="Enqueue" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.Queue" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.Queue.GetEnumerator">
          <apidata name="GetEnumerator" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Collections.IEnumerator" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Collections.IEnumerable.GetEnumerator">
              <type api="T:System.Collections.IEnumerable" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.Queue" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.Queue.Dequeue">
          <apidata name="Dequeue" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.Queue" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.Queue.Peek">
          <apidata name="Peek" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.Queue" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.Queue.Contains(System.Object)">
          <apidata name="Contains" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.Queue" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.Queue.ToArray">
          <apidata name="ToArray" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <arrayOf rank="1">
              <type api="T:System.Object" ref="true" />
            </arrayOf>
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.Queue" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.Queue.TrimToSize">
          <apidata name="TrimToSize" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.Queue" ref="true" />
          </containers>
        </element>
        <element api="P:System.Collections.Queue.Count">
          <apidata name="Count" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_Count" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <implements>
            <member api="P:System.Collections.ICollection.Count">
              <type api="T:System.Collections.ICollection" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.Queue" ref="true" />
          </containers>
        </element>
        <element api="P:System.Collections.Queue.IsSynchronized">
          <apidata name="IsSynchronized" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_IsSynchronized" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:System.Collections.ICollection.IsSynchronized">
              <type api="T:System.Collections.ICollection" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.Queue" ref="true" />
          </containers>
        </element>
        <element api="P:System.Collections.Queue.SyncRoot">
          <apidata name="SyncRoot" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_SyncRoot" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Collections.ICollection.SyncRoot">
              <type api="T:System.Collections.ICollection" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.Queue" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Collections" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Collections.Queue.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Collections" />
        <type api="T:OOAdvantech.Collections.Queue" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Collections.Queue.#ctor(System.Collections.ICollection)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="col">
          <type api="T:System.Collections.ICollection" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Collections" />
        <type api="T:OOAdvantech.Collections.Queue" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Collections.Queue.#ctor(System.Int32)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="initialCapacity">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Collections" />
        <type api="T:OOAdvantech.Collections.Queue" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Collections.Queue.#ctor(System.Int32,System.Single)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="capacity">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="growFactor">
          <type api="T:System.Single" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Collections" />
        <type api="T:OOAdvantech.Collections.Queue" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Collections.Queue.Clone">
      <apidata name="Clone" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Collections.Queue.Clone">
          <type api="T:System.Collections.Queue" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ICloneable.Clone">
          <type api="T:System.ICloneable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Collections" />
        <type api="T:OOAdvantech.Collections.Queue" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Collections.Queue.OnDeserialization(System.Object)">
      <apidata name="OnDeserialization" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(System.Object)">
          <type api="T:System.Runtime.Serialization.IDeserializationCallback" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Collections" />
        <type api="T:OOAdvantech.Collections.Queue" ref="true" />
      </containers>
    </api>
    <api id="T:OOAdvantech.Collections.Stack">
      <apidata name="Stack" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Collections.Stack" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Runtime.Serialization.IDeserializationCallback" ref="true" />
      </implements>
      <elements>
        <element api="M:OOAdvantech.Collections.Stack.Clone" />
        <element api="M:OOAdvantech.Collections.Stack.#ctor" />
        <element api="M:OOAdvantech.Collections.Stack.#ctor(System.Int32)" />
        <element api="M:OOAdvantech.Collections.Stack.#ctor(System.Collections.ICollection)" />
        <element api="M:OOAdvantech.Collections.Stack.OnDeserialization(System.Object)" />
        <element api="M:System.Collections.Stack.Clear">
          <apidata name="Clear" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.Stack" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.Stack.Contains(System.Object)">
          <apidata name="Contains" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.Stack" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.Stack.CopyTo(System.Array,System.Int32)">
          <apidata name="CopyTo" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="array">
              <type api="T:System.Array" ref="true" />
            </parameter>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)">
              <type api="T:System.Collections.ICollection" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.Stack" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.Stack.GetEnumerator">
          <apidata name="GetEnumerator" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Collections.IEnumerator" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Collections.IEnumerable.GetEnumerator">
              <type api="T:System.Collections.IEnumerable" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.Stack" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.Stack.Peek">
          <apidata name="Peek" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.Stack" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.Stack.Pop">
          <apidata name="Pop" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.Stack" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.Stack.Push(System.Object)">
          <apidata name="Push" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.Stack" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.Stack.ToArray">
          <apidata name="ToArray" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <arrayOf rank="1">
              <type api="T:System.Object" ref="true" />
            </arrayOf>
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.Stack" ref="true" />
          </containers>
        </element>
        <element api="P:System.Collections.Stack.Count">
          <apidata name="Count" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_Count" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <implements>
            <member api="P:System.Collections.ICollection.Count">
              <type api="T:System.Collections.ICollection" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.Stack" ref="true" />
          </containers>
        </element>
        <element api="P:System.Collections.Stack.IsSynchronized">
          <apidata name="IsSynchronized" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_IsSynchronized" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:System.Collections.ICollection.IsSynchronized">
              <type api="T:System.Collections.ICollection" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.Stack" ref="true" />
          </containers>
        </element>
        <element api="P:System.Collections.Stack.SyncRoot">
          <apidata name="SyncRoot" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_SyncRoot" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Collections.ICollection.SyncRoot">
              <type api="T:System.Collections.ICollection" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.Stack" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Collections" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Collections.Stack.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Collections" />
        <type api="T:OOAdvantech.Collections.Stack" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Collections.Stack.#ctor(System.Collections.ICollection)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="col">
          <type api="T:System.Collections.ICollection" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Collections" />
        <type api="T:OOAdvantech.Collections.Stack" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Collections.Stack.#ctor(System.Int32)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="initialCapacity">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Collections" />
        <type api="T:OOAdvantech.Collections.Stack" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Collections.Stack.Clone">
      <apidata name="Clone" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Collections.Stack.Clone">
          <type api="T:System.Collections.Stack" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ICloneable.Clone">
          <type api="T:System.ICloneable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Collections" />
        <type api="T:OOAdvantech.Collections.Stack" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Collections.Stack.OnDeserialization(System.Object)">
      <apidata name="OnDeserialization" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(System.Object)">
          <type api="T:System.Runtime.Serialization.IDeserializationCallback" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Collections" />
        <type api="T:OOAdvantech.Collections.Stack" ref="true" />
      </containers>
    </api>
    <api id="T:OOAdvantech.Collections.StructureSet">
      <apidata name="StructureSet" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:OOAdvantech.Collections.StructureSet.TransformToDataSet" />
        <element api="M:OOAdvantech.Collections.StructureSet.Close" />
        <element api="M:OOAdvantech.Collections.StructureSet.GetEnumerator" />
        <element api="M:OOAdvantech.Collections.StructureSet.MoveFirst" />
        <element api="M:OOAdvantech.Collections.StructureSet.MoveNext" />
        <element api="M:OOAdvantech.Collections.StructureSet.MoveToPage(System.Int32)" />
        <element api="M:OOAdvantech.Collections.StructureSet.MoveNextPage" />
        <element api="P:OOAdvantech.Collections.StructureSet.PageCount" />
        <element api="P:OOAdvantech.Collections.StructureSet.PageSize" />
        <element api="P:OOAdvantech.Collections.StructureSet.Members" />
        <element api="P:OOAdvantech.Collections.StructureSet.Item(System.String)" />
        <element api="P:OOAdvantech.Collections.StructureSet.SourceStorageSession" />
        <element api="P:OOAdvantech.Collections.StructureSet.PagingActivated" />
      </elements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Collections" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Collections.StructureSet.Close">
      <apidata name="Close" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Collections" />
        <type api="T:OOAdvantech.Collections.StructureSet" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Collections.StructureSet.GetEnumerator">
      <apidata name="GetEnumerator" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:System.Collections.IEnumerator" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Collections" />
        <type api="T:OOAdvantech.Collections.StructureSet" ref="true" />
      </containers>
    </api>
    <api id="P:OOAdvantech.Collections.StructureSet.Item(System.String)">
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_Item" />
      <parameters>
        <parameter name="Index">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Collections" />
        <type api="T:OOAdvantech.Collections.StructureSet" ref="true" />
      </containers>
    </api>
    <api id="P:OOAdvantech.Collections.StructureSet.Members">
      <apidata name="Members" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_Members" />
      <returns>
        <type api="T:OOAdvantech.Collections.MemberList" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Collections" />
        <type api="T:OOAdvantech.Collections.StructureSet" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Collections.StructureSet.MoveFirst">
      <apidata name="MoveFirst" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Collections" />
        <type api="T:OOAdvantech.Collections.StructureSet" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Collections.StructureSet.MoveNext">
      <apidata name="MoveNext" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Collections" />
        <type api="T:OOAdvantech.Collections.StructureSet" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Collections.StructureSet.MoveNextPage">
      <apidata name="MoveNextPage" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Collections" />
        <type api="T:OOAdvantech.Collections.StructureSet" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Collections.StructureSet.MoveToPage(System.Int32)">
      <apidata name="MoveToPage" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="pageNumber">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Collections" />
        <type api="T:OOAdvantech.Collections.StructureSet" ref="true" />
      </containers>
    </api>
    <api id="P:OOAdvantech.Collections.StructureSet.PageCount">
      <apidata name="PageCount" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_PageCount" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Collections" />
        <type api="T:OOAdvantech.Collections.StructureSet" ref="true" />
      </containers>
    </api>
    <api id="P:OOAdvantech.Collections.StructureSet.PageSize">
      <apidata name="PageSize" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_PageSize" />
      <setter name="set_PageSize" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Collections" />
        <type api="T:OOAdvantech.Collections.StructureSet" ref="true" />
      </containers>
    </api>
    <api id="P:OOAdvantech.Collections.StructureSet.PagingActivated">
      <apidata name="PagingActivated" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_PagingActivated" />
      <setter name="set_PagingActivated" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Collections" />
        <type api="T:OOAdvantech.Collections.StructureSet" ref="true" />
      </containers>
    </api>
    <api id="P:OOAdvantech.Collections.StructureSet.SourceStorageSession">
      <apidata name="SourceStorageSession" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_SourceStorageSession" />
      <returns>
        <type api="T:OOAdvantech.ObjectsContext" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Collections" />
        <type api="T:OOAdvantech.Collections.StructureSet" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Collections.StructureSet.TransformToDataSet">
      <apidata name="TransformToDataSet" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:System.Data.DataSet" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Collections" />
        <type api="T:OOAdvantech.Collections.StructureSet" ref="true" />
      </containers>
    </api>
    <api id="T:OOAdvantech.Collections.Vector">
      <apidata name="Vector" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:OOAdvantech.Collections.ArrayList" ref="true" />
          <type api="T:System.Collections.ArrayList" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:OOAdvantech.Collections.Vector.#ctor" />
        <element api="M:OOAdvantech.Collections.ArrayList.Clone" />
        <element api="M:OOAdvantech.Collections.ArrayList.OnDeserialization(System.Object)" />
        <element api="M:System.Collections.ArrayList.Add(System.Object)">
          <apidata name="Add" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="value">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <implements>
            <member api="M:System.Collections.IList.Add(System.Object)">
              <type api="T:System.Collections.IList" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.ArrayList" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.ArrayList.AddRange(System.Collections.ICollection)">
          <apidata name="AddRange" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="c">
              <type api="T:System.Collections.ICollection" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.ArrayList" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.ArrayList.BinarySearch(System.Int32,System.Int32,System.Object,System.Collections.IComparer)">
          <apidata name="BinarySearch" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
            <parameter name="count">
              <type api="T:System.Int32" ref="false" />
            </parameter>
            <parameter name="value">
              <type api="T:System.Object" ref="true" />
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.IComparer" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.ArrayList" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.ArrayList.BinarySearch(System.Object)">
          <apidata name="BinarySearch" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="value">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.ArrayList" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.ArrayList.BinarySearch(System.Object,System.Collections.IComparer)">
          <apidata name="BinarySearch" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="value">
              <type api="T:System.Object" ref="true" />
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.IComparer" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.ArrayList" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.ArrayList.Clear">
          <apidata name="Clear" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <implements>
            <member api="M:System.Collections.IList.Clear">
              <type api="T:System.Collections.IList" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.ArrayList" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.ArrayList.Contains(System.Object)">
          <apidata name="Contains" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="item">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="M:System.Collections.IList.Contains(System.Object)">
              <type api="T:System.Collections.IList" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.ArrayList" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.ArrayList.CopyTo(System.Array)">
          <apidata name="CopyTo" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="array">
              <type api="T:System.Array" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.ArrayList" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.ArrayList.CopyTo(System.Array,System.Int32)">
          <apidata name="CopyTo" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="array">
              <type api="T:System.Array" ref="true" />
            </parameter>
            <parameter name="arrayIndex">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)">
              <type api="T:System.Collections.ICollection" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.ArrayList" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.ArrayList.CopyTo(System.Int32,System.Array,System.Int32,System.Int32)">
          <apidata name="CopyTo" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
            <parameter name="array">
              <type api="T:System.Array" ref="true" />
            </parameter>
            <parameter name="arrayIndex">
              <type api="T:System.Int32" ref="false" />
            </parameter>
            <parameter name="count">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.ArrayList" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.ArrayList.GetEnumerator">
          <apidata name="GetEnumerator" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Collections.IEnumerator" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Collections.IEnumerable.GetEnumerator">
              <type api="T:System.Collections.IEnumerable" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.ArrayList" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.ArrayList.GetEnumerator(System.Int32,System.Int32)">
          <apidata name="GetEnumerator" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
            <parameter name="count">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.IEnumerator" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.ArrayList" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.ArrayList.IndexOf(System.Object)">
          <apidata name="IndexOf" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="value">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <implements>
            <member api="M:System.Collections.IList.IndexOf(System.Object)">
              <type api="T:System.Collections.IList" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.ArrayList" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.ArrayList.IndexOf(System.Object,System.Int32)">
          <apidata name="IndexOf" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="value">
              <type api="T:System.Object" ref="true" />
            </parameter>
            <parameter name="startIndex">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.ArrayList" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.ArrayList.IndexOf(System.Object,System.Int32,System.Int32)">
          <apidata name="IndexOf" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="value">
              <type api="T:System.Object" ref="true" />
            </parameter>
            <parameter name="startIndex">
              <type api="T:System.Int32" ref="false" />
            </parameter>
            <parameter name="count">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.ArrayList" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.ArrayList.Insert(System.Int32,System.Object)">
          <apidata name="Insert" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
            <parameter name="value">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Collections.IList.Insert(System.Int32,System.Object)">
              <type api="T:System.Collections.IList" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.ArrayList" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.ArrayList.InsertRange(System.Int32,System.Collections.ICollection)">
          <apidata name="InsertRange" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
            <parameter name="c">
              <type api="T:System.Collections.ICollection" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.ArrayList" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.ArrayList.LastIndexOf(System.Object)">
          <apidata name="LastIndexOf" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="value">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.ArrayList" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.ArrayList.LastIndexOf(System.Object,System.Int32)">
          <apidata name="LastIndexOf" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="value">
              <type api="T:System.Object" ref="true" />
            </parameter>
            <parameter name="startIndex">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.ArrayList" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.ArrayList.LastIndexOf(System.Object,System.Int32,System.Int32)">
          <apidata name="LastIndexOf" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="value">
              <type api="T:System.Object" ref="true" />
            </parameter>
            <parameter name="startIndex">
              <type api="T:System.Int32" ref="false" />
            </parameter>
            <parameter name="count">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.ArrayList" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.ArrayList.Remove(System.Object)">
          <apidata name="Remove" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Collections.IList.Remove(System.Object)">
              <type api="T:System.Collections.IList" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.ArrayList" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.ArrayList.RemoveAt(System.Int32)">
          <apidata name="RemoveAt" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Collections.IList.RemoveAt(System.Int32)">
              <type api="T:System.Collections.IList" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.ArrayList" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.ArrayList.RemoveRange(System.Int32,System.Int32)">
          <apidata name="RemoveRange" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
            <parameter name="count">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.ArrayList" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.ArrayList.Reverse">
          <apidata name="Reverse" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.ArrayList" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.ArrayList.Reverse(System.Int32,System.Int32)">
          <apidata name="Reverse" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
            <parameter name="count">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.ArrayList" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.ArrayList.SetRange(System.Int32,System.Collections.ICollection)">
          <apidata name="SetRange" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
            <parameter name="c">
              <type api="T:System.Collections.ICollection" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.ArrayList" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.ArrayList.GetRange(System.Int32,System.Int32)">
          <apidata name="GetRange" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
            <parameter name="count">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.ArrayList" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.ArrayList" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.ArrayList.Sort">
          <apidata name="Sort" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.ArrayList" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.ArrayList.Sort(System.Collections.IComparer)">
          <apidata name="Sort" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="comparer">
              <type api="T:System.Collections.IComparer" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.ArrayList" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.ArrayList.Sort(System.Int32,System.Int32,System.Collections.IComparer)">
          <apidata name="Sort" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
            <parameter name="count">
              <type api="T:System.Int32" ref="false" />
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.IComparer" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.ArrayList" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.ArrayList.ToArray">
          <apidata name="ToArray" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <arrayOf rank="1">
              <type api="T:System.Object" ref="true" />
            </arrayOf>
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.ArrayList" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.ArrayList.ToArray(System.Type)">
          <apidata name="ToArray" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="type">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Array" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.ArrayList" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.ArrayList.TrimToSize">
          <apidata name="TrimToSize" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.ArrayList" ref="true" />
          </containers>
        </element>
        <element api="P:System.Collections.ArrayList.Capacity">
          <apidata name="Capacity" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Capacity" />
          <setter name="set_Capacity" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.ArrayList" ref="true" />
          </containers>
        </element>
        <element api="P:System.Collections.ArrayList.Count">
          <apidata name="Count" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_Count" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <implements>
            <member api="P:System.Collections.ICollection.Count">
              <type api="T:System.Collections.ICollection" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.ArrayList" ref="true" />
          </containers>
        </element>
        <element api="P:System.Collections.ArrayList.IsFixedSize">
          <apidata name="IsFixedSize" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_IsFixedSize" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:System.Collections.IList.IsFixedSize">
              <type api="T:System.Collections.IList" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.ArrayList" ref="true" />
          </containers>
        </element>
        <element api="P:System.Collections.ArrayList.IsReadOnly">
          <apidata name="IsReadOnly" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_IsReadOnly" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:System.Collections.IList.IsReadOnly">
              <type api="T:System.Collections.IList" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.ArrayList" ref="true" />
          </containers>
        </element>
        <element api="P:System.Collections.ArrayList.IsSynchronized">
          <apidata name="IsSynchronized" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_IsSynchronized" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:System.Collections.ICollection.IsSynchronized">
              <type api="T:System.Collections.ICollection" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.ArrayList" ref="true" />
          </containers>
        </element>
        <element api="P:System.Collections.ArrayList.SyncRoot">
          <apidata name="SyncRoot" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_SyncRoot" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Collections.ICollection.SyncRoot">
              <type api="T:System.Collections.ICollection" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.ArrayList" ref="true" />
          </containers>
        </element>
        <element api="P:System.Collections.ArrayList.Item(System.Int32)">
          <apidata name="Item" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Item" />
          <setter name="set_Item" />
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Collections.IList.Item(System.Int32)">
              <type api="T:System.Collections.IList" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.ArrayList" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Collections" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Collections.Vector.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Collections" />
        <type api="T:OOAdvantech.Collections.Vector" ref="true" />
      </containers>
    </api>
    <api id="N:OOAdvantech.Collections.Generic">
      <apidata name="OOAdvantech.Collections.Generic" group="namespace" />
      <elements>
        <element api="T:OOAdvantech.Collections.Generic.Dictionary`2" />
        <element api="T:OOAdvantech.Collections.Generic.Stack`1" />
        <element api="T:OOAdvantech.Collections.Generic.Set`1" />
        <element api="T:OOAdvantech.Collections.Generic.List`1" />
      </elements>
    </api>
    <api id="T:OOAdvantech.Collections.Generic.Dictionary`2">
      <apidata name="Dictionary" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
            <specialization>
              <template name="TKey" index="0" api="T:OOAdvantech.Collections.Generic.Dictionary`2" />
              <template name="TValue" index="1" api="T:OOAdvantech.Collections.Generic.Dictionary`2" />
            </specialization>
          </type>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="TKey" />
        <template name="TValue" />
      </templates>
      <elements>
        <element api="M:OOAdvantech.Collections.Generic.Dictionary`2.#ctor" />
        <element api="M:OOAdvantech.Collections.Generic.Dictionary`2.#ctor(System.Collections.Generic.IDictionary{`0,`1})" />
        <element api="M:OOAdvantech.Collections.Generic.Dictionary`2.#ctor(System.Collections.Generic.IEqualityComparer{`0})" />
        <element api="M:OOAdvantech.Collections.Generic.Dictionary`2.#ctor(System.Int32)" />
        <element api="M:OOAdvantech.Collections.Generic.Dictionary`2.#ctor(System.Collections.Generic.IDictionary{`0,`1},System.Collections.Generic.IEqualityComparer{`0})" />
        <element api="M:OOAdvantech.Collections.Generic.Dictionary`2.#ctor(System.Int32,System.Collections.Generic.IEqualityComparer{`0})" />
        <element api="M:OOAdvantech.Collections.Generic.Dictionary`2.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:OOAdvantech.Collections.Generic.Dictionary`2.OnDeserialization(System.Object)" />
        <element api="M:System.Collections.Generic.Dictionary`2.Add(`0,`1)">
          <apidata name="Add" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="key">
              <template name="TKey" index="0" api="T:OOAdvantech.Collections.Generic.Dictionary`2" />
            </parameter>
            <parameter name="value">
              <template name="TValue" index="1" api="T:OOAdvantech.Collections.Generic.Dictionary`2" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Collections.Generic.IDictionary`2.Add(`0,`1)">
              <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
                <specialization>
                  <template name="TKey" index="0" api="T:OOAdvantech.Collections.Generic.Dictionary`2" />
                  <template name="TValue" index="1" api="T:OOAdvantech.Collections.Generic.Dictionary`2" />
                </specialization>
              </type>
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="0" api="T:OOAdvantech.Collections.Generic.Dictionary`2" />
                <template name="TValue" index="1" api="T:OOAdvantech.Collections.Generic.Dictionary`2" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Generic.Dictionary`2.System#Collections#Generic#ICollection{T}#Add(System.Collections.Generic.KeyValuePair{`0,`1})">
          <apidata name="Add" group="member" subgroup="method" />
          <memberdata visibility="private" />
          <proceduredata virtual="true" final="true" eii="true" />
          <parameters>
            <parameter name="keyValuePair">
              <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                <specialization>
                  <template name="TKey" index="0" api="T:OOAdvantech.Collections.Generic.Dictionary`2" />
                  <template name="TValue" index="1" api="T:OOAdvantech.Collections.Generic.Dictionary`2" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Collections.Generic.ICollection`1.Add(`0)">
              <type api="T:System.Collections.Generic.ICollection`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <template name="TKey" index="0" api="T:System.Collections.Generic.IDictionary`2" />
                      <template name="TValue" index="1" api="T:System.Collections.Generic.IDictionary`2" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="0" api="T:OOAdvantech.Collections.Generic.Dictionary`2" />
                <template name="TValue" index="1" api="T:OOAdvantech.Collections.Generic.Dictionary`2" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Generic.Dictionary`2.System#Collections#Generic#ICollection{T}#Contains(System.Collections.Generic.KeyValuePair{`0,`1})">
          <apidata name="Contains" group="member" subgroup="method" />
          <memberdata visibility="private" />
          <proceduredata virtual="true" final="true" eii="true" />
          <parameters>
            <parameter name="keyValuePair">
              <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                <specialization>
                  <template name="TKey" index="0" api="T:OOAdvantech.Collections.Generic.Dictionary`2" />
                  <template name="TValue" index="1" api="T:OOAdvantech.Collections.Generic.Dictionary`2" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="M:System.Collections.Generic.ICollection`1.Contains(`0)">
              <type api="T:System.Collections.Generic.ICollection`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <template name="TKey" index="0" api="T:System.Collections.Generic.IDictionary`2" />
                      <template name="TValue" index="1" api="T:System.Collections.Generic.IDictionary`2" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="0" api="T:OOAdvantech.Collections.Generic.Dictionary`2" />
                <template name="TValue" index="1" api="T:OOAdvantech.Collections.Generic.Dictionary`2" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Generic.Dictionary`2.System#Collections#Generic#ICollection{T}#Remove(System.Collections.Generic.KeyValuePair{`0,`1})">
          <apidata name="Remove" group="member" subgroup="method" />
          <memberdata visibility="private" />
          <proceduredata virtual="true" final="true" eii="true" />
          <parameters>
            <parameter name="keyValuePair">
              <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                <specialization>
                  <template name="TKey" index="0" api="T:OOAdvantech.Collections.Generic.Dictionary`2" />
                  <template name="TValue" index="1" api="T:OOAdvantech.Collections.Generic.Dictionary`2" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="M:System.Collections.Generic.ICollection`1.Remove(`0)">
              <type api="T:System.Collections.Generic.ICollection`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <template name="TKey" index="0" api="T:System.Collections.Generic.IDictionary`2" />
                      <template name="TValue" index="1" api="T:System.Collections.Generic.IDictionary`2" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="0" api="T:OOAdvantech.Collections.Generic.Dictionary`2" />
                <template name="TValue" index="1" api="T:OOAdvantech.Collections.Generic.Dictionary`2" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Generic.Dictionary`2.Clear">
          <apidata name="Clear" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <implements>
            <member api="M:System.Collections.Generic.ICollection`1.Clear">
              <type api="T:System.Collections.Generic.ICollection`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <template name="TKey" index="0" api="T:System.Collections.Generic.IDictionary`2" />
                      <template name="TValue" index="1" api="T:System.Collections.Generic.IDictionary`2" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </member>
            <member api="M:System.Collections.IDictionary.Clear">
              <type api="T:System.Collections.IDictionary" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="0" api="T:OOAdvantech.Collections.Generic.Dictionary`2" />
                <template name="TValue" index="1" api="T:OOAdvantech.Collections.Generic.Dictionary`2" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Generic.Dictionary`2.ContainsKey(`0)">
          <apidata name="ContainsKey" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="key">
              <template name="TKey" index="0" api="T:OOAdvantech.Collections.Generic.Dictionary`2" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="M:System.Collections.Generic.IDictionary`2.ContainsKey(`0)">
              <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
                <specialization>
                  <template name="TKey" index="0" api="T:OOAdvantech.Collections.Generic.Dictionary`2" />
                  <template name="TValue" index="1" api="T:OOAdvantech.Collections.Generic.Dictionary`2" />
                </specialization>
              </type>
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="0" api="T:OOAdvantech.Collections.Generic.Dictionary`2" />
                <template name="TValue" index="1" api="T:OOAdvantech.Collections.Generic.Dictionary`2" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Generic.Dictionary`2.ContainsValue(`1)">
          <apidata name="ContainsValue" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="value">
              <template name="TValue" index="1" api="T:OOAdvantech.Collections.Generic.Dictionary`2" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="0" api="T:OOAdvantech.Collections.Generic.Dictionary`2" />
                <template name="TValue" index="1" api="T:OOAdvantech.Collections.Generic.Dictionary`2" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Generic.Dictionary`2.GetEnumerator">
          <apidata name="GetEnumerator" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2.Enumerator" ref="false">
              <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
                <specialization>
                  <template name="TKey" index="0" api="T:OOAdvantech.Collections.Generic.Dictionary`2" />
                  <template name="TValue" index="1" api="T:OOAdvantech.Collections.Generic.Dictionary`2" />
                </specialization>
              </type>
            </type>
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="0" api="T:OOAdvantech.Collections.Generic.Dictionary`2" />
                <template name="TValue" index="1" api="T:OOAdvantech.Collections.Generic.Dictionary`2" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Generic.Dictionary`2.System#Collections#Generic#IEnumerable{T}#GetEnumerator">
          <apidata name="GetEnumerator" group="member" subgroup="method" />
          <memberdata visibility="private" />
          <proceduredata virtual="true" final="true" eii="true" />
          <returns>
            <type api="T:System.Collections.Generic.IEnumerator`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <template name="TKey" index="0" api="T:OOAdvantech.Collections.Generic.Dictionary`2" />
                    <template name="TValue" index="1" api="T:OOAdvantech.Collections.Generic.Dictionary`2" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <implements>
            <member api="M:System.Collections.Generic.IEnumerable`1.GetEnumerator">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <template name="TKey" index="0" api="T:System.Collections.Generic.IDictionary`2" />
                      <template name="TValue" index="1" api="T:System.Collections.Generic.IDictionary`2" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="0" api="T:OOAdvantech.Collections.Generic.Dictionary`2" />
                <template name="TValue" index="1" api="T:OOAdvantech.Collections.Generic.Dictionary`2" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Generic.Dictionary`2.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <apidata name="GetObjectData" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="info">
              <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
            </parameter>
            <parameter name="context">
              <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
              <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="0" api="T:OOAdvantech.Collections.Generic.Dictionary`2" />
                <template name="TValue" index="1" api="T:OOAdvantech.Collections.Generic.Dictionary`2" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Generic.Dictionary`2.Remove(`0)">
          <apidata name="Remove" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="key">
              <template name="TKey" index="0" api="T:OOAdvantech.Collections.Generic.Dictionary`2" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="M:System.Collections.Generic.IDictionary`2.Remove(`0)">
              <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
                <specialization>
                  <template name="TKey" index="0" api="T:OOAdvantech.Collections.Generic.Dictionary`2" />
                  <template name="TValue" index="1" api="T:OOAdvantech.Collections.Generic.Dictionary`2" />
                </specialization>
              </type>
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="0" api="T:OOAdvantech.Collections.Generic.Dictionary`2" />
                <template name="TValue" index="1" api="T:OOAdvantech.Collections.Generic.Dictionary`2" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Generic.Dictionary`2.TryGetValue(`0,`1@)">
          <apidata name="TryGetValue" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="key">
              <template name="TKey" index="0" api="T:OOAdvantech.Collections.Generic.Dictionary`2" />
            </parameter>
            <parameter name="value" out="true">
              <referenceTo>
                <template name="TValue" index="1" api="T:OOAdvantech.Collections.Generic.Dictionary`2" />
              </referenceTo>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="M:System.Collections.Generic.IDictionary`2.TryGetValue(`0,`1@)">
              <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
                <specialization>
                  <template name="TKey" index="0" api="T:OOAdvantech.Collections.Generic.Dictionary`2" />
                  <template name="TValue" index="1" api="T:OOAdvantech.Collections.Generic.Dictionary`2" />
                </specialization>
              </type>
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="0" api="T:OOAdvantech.Collections.Generic.Dictionary`2" />
                <template name="TValue" index="1" api="T:OOAdvantech.Collections.Generic.Dictionary`2" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Generic.Dictionary`2.System#Collections#Generic#ICollection{T}#CopyTo(System.Collections.Generic.KeyValuePair{`0,`1}[],System.Int32)">
          <apidata name="CopyTo" group="member" subgroup="method" />
          <memberdata visibility="private" />
          <proceduredata virtual="true" final="true" eii="true" />
          <parameters>
            <parameter name="array">
              <arrayOf rank="1">
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <template name="TKey" index="0" api="T:OOAdvantech.Collections.Generic.Dictionary`2" />
                    <template name="TValue" index="1" api="T:OOAdvantech.Collections.Generic.Dictionary`2" />
                  </specialization>
                </type>
              </arrayOf>
            </parameter>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)">
              <type api="T:System.Collections.Generic.ICollection`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <template name="TKey" index="0" api="T:System.Collections.Generic.IDictionary`2" />
                      <template name="TValue" index="1" api="T:System.Collections.Generic.IDictionary`2" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="0" api="T:OOAdvantech.Collections.Generic.Dictionary`2" />
                <template name="TValue" index="1" api="T:OOAdvantech.Collections.Generic.Dictionary`2" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Generic.Dictionary`2.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <apidata name="CopyTo" group="member" subgroup="method" />
          <memberdata visibility="private" />
          <proceduredata virtual="true" final="true" eii="true" />
          <parameters>
            <parameter name="array">
              <type api="T:System.Array" ref="true" />
            </parameter>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)">
              <type api="T:System.Collections.ICollection" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="0" api="T:OOAdvantech.Collections.Generic.Dictionary`2" />
                <template name="TValue" index="1" api="T:OOAdvantech.Collections.Generic.Dictionary`2" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Generic.Dictionary`2.System#Collections#IEnumerable#GetEnumerator">
          <apidata name="GetEnumerator" group="member" subgroup="method" />
          <memberdata visibility="private" />
          <proceduredata virtual="true" final="true" eii="true" />
          <returns>
            <type api="T:System.Collections.IEnumerator" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Collections.IEnumerable.GetEnumerator">
              <type api="T:System.Collections.IEnumerable" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="0" api="T:OOAdvantech.Collections.Generic.Dictionary`2" />
                <template name="TValue" index="1" api="T:OOAdvantech.Collections.Generic.Dictionary`2" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Add(System.Object,System.Object)">
          <apidata name="Add" group="member" subgroup="method" />
          <memberdata visibility="private" />
          <proceduredata virtual="true" final="true" eii="true" />
          <parameters>
            <parameter name="key">
              <type api="T:System.Object" ref="true" />
            </parameter>
            <parameter name="value">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Collections.IDictionary.Add(System.Object,System.Object)">
              <type api="T:System.Collections.IDictionary" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="0" api="T:OOAdvantech.Collections.Generic.Dictionary`2" />
                <template name="TValue" index="1" api="T:OOAdvantech.Collections.Generic.Dictionary`2" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Contains(System.Object)">
          <apidata name="Contains" group="member" subgroup="method" />
          <memberdata visibility="private" />
          <proceduredata virtual="true" final="true" eii="true" />
          <parameters>
            <parameter name="key">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="M:System.Collections.IDictionary.Contains(System.Object)">
              <type api="T:System.Collections.IDictionary" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="0" api="T:OOAdvantech.Collections.Generic.Dictionary`2" />
                <template name="TValue" index="1" api="T:OOAdvantech.Collections.Generic.Dictionary`2" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#GetEnumerator">
          <apidata name="GetEnumerator" group="member" subgroup="method" />
          <memberdata visibility="private" />
          <proceduredata virtual="true" final="true" eii="true" />
          <returns>
            <type api="T:System.Collections.IDictionaryEnumerator" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Collections.IDictionary.GetEnumerator">
              <type api="T:System.Collections.IDictionary" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="0" api="T:OOAdvantech.Collections.Generic.Dictionary`2" />
                <template name="TValue" index="1" api="T:OOAdvantech.Collections.Generic.Dictionary`2" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Remove(System.Object)">
          <apidata name="Remove" group="member" subgroup="method" />
          <memberdata visibility="private" />
          <proceduredata virtual="true" final="true" eii="true" />
          <parameters>
            <parameter name="key">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Collections.IDictionary.Remove(System.Object)">
              <type api="T:System.Collections.IDictionary" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="0" api="T:OOAdvantech.Collections.Generic.Dictionary`2" />
                <template name="TValue" index="1" api="T:OOAdvantech.Collections.Generic.Dictionary`2" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="P:System.Collections.Generic.Dictionary`2.Comparer">
          <apidata name="Comparer" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_Comparer" />
          <returns>
            <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
              <specialization>
                <template name="TKey" index="0" api="T:OOAdvantech.Collections.Generic.Dictionary`2" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="0" api="T:OOAdvantech.Collections.Generic.Dictionary`2" />
                <template name="TValue" index="1" api="T:OOAdvantech.Collections.Generic.Dictionary`2" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="P:System.Collections.Generic.Dictionary`2.Count">
          <apidata name="Count" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_Count" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <implements>
            <member api="P:System.Collections.Generic.ICollection`1.Count">
              <type api="T:System.Collections.Generic.ICollection`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <template name="TKey" index="0" api="T:System.Collections.Generic.IDictionary`2" />
                      <template name="TValue" index="1" api="T:System.Collections.Generic.IDictionary`2" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </member>
            <member api="P:System.Collections.ICollection.Count">
              <type api="T:System.Collections.ICollection" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="0" api="T:OOAdvantech.Collections.Generic.Dictionary`2" />
                <template name="TValue" index="1" api="T:OOAdvantech.Collections.Generic.Dictionary`2" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="P:System.Collections.Generic.Dictionary`2.Keys">
          <apidata name="Keys" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_Keys" />
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2.KeyCollection" ref="true">
              <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
                <specialization>
                  <template name="TKey" index="0" api="T:OOAdvantech.Collections.Generic.Dictionary`2" />
                  <template name="TValue" index="1" api="T:OOAdvantech.Collections.Generic.Dictionary`2" />
                </specialization>
              </type>
            </type>
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="0" api="T:OOAdvantech.Collections.Generic.Dictionary`2" />
                <template name="TValue" index="1" api="T:OOAdvantech.Collections.Generic.Dictionary`2" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="P:System.Collections.Generic.Dictionary`2.System#Collections#Generic#IDictionary{TKey@TValue}#Keys">
          <apidata name="Keys" group="member" subgroup="property" />
          <memberdata visibility="private" />
          <proceduredata virtual="true" final="true" eii="true" />
          <propertydata get="true" />
          <getter name="get_System.Collections.Generic.IDictionary&lt;TKey,TValue&gt;.Keys" />
          <returns>
            <type api="T:System.Collections.Generic.ICollection`1" ref="true">
              <specialization>
                <template name="TKey" index="0" api="T:OOAdvantech.Collections.Generic.Dictionary`2" />
              </specialization>
            </type>
          </returns>
          <implements>
            <member api="P:System.Collections.Generic.IDictionary`2.Keys">
              <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
                <specialization>
                  <template name="TKey" index="0" api="T:OOAdvantech.Collections.Generic.Dictionary`2" />
                  <template name="TValue" index="1" api="T:OOAdvantech.Collections.Generic.Dictionary`2" />
                </specialization>
              </type>
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="0" api="T:OOAdvantech.Collections.Generic.Dictionary`2" />
                <template name="TValue" index="1" api="T:OOAdvantech.Collections.Generic.Dictionary`2" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="P:System.Collections.Generic.Dictionary`2.Values">
          <apidata name="Values" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_Values" />
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2.ValueCollection" ref="true">
              <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
                <specialization>
                  <template name="TKey" index="0" api="T:OOAdvantech.Collections.Generic.Dictionary`2" />
                  <template name="TValue" index="1" api="T:OOAdvantech.Collections.Generic.Dictionary`2" />
                </specialization>
              </type>
            </type>
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="0" api="T:OOAdvantech.Collections.Generic.Dictionary`2" />
                <template name="TValue" index="1" api="T:OOAdvantech.Collections.Generic.Dictionary`2" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="P:System.Collections.Generic.Dictionary`2.System#Collections#Generic#IDictionary{TKey@TValue}#Values">
          <apidata name="Values" group="member" subgroup="property" />
          <memberdata visibility="private" />
          <proceduredata virtual="true" final="true" eii="true" />
          <propertydata get="true" />
          <getter name="get_System.Collections.Generic.IDictionary&lt;TKey,TValue&gt;.Values" />
          <returns>
            <type api="T:System.Collections.Generic.ICollection`1" ref="true">
              <specialization>
                <template name="TValue" index="1" api="T:OOAdvantech.Collections.Generic.Dictionary`2" />
              </specialization>
            </type>
          </returns>
          <implements>
            <member api="P:System.Collections.Generic.IDictionary`2.Values">
              <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
                <specialization>
                  <template name="TKey" index="0" api="T:OOAdvantech.Collections.Generic.Dictionary`2" />
                  <template name="TValue" index="1" api="T:OOAdvantech.Collections.Generic.Dictionary`2" />
                </specialization>
              </type>
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="0" api="T:OOAdvantech.Collections.Generic.Dictionary`2" />
                <template name="TValue" index="1" api="T:OOAdvantech.Collections.Generic.Dictionary`2" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="P:System.Collections.Generic.Dictionary`2.Item(`0)">
          <apidata name="Item" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Item" />
          <setter name="set_Item" />
          <parameters>
            <parameter name="key">
              <template name="TKey" index="0" api="T:OOAdvantech.Collections.Generic.Dictionary`2" />
            </parameter>
          </parameters>
          <returns>
            <template name="TValue" index="1" api="T:OOAdvantech.Collections.Generic.Dictionary`2" />
          </returns>
          <implements>
            <member api="P:System.Collections.Generic.IDictionary`2.Item(`0)">
              <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
                <specialization>
                  <template name="TKey" index="0" api="T:OOAdvantech.Collections.Generic.Dictionary`2" />
                  <template name="TValue" index="1" api="T:OOAdvantech.Collections.Generic.Dictionary`2" />
                </specialization>
              </type>
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="0" api="T:OOAdvantech.Collections.Generic.Dictionary`2" />
                <template name="TValue" index="1" api="T:OOAdvantech.Collections.Generic.Dictionary`2" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="P:System.Collections.Generic.Dictionary`2.System#Collections#Generic#ICollection{T}#IsReadOnly">
          <apidata name="IsReadOnly" group="member" subgroup="property" />
          <memberdata visibility="private" />
          <proceduredata virtual="true" final="true" eii="true" />
          <propertydata get="true" />
          <getter name="get_System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.IsReadOnly" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:System.Collections.Generic.ICollection`1.IsReadOnly">
              <type api="T:System.Collections.Generic.ICollection`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <template name="TKey" index="0" api="T:System.Collections.Generic.IDictionary`2" />
                      <template name="TValue" index="1" api="T:System.Collections.Generic.IDictionary`2" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="0" api="T:OOAdvantech.Collections.Generic.Dictionary`2" />
                <template name="TValue" index="1" api="T:OOAdvantech.Collections.Generic.Dictionary`2" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="P:System.Collections.Generic.Dictionary`2.System#Collections#ICollection#IsSynchronized">
          <apidata name="IsSynchronized" group="member" subgroup="property" />
          <memberdata visibility="private" />
          <proceduredata virtual="true" final="true" eii="true" />
          <propertydata get="true" />
          <getter name="get_System.Collections.ICollection.IsSynchronized" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:System.Collections.ICollection.IsSynchronized">
              <type api="T:System.Collections.ICollection" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="0" api="T:OOAdvantech.Collections.Generic.Dictionary`2" />
                <template name="TValue" index="1" api="T:OOAdvantech.Collections.Generic.Dictionary`2" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="P:System.Collections.Generic.Dictionary`2.System#Collections#ICollection#SyncRoot">
          <apidata name="SyncRoot" group="member" subgroup="property" />
          <memberdata visibility="private" />
          <proceduredata virtual="true" final="true" eii="true" />
          <propertydata get="true" />
          <getter name="get_System.Collections.ICollection.SyncRoot" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Collections.ICollection.SyncRoot">
              <type api="T:System.Collections.ICollection" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="0" api="T:OOAdvantech.Collections.Generic.Dictionary`2" />
                <template name="TValue" index="1" api="T:OOAdvantech.Collections.Generic.Dictionary`2" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="P:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#IsFixedSize">
          <apidata name="IsFixedSize" group="member" subgroup="property" />
          <memberdata visibility="private" />
          <proceduredata virtual="true" final="true" eii="true" />
          <propertydata get="true" />
          <getter name="get_System.Collections.IDictionary.IsFixedSize" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:System.Collections.IDictionary.IsFixedSize">
              <type api="T:System.Collections.IDictionary" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="0" api="T:OOAdvantech.Collections.Generic.Dictionary`2" />
                <template name="TValue" index="1" api="T:OOAdvantech.Collections.Generic.Dictionary`2" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="P:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#IsReadOnly">
          <apidata name="IsReadOnly" group="member" subgroup="property" />
          <memberdata visibility="private" />
          <proceduredata virtual="true" final="true" eii="true" />
          <propertydata get="true" />
          <getter name="get_System.Collections.IDictionary.IsReadOnly" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:System.Collections.IDictionary.IsReadOnly">
              <type api="T:System.Collections.IDictionary" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="0" api="T:OOAdvantech.Collections.Generic.Dictionary`2" />
                <template name="TValue" index="1" api="T:OOAdvantech.Collections.Generic.Dictionary`2" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="P:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Keys">
          <apidata name="Keys" group="member" subgroup="property" />
          <memberdata visibility="private" />
          <proceduredata virtual="true" final="true" eii="true" />
          <propertydata get="true" />
          <getter name="get_System.Collections.IDictionary.Keys" />
          <returns>
            <type api="T:System.Collections.ICollection" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Collections.IDictionary.Keys">
              <type api="T:System.Collections.IDictionary" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="0" api="T:OOAdvantech.Collections.Generic.Dictionary`2" />
                <template name="TValue" index="1" api="T:OOAdvantech.Collections.Generic.Dictionary`2" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="P:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Values">
          <apidata name="Values" group="member" subgroup="property" />
          <memberdata visibility="private" />
          <proceduredata virtual="true" final="true" eii="true" />
          <propertydata get="true" />
          <getter name="get_System.Collections.IDictionary.Values" />
          <returns>
            <type api="T:System.Collections.ICollection" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Collections.IDictionary.Values">
              <type api="T:System.Collections.IDictionary" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="0" api="T:OOAdvantech.Collections.Generic.Dictionary`2" />
                <template name="TValue" index="1" api="T:OOAdvantech.Collections.Generic.Dictionary`2" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="P:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Item(System.Object)">
          <apidata name="Item" group="member" subgroup="property" />
          <memberdata visibility="private" />
          <proceduredata virtual="true" final="true" eii="true" />
          <propertydata get="true" set="true" />
          <getter name="get_System.Collections.IDictionary.Item" />
          <setter name="set_System.Collections.IDictionary.Item" />
          <parameters>
            <parameter name="key">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Collections.IDictionary.Item(System.Object)">
              <type api="T:System.Collections.IDictionary" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="0" api="T:OOAdvantech.Collections.Generic.Dictionary`2" />
                <template name="TValue" index="1" api="T:OOAdvantech.Collections.Generic.Dictionary`2" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Collections.Generic" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Collections.Generic.Dictionary`2.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Collections.Generic" />
        <type api="T:OOAdvantech.Collections.Generic.Dictionary`2" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Collections.Generic.Dictionary`2.#ctor(System.Collections.Generic.IDictionary{`0,`1})">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="dictionary">
          <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
            <specialization>
              <template name="TKey" index="0" api="T:OOAdvantech.Collections.Generic.Dictionary`2" />
              <template name="TValue" index="1" api="T:OOAdvantech.Collections.Generic.Dictionary`2" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Collections.Generic" />
        <type api="T:OOAdvantech.Collections.Generic.Dictionary`2" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Collections.Generic.Dictionary`2.#ctor(System.Collections.Generic.IDictionary{`0,`1},System.Collections.Generic.IEqualityComparer{`0})">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="dictionary">
          <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
            <specialization>
              <template name="TKey" index="0" api="T:OOAdvantech.Collections.Generic.Dictionary`2" />
              <template name="TValue" index="1" api="T:OOAdvantech.Collections.Generic.Dictionary`2" />
            </specialization>
          </type>
        </parameter>
        <parameter name="comparer">
          <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
            <specialization>
              <template name="TKey" index="0" api="T:OOAdvantech.Collections.Generic.Dictionary`2" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Collections.Generic" />
        <type api="T:OOAdvantech.Collections.Generic.Dictionary`2" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Collections.Generic.Dictionary`2.#ctor(System.Collections.Generic.IEqualityComparer{`0})">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="comparer">
          <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
            <specialization>
              <template name="TKey" index="0" api="T:OOAdvantech.Collections.Generic.Dictionary`2" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Collections.Generic" />
        <type api="T:OOAdvantech.Collections.Generic.Dictionary`2" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Collections.Generic.Dictionary`2.#ctor(System.Int32)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="capacity">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Collections.Generic" />
        <type api="T:OOAdvantech.Collections.Generic.Dictionary`2" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Collections.Generic.Dictionary`2.#ctor(System.Int32,System.Collections.Generic.IEqualityComparer{`0})">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="capacity">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="comparer">
          <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
            <specialization>
              <template name="TKey" index="0" api="T:OOAdvantech.Collections.Generic.Dictionary`2" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Collections.Generic" />
        <type api="T:OOAdvantech.Collections.Generic.Dictionary`2" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Collections.Generic.Dictionary`2.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Collections.Generic" />
        <type api="T:OOAdvantech.Collections.Generic.Dictionary`2" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Collections.Generic.Dictionary`2.OnDeserialization(System.Object)">
      <apidata name="OnDeserialization" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Collections.Generic.Dictionary`2.OnDeserialization(System.Object)">
          <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
            <specialization>
              <template name="TKey" index="0" api="T:OOAdvantech.Collections.Generic.Dictionary`2" />
              <template name="TValue" index="1" api="T:OOAdvantech.Collections.Generic.Dictionary`2" />
            </specialization>
          </type>
        </member>
      </overrides>
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(System.Object)">
          <type api="T:System.Runtime.Serialization.IDeserializationCallback" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Collections.Generic" />
        <type api="T:OOAdvantech.Collections.Generic.Dictionary`2" ref="true" />
      </containers>
    </api>
    <api id="T:OOAdvantech.Collections.Generic.List`1">
      <apidata name="List" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Collections.Generic.List`1" ref="true">
            <specialization>
              <template name="T" index="0" api="T:OOAdvantech.Collections.Generic.List`1" />
            </specialization>
          </type>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="T" />
      </templates>
      <implements>
        <type api="T:System.Runtime.Serialization.IDeserializationCallback" ref="true" />
      </implements>
      <elements>
        <element api="M:OOAdvantech.Collections.Generic.List`1.#ctor" />
        <element api="M:OOAdvantech.Collections.Generic.List`1.#ctor(System.Collections.Generic.IEnumerable{`0})" />
        <element api="M:OOAdvantech.Collections.Generic.List`1.#ctor(System.Int32)" />
        <element api="M:OOAdvantech.Collections.Generic.List`1.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)" />
        <element api="M:System.Collections.Generic.List`1.Add(`0)">
          <apidata name="Add" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="item">
              <template name="T" index="0" api="T:OOAdvantech.Collections.Generic.List`1" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Collections.Generic.ICollection`1.Add(`0)">
              <type api="T:System.Collections.Generic.ICollection`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Collections.Generic.IList`1" />
                </specialization>
              </type>
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:OOAdvantech.Collections.Generic.List`1" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Generic.List`1.System#Collections#IList#Add(System.Object)">
          <apidata name="Add" group="member" subgroup="method" />
          <memberdata visibility="private" />
          <proceduredata virtual="true" final="true" eii="true" />
          <parameters>
            <parameter name="item">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <implements>
            <member api="M:System.Collections.IList.Add(System.Object)">
              <type api="T:System.Collections.IList" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:OOAdvantech.Collections.Generic.List`1" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Generic.List`1.AddRange(System.Collections.Generic.IEnumerable{`0})">
          <apidata name="AddRange" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="collection">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:OOAdvantech.Collections.Generic.List`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:OOAdvantech.Collections.Generic.List`1" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Generic.List`1.AsReadOnly">
          <apidata name="AsReadOnly" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Collections.ObjectModel.ReadOnlyCollection`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:OOAdvantech.Collections.Generic.List`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:OOAdvantech.Collections.Generic.List`1" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Generic.List`1.BinarySearch(System.Int32,System.Int32,`0,System.Collections.Generic.IComparer{`0})">
          <apidata name="BinarySearch" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
            <parameter name="count">
              <type api="T:System.Int32" ref="false" />
            </parameter>
            <parameter name="item">
              <template name="T" index="0" api="T:OOAdvantech.Collections.Generic.List`1" />
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IComparer`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:OOAdvantech.Collections.Generic.List`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:OOAdvantech.Collections.Generic.List`1" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Generic.List`1.BinarySearch(`0)">
          <apidata name="BinarySearch" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="item">
              <template name="T" index="0" api="T:OOAdvantech.Collections.Generic.List`1" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:OOAdvantech.Collections.Generic.List`1" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Generic.List`1.BinarySearch(`0,System.Collections.Generic.IComparer{`0})">
          <apidata name="BinarySearch" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="item">
              <template name="T" index="0" api="T:OOAdvantech.Collections.Generic.List`1" />
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IComparer`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:OOAdvantech.Collections.Generic.List`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:OOAdvantech.Collections.Generic.List`1" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Generic.List`1.Clear">
          <apidata name="Clear" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <implements>
            <member api="M:System.Collections.Generic.ICollection`1.Clear">
              <type api="T:System.Collections.Generic.ICollection`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Collections.Generic.IList`1" />
                </specialization>
              </type>
            </member>
            <member api="M:System.Collections.IList.Clear">
              <type api="T:System.Collections.IList" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:OOAdvantech.Collections.Generic.List`1" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Generic.List`1.Contains(`0)">
          <apidata name="Contains" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="item">
              <template name="T" index="0" api="T:OOAdvantech.Collections.Generic.List`1" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="M:System.Collections.Generic.ICollection`1.Contains(`0)">
              <type api="T:System.Collections.Generic.ICollection`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Collections.Generic.IList`1" />
                </specialization>
              </type>
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:OOAdvantech.Collections.Generic.List`1" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Generic.List`1.System#Collections#IList#Contains(System.Object)">
          <apidata name="Contains" group="member" subgroup="method" />
          <memberdata visibility="private" />
          <proceduredata virtual="true" final="true" eii="true" />
          <parameters>
            <parameter name="item">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="M:System.Collections.IList.Contains(System.Object)">
              <type api="T:System.Collections.IList" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:OOAdvantech.Collections.Generic.List`1" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Generic.List`1.ConvertAll``1(System.Converter{`0,``0})">
          <apidata name="ConvertAll" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TOutput" />
          </templates>
          <parameters>
            <parameter name="converter">
              <type api="T:System.Converter`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:OOAdvantech.Collections.Generic.List`1" />
                  <template name="TOutput" index="0" api="M:System.Collections.Generic.List`1.ConvertAll``1(System.Converter{`0,``0})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <template name="TOutput" index="0" api="M:System.Collections.Generic.List`1.ConvertAll``1(System.Converter{`0,``0})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:OOAdvantech.Collections.Generic.List`1" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Generic.List`1.CopyTo(`0[])">
          <apidata name="CopyTo" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="array">
              <arrayOf rank="1">
                <template name="T" index="0" api="T:OOAdvantech.Collections.Generic.List`1" />
              </arrayOf>
            </parameter>
          </parameters>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:OOAdvantech.Collections.Generic.List`1" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Generic.List`1.CopyTo(System.Int32,`0[],System.Int32,System.Int32)">
          <apidata name="CopyTo" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
            <parameter name="array">
              <arrayOf rank="1">
                <template name="T" index="0" api="T:OOAdvantech.Collections.Generic.List`1" />
              </arrayOf>
            </parameter>
            <parameter name="arrayIndex">
              <type api="T:System.Int32" ref="false" />
            </parameter>
            <parameter name="count">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:OOAdvantech.Collections.Generic.List`1" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Generic.List`1.CopyTo(`0[],System.Int32)">
          <apidata name="CopyTo" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="array">
              <arrayOf rank="1">
                <template name="T" index="0" api="T:OOAdvantech.Collections.Generic.List`1" />
              </arrayOf>
            </parameter>
            <parameter name="arrayIndex">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)">
              <type api="T:System.Collections.Generic.ICollection`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Collections.Generic.IList`1" />
                </specialization>
              </type>
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:OOAdvantech.Collections.Generic.List`1" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Generic.List`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <apidata name="CopyTo" group="member" subgroup="method" />
          <memberdata visibility="private" />
          <proceduredata virtual="true" final="true" eii="true" />
          <parameters>
            <parameter name="array">
              <type api="T:System.Array" ref="true" />
            </parameter>
            <parameter name="arrayIndex">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)">
              <type api="T:System.Collections.ICollection" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:OOAdvantech.Collections.Generic.List`1" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Generic.List`1.Exists(System.Predicate{`0})">
          <apidata name="Exists" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="match">
              <type api="T:System.Predicate`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:OOAdvantech.Collections.Generic.List`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:OOAdvantech.Collections.Generic.List`1" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Generic.List`1.Find(System.Predicate{`0})">
          <apidata name="Find" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="match">
              <type api="T:System.Predicate`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:OOAdvantech.Collections.Generic.List`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="T:OOAdvantech.Collections.Generic.List`1" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:OOAdvantech.Collections.Generic.List`1" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Generic.List`1.FindAll(System.Predicate{`0})">
          <apidata name="FindAll" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="match">
              <type api="T:System.Predicate`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:OOAdvantech.Collections.Generic.List`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:OOAdvantech.Collections.Generic.List`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:OOAdvantech.Collections.Generic.List`1" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Generic.List`1.FindIndex(System.Predicate{`0})">
          <apidata name="FindIndex" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="match">
              <type api="T:System.Predicate`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:OOAdvantech.Collections.Generic.List`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:OOAdvantech.Collections.Generic.List`1" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Generic.List`1.FindIndex(System.Int32,System.Predicate{`0})">
          <apidata name="FindIndex" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="startIndex">
              <type api="T:System.Int32" ref="false" />
            </parameter>
            <parameter name="match">
              <type api="T:System.Predicate`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:OOAdvantech.Collections.Generic.List`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:OOAdvantech.Collections.Generic.List`1" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Generic.List`1.FindIndex(System.Int32,System.Int32,System.Predicate{`0})">
          <apidata name="FindIndex" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="startIndex">
              <type api="T:System.Int32" ref="false" />
            </parameter>
            <parameter name="count">
              <type api="T:System.Int32" ref="false" />
            </parameter>
            <parameter name="match">
              <type api="T:System.Predicate`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:OOAdvantech.Collections.Generic.List`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:OOAdvantech.Collections.Generic.List`1" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Generic.List`1.FindLast(System.Predicate{`0})">
          <apidata name="FindLast" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="match">
              <type api="T:System.Predicate`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:OOAdvantech.Collections.Generic.List`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="T:OOAdvantech.Collections.Generic.List`1" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:OOAdvantech.Collections.Generic.List`1" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Generic.List`1.FindLastIndex(System.Predicate{`0})">
          <apidata name="FindLastIndex" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="match">
              <type api="T:System.Predicate`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:OOAdvantech.Collections.Generic.List`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:OOAdvantech.Collections.Generic.List`1" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Generic.List`1.FindLastIndex(System.Int32,System.Predicate{`0})">
          <apidata name="FindLastIndex" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="startIndex">
              <type api="T:System.Int32" ref="false" />
            </parameter>
            <parameter name="match">
              <type api="T:System.Predicate`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:OOAdvantech.Collections.Generic.List`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:OOAdvantech.Collections.Generic.List`1" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Generic.List`1.FindLastIndex(System.Int32,System.Int32,System.Predicate{`0})">
          <apidata name="FindLastIndex" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="startIndex">
              <type api="T:System.Int32" ref="false" />
            </parameter>
            <parameter name="count">
              <type api="T:System.Int32" ref="false" />
            </parameter>
            <parameter name="match">
              <type api="T:System.Predicate`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:OOAdvantech.Collections.Generic.List`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:OOAdvantech.Collections.Generic.List`1" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Generic.List`1.ForEach(System.Action{`0})">
          <apidata name="ForEach" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="action">
              <type api="T:System.Action`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:OOAdvantech.Collections.Generic.List`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:OOAdvantech.Collections.Generic.List`1" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Generic.List`1.GetEnumerator">
          <apidata name="GetEnumerator" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Collections.Generic.List`1.Enumerator" ref="false">
              <type api="T:System.Collections.Generic.List`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:OOAdvantech.Collections.Generic.List`1" />
                </specialization>
              </type>
            </type>
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:OOAdvantech.Collections.Generic.List`1" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Generic.List`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator">
          <apidata name="GetEnumerator" group="member" subgroup="method" />
          <memberdata visibility="private" />
          <proceduredata virtual="true" final="true" eii="true" />
          <returns>
            <type api="T:System.Collections.Generic.IEnumerator`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:OOAdvantech.Collections.Generic.List`1" />
              </specialization>
            </type>
          </returns>
          <implements>
            <member api="M:System.Collections.Generic.IEnumerable`1.GetEnumerator">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Collections.Generic.ICollection`1" />
                </specialization>
              </type>
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:OOAdvantech.Collections.Generic.List`1" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Generic.List`1.System#Collections#IEnumerable#GetEnumerator">
          <apidata name="GetEnumerator" group="member" subgroup="method" />
          <memberdata visibility="private" />
          <proceduredata virtual="true" final="true" eii="true" />
          <returns>
            <type api="T:System.Collections.IEnumerator" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Collections.IEnumerable.GetEnumerator">
              <type api="T:System.Collections.IEnumerable" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:OOAdvantech.Collections.Generic.List`1" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Generic.List`1.GetRange(System.Int32,System.Int32)">
          <apidata name="GetRange" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
            <parameter name="count">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:OOAdvantech.Collections.Generic.List`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:OOAdvantech.Collections.Generic.List`1" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Generic.List`1.IndexOf(`0)">
          <apidata name="IndexOf" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="item">
              <template name="T" index="0" api="T:OOAdvantech.Collections.Generic.List`1" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <implements>
            <member api="M:System.Collections.Generic.IList`1.IndexOf(`0)">
              <type api="T:System.Collections.Generic.IList`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:OOAdvantech.Collections.Generic.List`1" />
                </specialization>
              </type>
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:OOAdvantech.Collections.Generic.List`1" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Generic.List`1.IndexOf(`0,System.Int32)">
          <apidata name="IndexOf" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="item">
              <template name="T" index="0" api="T:OOAdvantech.Collections.Generic.List`1" />
            </parameter>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:OOAdvantech.Collections.Generic.List`1" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Generic.List`1.IndexOf(`0,System.Int32,System.Int32)">
          <apidata name="IndexOf" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="item">
              <template name="T" index="0" api="T:OOAdvantech.Collections.Generic.List`1" />
            </parameter>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
            <parameter name="count">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:OOAdvantech.Collections.Generic.List`1" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Generic.List`1.System#Collections#IList#IndexOf(System.Object)">
          <apidata name="IndexOf" group="member" subgroup="method" />
          <memberdata visibility="private" />
          <proceduredata virtual="true" final="true" eii="true" />
          <parameters>
            <parameter name="item">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <implements>
            <member api="M:System.Collections.IList.IndexOf(System.Object)">
              <type api="T:System.Collections.IList" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:OOAdvantech.Collections.Generic.List`1" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Generic.List`1.Insert(System.Int32,`0)">
          <apidata name="Insert" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
            <parameter name="item">
              <template name="T" index="0" api="T:OOAdvantech.Collections.Generic.List`1" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Collections.Generic.IList`1.Insert(System.Int32,`0)">
              <type api="T:System.Collections.Generic.IList`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:OOAdvantech.Collections.Generic.List`1" />
                </specialization>
              </type>
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:OOAdvantech.Collections.Generic.List`1" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Generic.List`1.System#Collections#IList#Insert(System.Int32,System.Object)">
          <apidata name="Insert" group="member" subgroup="method" />
          <memberdata visibility="private" />
          <proceduredata virtual="true" final="true" eii="true" />
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
            <parameter name="item">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Collections.IList.Insert(System.Int32,System.Object)">
              <type api="T:System.Collections.IList" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:OOAdvantech.Collections.Generic.List`1" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Generic.List`1.InsertRange(System.Int32,System.Collections.Generic.IEnumerable{`0})">
          <apidata name="InsertRange" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
            <parameter name="collection">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:OOAdvantech.Collections.Generic.List`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:OOAdvantech.Collections.Generic.List`1" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Generic.List`1.LastIndexOf(`0)">
          <apidata name="LastIndexOf" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="item">
              <template name="T" index="0" api="T:OOAdvantech.Collections.Generic.List`1" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:OOAdvantech.Collections.Generic.List`1" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Generic.List`1.LastIndexOf(`0,System.Int32)">
          <apidata name="LastIndexOf" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="item">
              <template name="T" index="0" api="T:OOAdvantech.Collections.Generic.List`1" />
            </parameter>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:OOAdvantech.Collections.Generic.List`1" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Generic.List`1.LastIndexOf(`0,System.Int32,System.Int32)">
          <apidata name="LastIndexOf" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="item">
              <template name="T" index="0" api="T:OOAdvantech.Collections.Generic.List`1" />
            </parameter>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
            <parameter name="count">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:OOAdvantech.Collections.Generic.List`1" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Generic.List`1.Remove(`0)">
          <apidata name="Remove" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="item">
              <template name="T" index="0" api="T:OOAdvantech.Collections.Generic.List`1" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="M:System.Collections.Generic.ICollection`1.Remove(`0)">
              <type api="T:System.Collections.Generic.ICollection`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Collections.Generic.IList`1" />
                </specialization>
              </type>
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:OOAdvantech.Collections.Generic.List`1" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Generic.List`1.System#Collections#IList#Remove(System.Object)">
          <apidata name="Remove" group="member" subgroup="method" />
          <memberdata visibility="private" />
          <proceduredata virtual="true" final="true" eii="true" />
          <parameters>
            <parameter name="item">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Collections.IList.Remove(System.Object)">
              <type api="T:System.Collections.IList" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:OOAdvantech.Collections.Generic.List`1" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Generic.List`1.RemoveAll(System.Predicate{`0})">
          <apidata name="RemoveAll" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="match">
              <type api="T:System.Predicate`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:OOAdvantech.Collections.Generic.List`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:OOAdvantech.Collections.Generic.List`1" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Generic.List`1.RemoveAt(System.Int32)">
          <apidata name="RemoveAt" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Collections.Generic.IList`1.RemoveAt(System.Int32)">
              <type api="T:System.Collections.Generic.IList`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:OOAdvantech.Collections.Generic.List`1" />
                </specialization>
              </type>
            </member>
            <member api="M:System.Collections.IList.RemoveAt(System.Int32)">
              <type api="T:System.Collections.IList" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:OOAdvantech.Collections.Generic.List`1" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Generic.List`1.RemoveRange(System.Int32,System.Int32)">
          <apidata name="RemoveRange" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
            <parameter name="count">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:OOAdvantech.Collections.Generic.List`1" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Generic.List`1.Reverse">
          <apidata name="Reverse" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:OOAdvantech.Collections.Generic.List`1" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Generic.List`1.Reverse(System.Int32,System.Int32)">
          <apidata name="Reverse" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
            <parameter name="count">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:OOAdvantech.Collections.Generic.List`1" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Generic.List`1.Sort">
          <apidata name="Sort" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:OOAdvantech.Collections.Generic.List`1" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Generic.List`1.Sort(System.Collections.Generic.IComparer{`0})">
          <apidata name="Sort" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IComparer`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:OOAdvantech.Collections.Generic.List`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:OOAdvantech.Collections.Generic.List`1" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Generic.List`1.Sort(System.Int32,System.Int32,System.Collections.Generic.IComparer{`0})">
          <apidata name="Sort" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
            <parameter name="count">
              <type api="T:System.Int32" ref="false" />
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IComparer`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:OOAdvantech.Collections.Generic.List`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:OOAdvantech.Collections.Generic.List`1" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Generic.List`1.Sort(System.Comparison{`0})">
          <apidata name="Sort" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="comparison">
              <type api="T:System.Comparison`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:OOAdvantech.Collections.Generic.List`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:OOAdvantech.Collections.Generic.List`1" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Generic.List`1.ToArray">
          <apidata name="ToArray" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <arrayOf rank="1">
              <template name="T" index="0" api="T:OOAdvantech.Collections.Generic.List`1" />
            </arrayOf>
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:OOAdvantech.Collections.Generic.List`1" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Generic.List`1.TrimExcess">
          <apidata name="TrimExcess" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:OOAdvantech.Collections.Generic.List`1" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Generic.List`1.TrueForAll(System.Predicate{`0})">
          <apidata name="TrueForAll" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="match">
              <type api="T:System.Predicate`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:OOAdvantech.Collections.Generic.List`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:OOAdvantech.Collections.Generic.List`1" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="P:System.Collections.Generic.List`1.Capacity">
          <apidata name="Capacity" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_Capacity" />
          <setter name="set_Capacity" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:OOAdvantech.Collections.Generic.List`1" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="P:System.Collections.Generic.List`1.Count">
          <apidata name="Count" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_Count" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <implements>
            <member api="P:System.Collections.Generic.ICollection`1.Count">
              <type api="T:System.Collections.Generic.ICollection`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Collections.Generic.IList`1" />
                </specialization>
              </type>
            </member>
            <member api="P:System.Collections.ICollection.Count">
              <type api="T:System.Collections.ICollection" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:OOAdvantech.Collections.Generic.List`1" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="P:System.Collections.Generic.List`1.System#Collections#IList#IsFixedSize">
          <apidata name="IsFixedSize" group="member" subgroup="property" />
          <memberdata visibility="private" />
          <proceduredata virtual="true" final="true" eii="true" />
          <propertydata get="true" />
          <getter name="get_System.Collections.IList.IsFixedSize" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:System.Collections.IList.IsFixedSize">
              <type api="T:System.Collections.IList" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:OOAdvantech.Collections.Generic.List`1" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="P:System.Collections.Generic.List`1.System#Collections#Generic#ICollection{T}#IsReadOnly">
          <apidata name="IsReadOnly" group="member" subgroup="property" />
          <memberdata visibility="private" />
          <proceduredata virtual="true" final="true" eii="true" />
          <propertydata get="true" />
          <getter name="get_System.Collections.Generic.ICollection&lt;T&gt;.IsReadOnly" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:System.Collections.Generic.ICollection`1.IsReadOnly">
              <type api="T:System.Collections.Generic.ICollection`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Collections.Generic.IList`1" />
                </specialization>
              </type>
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:OOAdvantech.Collections.Generic.List`1" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="P:System.Collections.Generic.List`1.System#Collections#IList#IsReadOnly">
          <apidata name="IsReadOnly" group="member" subgroup="property" />
          <memberdata visibility="private" />
          <proceduredata virtual="true" final="true" eii="true" />
          <propertydata get="true" />
          <getter name="get_System.Collections.IList.IsReadOnly" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:System.Collections.IList.IsReadOnly">
              <type api="T:System.Collections.IList" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:OOAdvantech.Collections.Generic.List`1" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="P:System.Collections.Generic.List`1.System#Collections#ICollection#IsSynchronized">
          <apidata name="IsSynchronized" group="member" subgroup="property" />
          <memberdata visibility="private" />
          <proceduredata virtual="true" final="true" eii="true" />
          <propertydata get="true" />
          <getter name="get_System.Collections.ICollection.IsSynchronized" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:System.Collections.ICollection.IsSynchronized">
              <type api="T:System.Collections.ICollection" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:OOAdvantech.Collections.Generic.List`1" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="P:System.Collections.Generic.List`1.System#Collections#ICollection#SyncRoot">
          <apidata name="SyncRoot" group="member" subgroup="property" />
          <memberdata visibility="private" />
          <proceduredata virtual="true" final="true" eii="true" />
          <propertydata get="true" />
          <getter name="get_System.Collections.ICollection.SyncRoot" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Collections.ICollection.SyncRoot">
              <type api="T:System.Collections.ICollection" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:OOAdvantech.Collections.Generic.List`1" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="P:System.Collections.Generic.List`1.Item(System.Int32)">
          <apidata name="Item" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Item" />
          <setter name="set_Item" />
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="T:OOAdvantech.Collections.Generic.List`1" />
          </returns>
          <implements>
            <member api="P:System.Collections.Generic.IList`1.Item(System.Int32)">
              <type api="T:System.Collections.Generic.IList`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:OOAdvantech.Collections.Generic.List`1" />
                </specialization>
              </type>
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:OOAdvantech.Collections.Generic.List`1" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="P:System.Collections.Generic.List`1.System#Collections#IList#Item(System.Int32)">
          <apidata name="Item" group="member" subgroup="property" />
          <memberdata visibility="private" />
          <proceduredata virtual="true" final="true" eii="true" />
          <propertydata get="true" set="true" />
          <getter name="get_System.Collections.IList.Item" />
          <setter name="set_System.Collections.IList.Item" />
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Collections.IList.Item(System.Int32)">
              <type api="T:System.Collections.IList" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:OOAdvantech.Collections.Generic.List`1" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Collections.Generic" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Collections.Generic.List`1.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Collections.Generic" />
        <type api="T:OOAdvantech.Collections.Generic.List`1" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Collections.Generic.List`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="collection">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="T" index="0" api="T:OOAdvantech.Collections.Generic.List`1" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Collections.Generic" />
        <type api="T:OOAdvantech.Collections.Generic.List`1" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Collections.Generic.List`1.#ctor(System.Int32)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="capacity">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Collections.Generic" />
        <type api="T:OOAdvantech.Collections.Generic.List`1" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Collections.Generic.List`1.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)">
      <apidata name="OnDeserialization" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(System.Object)">
          <type api="T:System.Runtime.Serialization.IDeserializationCallback" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Collections.Generic" />
        <type api="T:OOAdvantech.Collections.Generic.List`1" ref="true" />
      </containers>
    </api>
    <api id="T:OOAdvantech.Collections.Generic.Set`1">
      <apidata name="Set" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:OOAdvantech.PersistenceLayer.ObjectContainer" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="T" />
      </templates>
      <implements>
        <type api="T:OOAdvantech.Transactions.ITransactionalObject" ref="true" />
        <type api="T:System.Collections.IList" ref="true" />
        <type api="T:System.Collections.ICollection" ref="true" />
        <type api="T:System.Collections.Generic.IList`1" ref="true">
          <specialization>
            <template name="T" index="0" api="T:OOAdvantech.Collections.Generic.Set`1" />
          </specialization>
        </type>
        <type api="T:System.Collections.Generic.ICollection`1" ref="true">
          <specialization>
            <template name="T" index="0" api="T:OOAdvantech.Collections.Generic.Set`1" />
          </specialization>
        </type>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <template name="T" index="0" api="T:OOAdvantech.Collections.Generic.Set`1" />
          </specialization>
        </type>
        <type api="T:System.Collections.IEnumerable" ref="true" />
        <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
      </implements>
      <elements>
        <element api="M:OOAdvantech.Collections.Generic.Set`1.GetObjectEnumerator" />
        <element api="M:OOAdvantech.Collections.Generic.Set`1.CopyTo(`0[],System.Int32)" />
        <element api="M:OOAdvantech.Collections.Generic.Set`1.Clear" />
        <element api="M:OOAdvantech.Collections.Generic.Set`1.#ctor" />
        <element api="M:OOAdvantech.Collections.Generic.Set`1.#ctor(System.Collections.Generic.ICollection{`0})" />
        <element api="M:OOAdvantech.Collections.Generic.Set`1.#ctor(OOAdvantech.Collections.Generic.Set{`0},OOAdvantech.Collections.CollectionAccessType)" />
        <element api="M:OOAdvantech.Collections.Generic.Set`1.IndexOf(`0)" />
        <element api="M:OOAdvantech.Collections.Generic.Set`1.Insert(System.Int32,`0)" />
        <element api="M:OOAdvantech.Collections.Generic.Set`1.Insert(System.Int32,System.Object)" />
        <element api="M:OOAdvantech.Collections.Generic.Set`1.InsertRange(System.Int32,System.Collections.Generic.IEnumerable{`0})" />
        <element api="M:OOAdvantech.Collections.Generic.Set`1.RemoveAt(System.Int32)" />
        <element api="M:OOAdvantech.Collections.Generic.Set`1.RemoveRange(System.Int32,System.Int32)" />
        <element api="M:OOAdvantech.Collections.Generic.Set`1.Sort" />
        <element api="M:OOAdvantech.Collections.Generic.Set`1.Sort(System.Comparison{`0})" />
        <element api="M:OOAdvantech.Collections.Generic.Set`1.Sort(System.Collections.Generic.IComparer{`0})" />
        <element api="M:OOAdvantech.Collections.Generic.Set`1.Sort(System.Int32,System.Int32,System.Collections.Generic.IComparer{`0})" />
        <element api="M:OOAdvantech.Collections.Generic.Set`1.MarkChanges(OOAdvantech.Transactions.Transaction)" />
        <element api="M:OOAdvantech.Collections.Generic.Set`1.MarkChanges(OOAdvantech.Transactions.Transaction,System.Reflection.FieldInfo[])" />
        <element api="M:OOAdvantech.Collections.Generic.Set`1.MergeChanges(OOAdvantech.Transactions.Transaction,OOAdvantech.Transactions.Transaction)" />
        <element api="M:OOAdvantech.Collections.Generic.Set`1.UndoChanges(OOAdvantech.Transactions.Transaction)" />
        <element api="M:OOAdvantech.Collections.Generic.Set`1.CommitChanges(OOAdvantech.Transactions.Transaction)" />
        <element api="M:OOAdvantech.Collections.Generic.Set`1.RemoveAll" />
        <element api="M:OOAdvantech.Collections.Generic.Set`1.Contains(`0)" />
        <element api="M:OOAdvantech.Collections.Generic.Set`1.AddRange(System.Collections.Generic.IEnumerable{`0})" />
        <element api="M:OOAdvantech.Collections.Generic.Set`1.GetEnumerator" />
        <element api="M:OOAdvantech.Collections.Generic.Set`1.CanDeletePermanently(`0)" />
        <element api="M:OOAdvantech.Collections.Generic.Set`1.Remove(`0)" />
        <element api="M:OOAdvantech.Collections.Generic.Set`1.Add(`0)" />
        <element api="M:OOAdvantech.Collections.Generic.Set`1.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:OOAdvantech.Collections.Generic.Set`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator" />
        <element api="M:OOAdvantech.Collections.Generic.Set`1.System#Collections#IEnumerable#GetEnumerator" />
        <element api="M:OOAdvantech.Collections.Generic.Set`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:OOAdvantech.Collections.Generic.Set`1.System#Collections#IList#Add(System.Object)" />
        <element api="M:OOAdvantech.Collections.Generic.Set`1.System#Collections#IList#Contains(System.Object)" />
        <element api="M:OOAdvantech.Collections.Generic.Set`1.System#Collections#IList#IndexOf(System.Object)" />
        <element api="M:OOAdvantech.Collections.Generic.Set`1.System#Collections#IList#Remove(System.Object)" />
        <element api="P:OOAdvantech.Collections.Generic.Set`1.IsReadOnly" />
        <element api="P:OOAdvantech.Collections.Generic.Set`1.Item(System.Int32)" />
        <element api="P:OOAdvantech.Collections.Generic.Set`1.Count" />
        <element api="P:OOAdvantech.Collections.Generic.Set`1.System#Collections#ICollection#Count" />
        <element api="P:OOAdvantech.Collections.Generic.Set`1.System#Collections#ICollection#IsSynchronized" />
        <element api="P:OOAdvantech.Collections.Generic.Set`1.System#Collections#ICollection#SyncRoot" />
        <element api="P:OOAdvantech.Collections.Generic.Set`1.System#Collections#IList#IsFixedSize" />
        <element api="P:OOAdvantech.Collections.Generic.Set`1.System#Collections#IList#Item(System.Int32)" />
        <element api="F:OOAdvantech.PersistenceLayer.ObjectContainer._theObjects" />
        <element api="M:OOAdvantech.PersistenceLayer.ObjectContainer.Init(System.Collections.ICollection)" />
        <element api="P:OOAdvantech.PersistenceLayer.ObjectContainer.theObjects" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Collections.Generic" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Collections.Generic.Set`1.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Collections.Generic" />
        <type api="T:OOAdvantech.Collections.Generic.Set`1" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Collections.Generic.Set`1.#ctor(OOAdvantech.Collections.Generic.Set{`0},OOAdvantech.Collections.CollectionAccessType)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="objectSet">
          <type api="T:OOAdvantech.Collections.Generic.Set`1" ref="true">
            <specialization>
              <template name="T" index="0" api="T:OOAdvantech.Collections.Generic.Set`1" />
            </specialization>
          </type>
        </parameter>
        <parameter name="accessType">
          <type api="T:OOAdvantech.Collections.CollectionAccessType" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Collections.Generic" />
        <type api="T:OOAdvantech.Collections.Generic.Set`1" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Collections.Generic.Set`1.#ctor(System.Collections.Generic.ICollection{`0})">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="objectSet">
          <type api="T:System.Collections.Generic.ICollection`1" ref="true">
            <specialization>
              <template name="T" index="0" api="T:OOAdvantech.Collections.Generic.Set`1" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Collections.Generic" />
        <type api="T:OOAdvantech.Collections.Generic.Set`1" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Collections.Generic.Set`1.Add(`0)">
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="theObject">
          <template name="T" index="0" api="T:OOAdvantech.Collections.Generic.Set`1" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Collections.Generic.ICollection`1.Add(`0)">
          <type api="T:System.Collections.Generic.ICollection`1" ref="true">
            <specialization>
              <template name="T" index="0" api="T:OOAdvantech.Collections.Generic.Set`1" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Collections.Generic" />
        <type api="T:OOAdvantech.Collections.Generic.Set`1" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Collections.Generic.Set`1.AddRange(System.Collections.Generic.IEnumerable{`0})">
      <apidata name="AddRange" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="theObjectCollection">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="T" index="0" api="T:OOAdvantech.Collections.Generic.Set`1" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Collections.Generic" />
        <type api="T:OOAdvantech.Collections.Generic.Set`1" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Collections.Generic.Set`1.CanDeletePermanently(`0)">
      <apidata name="CanDeletePermanently" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="theObject">
          <template name="T" index="0" api="T:OOAdvantech.Collections.Generic.Set`1" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Collections.Generic" />
        <type api="T:OOAdvantech.Collections.Generic.Set`1" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Collections.Generic.Set`1.Clear">
      <apidata name="Clear" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.Collections.IList.Clear">
          <type api="T:System.Collections.IList" ref="true" />
        </member>
        <member api="M:System.Collections.Generic.ICollection`1.Clear">
          <type api="T:System.Collections.Generic.ICollection`1" ref="true">
            <specialization>
              <template name="T" index="0" api="T:OOAdvantech.Collections.Generic.Set`1" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Collections.Generic" />
        <type api="T:OOAdvantech.Collections.Generic.Set`1" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Collections.Generic.Set`1.CommitChanges(OOAdvantech.Transactions.Transaction)">
      <apidata name="CommitChanges" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="transaction">
          <type api="T:OOAdvantech.Transactions.Transaction" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:OOAdvantech.Transactions.ITransactionalObject.CommitChanges(OOAdvantech.Transactions.Transaction)">
          <type api="T:OOAdvantech.Transactions.ITransactionalObject" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Collections.Generic" />
        <type api="T:OOAdvantech.Collections.Generic.Set`1" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Collections.Generic.Set`1.Contains(`0)">
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="Object">
          <template name="T" index="0" api="T:OOAdvantech.Collections.Generic.Set`1" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Collections.Generic.ICollection`1.Contains(`0)">
          <type api="T:System.Collections.Generic.ICollection`1" ref="true">
            <specialization>
              <template name="T" index="0" api="T:OOAdvantech.Collections.Generic.Set`1" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Collections.Generic" />
        <type api="T:OOAdvantech.Collections.Generic.Set`1" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Collections.Generic.Set`1.CopyTo(`0[],System.Int32)">
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="array">
          <arrayOf rank="1">
            <template name="T" index="0" api="T:OOAdvantech.Collections.Generic.Set`1" />
          </arrayOf>
        </parameter>
        <parameter name="arrayIndex">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)">
          <type api="T:System.Collections.Generic.ICollection`1" ref="true">
            <specialization>
              <template name="T" index="0" api="T:OOAdvantech.Collections.Generic.Set`1" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Collections.Generic" />
        <type api="T:OOAdvantech.Collections.Generic.Set`1" ref="true" />
      </containers>
    </api>
    <api id="P:OOAdvantech.Collections.Generic.Set`1.Count">
      <apidata name="Count" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_Count" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Collections.Generic.ICollection`1.Count">
          <type api="T:System.Collections.Generic.ICollection`1" ref="true">
            <specialization>
              <template name="T" index="0" api="T:OOAdvantech.Collections.Generic.Set`1" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Collections.Generic" />
        <type api="T:OOAdvantech.Collections.Generic.Set`1" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Collections.Generic.Set`1.GetEnumerator">
      <apidata name="GetEnumerator" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Collections.Generic.IEnumerator`1" ref="true">
          <specialization>
            <template name="T" index="0" api="T:OOAdvantech.Collections.Generic.Set`1" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Collections.Generic" />
        <type api="T:OOAdvantech.Collections.Generic.Set`1" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Collections.Generic.Set`1.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <apidata name="GetObjectData" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Collections.Generic" />
        <type api="T:OOAdvantech.Collections.Generic.Set`1" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Collections.Generic.Set`1.GetObjectEnumerator">
      <apidata name="GetObjectEnumerator" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:OOAdvantech.PersistenceLayer.ObjectContainer.GetObjectEnumerator">
          <type api="T:OOAdvantech.PersistenceLayer.ObjectContainer" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Collections.IEnumerator" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Collections.Generic" />
        <type api="T:OOAdvantech.Collections.Generic.Set`1" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Collections.Generic.Set`1.IndexOf(`0)">
      <apidata name="IndexOf" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="item">
          <template name="T" index="0" api="T:OOAdvantech.Collections.Generic.Set`1" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Collections.Generic.IList`1.IndexOf(`0)">
          <type api="T:System.Collections.Generic.IList`1" ref="true">
            <specialization>
              <template name="T" index="0" api="T:OOAdvantech.Collections.Generic.Set`1" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Collections.Generic" />
        <type api="T:OOAdvantech.Collections.Generic.Set`1" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Collections.Generic.Set`1.Insert(System.Int32,System.Object)">
      <apidata name="Insert" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Collections.IList.Insert(System.Int32,System.Object)">
          <type api="T:System.Collections.IList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Collections.Generic" />
        <type api="T:OOAdvantech.Collections.Generic.Set`1" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Collections.Generic.Set`1.Insert(System.Int32,`0)">
      <apidata name="Insert" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="item">
          <template name="T" index="0" api="T:OOAdvantech.Collections.Generic.Set`1" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Collections.Generic.IList`1.Insert(System.Int32,`0)">
          <type api="T:System.Collections.Generic.IList`1" ref="true">
            <specialization>
              <template name="T" index="0" api="T:OOAdvantech.Collections.Generic.Set`1" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Collections.Generic" />
        <type api="T:OOAdvantech.Collections.Generic.Set`1" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Collections.Generic.Set`1.InsertRange(System.Int32,System.Collections.Generic.IEnumerable{`0})">
      <apidata name="InsertRange" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="collection">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="T" index="0" api="T:OOAdvantech.Collections.Generic.Set`1" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Collections.Generic" />
        <type api="T:OOAdvantech.Collections.Generic.Set`1" ref="true" />
      </containers>
    </api>
    <api id="P:OOAdvantech.Collections.Generic.Set`1.IsReadOnly">
      <apidata name="IsReadOnly" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_IsReadOnly" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Collections.IList.IsReadOnly">
          <type api="T:System.Collections.IList" ref="true" />
        </member>
        <member api="P:System.Collections.Generic.ICollection`1.IsReadOnly">
          <type api="T:System.Collections.Generic.ICollection`1" ref="true">
            <specialization>
              <template name="T" index="0" api="T:OOAdvantech.Collections.Generic.Set`1" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Collections.Generic" />
        <type api="T:OOAdvantech.Collections.Generic.Set`1" ref="true" />
      </containers>
    </api>
    <api id="P:OOAdvantech.Collections.Generic.Set`1.Item(System.Int32)">
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Item" />
      <setter name="set_Item" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="T:OOAdvantech.Collections.Generic.Set`1" />
      </returns>
      <implements>
        <member api="P:System.Collections.Generic.IList`1.Item(System.Int32)">
          <type api="T:System.Collections.Generic.IList`1" ref="true">
            <specialization>
              <template name="T" index="0" api="T:OOAdvantech.Collections.Generic.Set`1" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Collections.Generic" />
        <type api="T:OOAdvantech.Collections.Generic.Set`1" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Collections.Generic.Set`1.MarkChanges(OOAdvantech.Transactions.Transaction)">
      <apidata name="MarkChanges" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="transaction">
          <type api="T:OOAdvantech.Transactions.Transaction" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:OOAdvantech.Transactions.ITransactionalObject.MarkChanges(OOAdvantech.Transactions.Transaction)">
          <type api="T:OOAdvantech.Transactions.ITransactionalObject" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Collections.Generic" />
        <type api="T:OOAdvantech.Collections.Generic.Set`1" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Collections.Generic.Set`1.MarkChanges(OOAdvantech.Transactions.Transaction,System.Reflection.FieldInfo[])">
      <apidata name="MarkChanges" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="transaction">
          <type api="T:OOAdvantech.Transactions.Transaction" ref="true" />
        </parameter>
        <parameter name="fields">
          <arrayOf rank="1">
            <type api="T:System.Reflection.FieldInfo" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <implements>
        <member api="M:OOAdvantech.Transactions.ITransactionalObject.MarkChanges(OOAdvantech.Transactions.Transaction,System.Reflection.FieldInfo[])">
          <type api="T:OOAdvantech.Transactions.ITransactionalObject" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Collections.Generic" />
        <type api="T:OOAdvantech.Collections.Generic.Set`1" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Collections.Generic.Set`1.MergeChanges(OOAdvantech.Transactions.Transaction,OOAdvantech.Transactions.Transaction)">
      <apidata name="MergeChanges" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="mergeInTransaction">
          <type api="T:OOAdvantech.Transactions.Transaction" ref="true" />
        </parameter>
        <parameter name="mergedTransaction">
          <type api="T:OOAdvantech.Transactions.Transaction" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:OOAdvantech.Transactions.ITransactionalObject.MergeChanges(OOAdvantech.Transactions.Transaction,OOAdvantech.Transactions.Transaction)">
          <type api="T:OOAdvantech.Transactions.ITransactionalObject" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Collections.Generic" />
        <type api="T:OOAdvantech.Collections.Generic.Set`1" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Collections.Generic.Set`1.Remove(`0)">
      <apidata name="Remove" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="theObject">
          <template name="T" index="0" api="T:OOAdvantech.Collections.Generic.Set`1" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Collections.Generic.ICollection`1.Remove(`0)">
          <type api="T:System.Collections.Generic.ICollection`1" ref="true">
            <specialization>
              <template name="T" index="0" api="T:OOAdvantech.Collections.Generic.Set`1" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Collections.Generic" />
        <type api="T:OOAdvantech.Collections.Generic.Set`1" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Collections.Generic.Set`1.RemoveAll">
      <apidata name="RemoveAll" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Collections.Generic" />
        <type api="T:OOAdvantech.Collections.Generic.Set`1" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Collections.Generic.Set`1.RemoveAt(System.Int32)">
      <apidata name="RemoveAt" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Collections.IList.RemoveAt(System.Int32)">
          <type api="T:System.Collections.IList" ref="true" />
        </member>
        <member api="M:System.Collections.Generic.IList`1.RemoveAt(System.Int32)">
          <type api="T:System.Collections.Generic.IList`1" ref="true">
            <specialization>
              <template name="T" index="0" api="T:OOAdvantech.Collections.Generic.Set`1" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Collections.Generic" />
        <type api="T:OOAdvantech.Collections.Generic.Set`1" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Collections.Generic.Set`1.RemoveRange(System.Int32,System.Int32)">
      <apidata name="RemoveRange" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="count">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Collections.Generic" />
        <type api="T:OOAdvantech.Collections.Generic.Set`1" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Collections.Generic.Set`1.Sort">
      <apidata name="Sort" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Collections.Generic" />
        <type api="T:OOAdvantech.Collections.Generic.Set`1" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Collections.Generic.Set`1.Sort(System.Collections.Generic.IComparer{`0})">
      <apidata name="Sort" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="comparer">
          <type api="T:System.Collections.Generic.IComparer`1" ref="true">
            <specialization>
              <template name="T" index="0" api="T:OOAdvantech.Collections.Generic.Set`1" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Collections.Generic" />
        <type api="T:OOAdvantech.Collections.Generic.Set`1" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Collections.Generic.Set`1.Sort(System.Comparison{`0})">
      <apidata name="Sort" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="comparison">
          <type api="T:System.Comparison`1" ref="true">
            <specialization>
              <template name="T" index="0" api="T:OOAdvantech.Collections.Generic.Set`1" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Collections.Generic" />
        <type api="T:OOAdvantech.Collections.Generic.Set`1" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Collections.Generic.Set`1.Sort(System.Int32,System.Int32,System.Collections.Generic.IComparer{`0})">
      <apidata name="Sort" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="count">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="comparer">
          <type api="T:System.Collections.Generic.IComparer`1" ref="true">
            <specialization>
              <template name="T" index="0" api="T:OOAdvantech.Collections.Generic.Set`1" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Collections.Generic" />
        <type api="T:OOAdvantech.Collections.Generic.Set`1" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Collections.Generic.Set`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator">
      <apidata name="GetEnumerator" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <returns>
        <type api="T:System.Collections.Generic.IEnumerator`1" ref="true">
          <specialization>
            <template name="T" index="0" api="T:OOAdvantech.Collections.Generic.Set`1" />
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="M:System.Collections.Generic.IEnumerable`1.GetEnumerator">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="T" index="0" api="T:OOAdvantech.Collections.Generic.Set`1" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Collections.Generic" />
        <type api="T:OOAdvantech.Collections.Generic.Set`1" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Collections.Generic.Set`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="array">
          <type api="T:System.Array" ref="true" />
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)">
          <type api="T:System.Collections.ICollection" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Collections.Generic" />
        <type api="T:OOAdvantech.Collections.Generic.Set`1" ref="true" />
      </containers>
    </api>
    <api id="P:OOAdvantech.Collections.Generic.Set`1.System#Collections#ICollection#Count">
      <apidata name="Count" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.Collections.ICollection.Count" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Collections.ICollection.Count">
          <type api="T:System.Collections.ICollection" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Collections.Generic" />
        <type api="T:OOAdvantech.Collections.Generic.Set`1" ref="true" />
      </containers>
    </api>
    <api id="P:OOAdvantech.Collections.Generic.Set`1.System#Collections#ICollection#IsSynchronized">
      <apidata name="IsSynchronized" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.Collections.ICollection.IsSynchronized" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Collections.ICollection.IsSynchronized">
          <type api="T:System.Collections.ICollection" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Collections.Generic" />
        <type api="T:OOAdvantech.Collections.Generic.Set`1" ref="true" />
      </containers>
    </api>
    <api id="P:OOAdvantech.Collections.Generic.Set`1.System#Collections#ICollection#SyncRoot">
      <apidata name="SyncRoot" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.Collections.ICollection.SyncRoot" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="P:System.Collections.ICollection.SyncRoot">
          <type api="T:System.Collections.ICollection" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Collections.Generic" />
        <type api="T:OOAdvantech.Collections.Generic.Set`1" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Collections.Generic.Set`1.System#Collections#IEnumerable#GetEnumerator">
      <apidata name="GetEnumerator" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <returns>
        <type api="T:System.Collections.IEnumerator" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Collections.IEnumerable.GetEnumerator">
          <type api="T:System.Collections.IEnumerable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Collections.Generic" />
        <type api="T:OOAdvantech.Collections.Generic.Set`1" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Collections.Generic.Set`1.System#Collections#IList#Add(System.Object)">
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Collections.IList.Add(System.Object)">
          <type api="T:System.Collections.IList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Collections.Generic" />
        <type api="T:OOAdvantech.Collections.Generic.Set`1" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Collections.Generic.Set`1.System#Collections#IList#Contains(System.Object)">
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Collections.IList.Contains(System.Object)">
          <type api="T:System.Collections.IList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Collections.Generic" />
        <type api="T:OOAdvantech.Collections.Generic.Set`1" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Collections.Generic.Set`1.System#Collections#IList#IndexOf(System.Object)">
      <apidata name="IndexOf" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Collections.IList.IndexOf(System.Object)">
          <type api="T:System.Collections.IList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Collections.Generic" />
        <type api="T:OOAdvantech.Collections.Generic.Set`1" ref="true" />
      </containers>
    </api>
    <api id="P:OOAdvantech.Collections.Generic.Set`1.System#Collections#IList#IsFixedSize">
      <apidata name="IsFixedSize" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.Collections.IList.IsFixedSize" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Collections.IList.IsFixedSize">
          <type api="T:System.Collections.IList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Collections.Generic" />
        <type api="T:OOAdvantech.Collections.Generic.Set`1" ref="true" />
      </containers>
    </api>
    <api id="P:OOAdvantech.Collections.Generic.Set`1.System#Collections#IList#Item(System.Int32)">
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" set="true" />
      <getter name="get_System.Collections.IList.Item" />
      <setter name="set_System.Collections.IList.Item" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="P:System.Collections.IList.Item(System.Int32)">
          <type api="T:System.Collections.IList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Collections.Generic" />
        <type api="T:OOAdvantech.Collections.Generic.Set`1" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Collections.Generic.Set`1.System#Collections#IList#Remove(System.Object)">
      <apidata name="Remove" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Collections.IList.Remove(System.Object)">
          <type api="T:System.Collections.IList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Collections.Generic" />
        <type api="T:OOAdvantech.Collections.Generic.Set`1" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Collections.Generic.Set`1.UndoChanges(OOAdvantech.Transactions.Transaction)">
      <apidata name="UndoChanges" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="transaction">
          <type api="T:OOAdvantech.Transactions.Transaction" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:OOAdvantech.Transactions.ITransactionalObject.UndoChanges(OOAdvantech.Transactions.Transaction)">
          <type api="T:OOAdvantech.Transactions.ITransactionalObject" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Collections.Generic" />
        <type api="T:OOAdvantech.Collections.Generic.Set`1" ref="true" />
      </containers>
    </api>
    <api id="T:OOAdvantech.Collections.Generic.Stack`1">
      <apidata name="Stack" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Collections.Generic.Stack`1" ref="true">
            <specialization>
              <template name="T" index="0" api="T:OOAdvantech.Collections.Generic.Stack`1" />
            </specialization>
          </type>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="T" />
      </templates>
      <implements>
        <type api="T:System.Runtime.Serialization.IDeserializationCallback" ref="true" />
      </implements>
      <elements>
        <element api="M:OOAdvantech.Collections.Generic.Stack`1.#ctor" />
        <element api="M:OOAdvantech.Collections.Generic.Stack`1.#ctor(System.Int32)" />
        <element api="M:OOAdvantech.Collections.Generic.Stack`1.#ctor(System.Collections.Generic.IEnumerable{`0})" />
        <element api="M:OOAdvantech.Collections.Generic.Stack`1.OnDeserialization(System.Object)" />
        <element api="M:System.Collections.Generic.Stack`1.Clear">
          <apidata name="Clear" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <containers>
            <library assembly="System" module="System" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.Stack`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:OOAdvantech.Collections.Generic.Stack`1" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Generic.Stack`1.Contains(`0)">
          <apidata name="Contains" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="item">
              <template name="T" index="0" api="T:OOAdvantech.Collections.Generic.Stack`1" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System" module="System" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.Stack`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:OOAdvantech.Collections.Generic.Stack`1" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Generic.Stack`1.CopyTo(`0[],System.Int32)">
          <apidata name="CopyTo" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="array">
              <arrayOf rank="1">
                <template name="T" index="0" api="T:OOAdvantech.Collections.Generic.Stack`1" />
              </arrayOf>
            </parameter>
            <parameter name="arrayIndex">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="System" module="System" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.Stack`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:OOAdvantech.Collections.Generic.Stack`1" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Generic.Stack`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <apidata name="CopyTo" group="member" subgroup="method" />
          <memberdata visibility="private" />
          <proceduredata virtual="true" final="true" eii="true" />
          <parameters>
            <parameter name="array">
              <type api="T:System.Array" ref="true" />
            </parameter>
            <parameter name="arrayIndex">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)">
              <type api="T:System.Collections.ICollection" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="System" module="System" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.Stack`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:OOAdvantech.Collections.Generic.Stack`1" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Generic.Stack`1.GetEnumerator">
          <apidata name="GetEnumerator" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Collections.Generic.Stack`1.Enumerator" ref="false">
              <type api="T:System.Collections.Generic.Stack`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:OOAdvantech.Collections.Generic.Stack`1" />
                </specialization>
              </type>
            </type>
          </returns>
          <containers>
            <library assembly="System" module="System" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.Stack`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:OOAdvantech.Collections.Generic.Stack`1" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Generic.Stack`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator">
          <apidata name="GetEnumerator" group="member" subgroup="method" />
          <memberdata visibility="private" />
          <proceduredata virtual="true" final="true" eii="true" />
          <returns>
            <type api="T:System.Collections.Generic.IEnumerator`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:OOAdvantech.Collections.Generic.Stack`1" />
              </specialization>
            </type>
          </returns>
          <implements>
            <member api="M:System.Collections.Generic.IEnumerable`1.GetEnumerator">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:OOAdvantech.Collections.Generic.Stack`1" />
                </specialization>
              </type>
            </member>
          </implements>
          <containers>
            <library assembly="System" module="System" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.Stack`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:OOAdvantech.Collections.Generic.Stack`1" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Generic.Stack`1.System#Collections#IEnumerable#GetEnumerator">
          <apidata name="GetEnumerator" group="member" subgroup="method" />
          <memberdata visibility="private" />
          <proceduredata virtual="true" final="true" eii="true" />
          <returns>
            <type api="T:System.Collections.IEnumerator" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Collections.IEnumerable.GetEnumerator">
              <type api="T:System.Collections.IEnumerable" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="System" module="System" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.Stack`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:OOAdvantech.Collections.Generic.Stack`1" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Generic.Stack`1.TrimExcess">
          <apidata name="TrimExcess" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <containers>
            <library assembly="System" module="System" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.Stack`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:OOAdvantech.Collections.Generic.Stack`1" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Generic.Stack`1.Peek">
          <apidata name="Peek" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <template name="T" index="0" api="T:OOAdvantech.Collections.Generic.Stack`1" />
          </returns>
          <containers>
            <library assembly="System" module="System" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.Stack`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:OOAdvantech.Collections.Generic.Stack`1" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Generic.Stack`1.Pop">
          <apidata name="Pop" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <template name="T" index="0" api="T:OOAdvantech.Collections.Generic.Stack`1" />
          </returns>
          <containers>
            <library assembly="System" module="System" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.Stack`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:OOAdvantech.Collections.Generic.Stack`1" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Generic.Stack`1.Push(`0)">
          <apidata name="Push" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="item">
              <template name="T" index="0" api="T:OOAdvantech.Collections.Generic.Stack`1" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="System" module="System" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.Stack`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:OOAdvantech.Collections.Generic.Stack`1" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Generic.Stack`1.ToArray">
          <apidata name="ToArray" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <arrayOf rank="1">
              <template name="T" index="0" api="T:OOAdvantech.Collections.Generic.Stack`1" />
            </arrayOf>
          </returns>
          <containers>
            <library assembly="System" module="System" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.Stack`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:OOAdvantech.Collections.Generic.Stack`1" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="P:System.Collections.Generic.Stack`1.Count">
          <apidata name="Count" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_Count" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <implements>
            <member api="P:System.Collections.ICollection.Count">
              <type api="T:System.Collections.ICollection" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="System" module="System" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.Stack`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:OOAdvantech.Collections.Generic.Stack`1" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="P:System.Collections.Generic.Stack`1.System#Collections#ICollection#IsSynchronized">
          <apidata name="IsSynchronized" group="member" subgroup="property" />
          <memberdata visibility="private" />
          <proceduredata virtual="true" final="true" eii="true" />
          <propertydata get="true" />
          <getter name="get_System.Collections.ICollection.IsSynchronized" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:System.Collections.ICollection.IsSynchronized">
              <type api="T:System.Collections.ICollection" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="System" module="System" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.Stack`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:OOAdvantech.Collections.Generic.Stack`1" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="P:System.Collections.Generic.Stack`1.System#Collections#ICollection#SyncRoot">
          <apidata name="SyncRoot" group="member" subgroup="property" />
          <memberdata visibility="private" />
          <proceduredata virtual="true" final="true" eii="true" />
          <propertydata get="true" />
          <getter name="get_System.Collections.ICollection.SyncRoot" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Collections.ICollection.SyncRoot">
              <type api="T:System.Collections.ICollection" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="System" module="System" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.Stack`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:OOAdvantech.Collections.Generic.Stack`1" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Collections.Generic" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Collections.Generic.Stack`1.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Collections.Generic" />
        <type api="T:OOAdvantech.Collections.Generic.Stack`1" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Collections.Generic.Stack`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="collection">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="T" index="0" api="T:OOAdvantech.Collections.Generic.Stack`1" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Collections.Generic" />
        <type api="T:OOAdvantech.Collections.Generic.Stack`1" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Collections.Generic.Stack`1.#ctor(System.Int32)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="initialCapacity">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Collections.Generic" />
        <type api="T:OOAdvantech.Collections.Generic.Stack`1" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Collections.Generic.Stack`1.OnDeserialization(System.Object)">
      <apidata name="OnDeserialization" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(System.Object)">
          <type api="T:System.Runtime.Serialization.IDeserializationCallback" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Collections.Generic" />
        <type api="T:OOAdvantech.Collections.Generic.Stack`1" ref="true" />
      </containers>
    </api>
    <api id="N:OOAdvantech.CommonEventHandler">
      <apidata name="OOAdvantech.CommonEventHandler" group="namespace" />
      <elements>
        <element api="T:OOAdvantech.CommonEventHandler.CommonEventHandlerDlgt" />
        <element api="T:OOAdvantech.CommonEventHandler.EventHandlerFactory" />
        <element api="T:OOAdvantech.CommonEventHandler.EventHandlerTypeEmitter" />
      </elements>
    </api>
    <api id="T:OOAdvantech.CommonEventHandler.CommonEventHandlerDlgt">
      <apidata name="CommonEventHandlerDlgt" group="type" subgroup="delegate" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <parameters>
        <parameter name="EventType">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="args">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.CommonEventHandler" />
      </containers>
    </api>
    <api id="T:OOAdvantech.CommonEventHandler.EventHandlerFactory">
      <apidata name="EventHandlerFactory" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:OOAdvantech.CommonEventHandler.EventHandlerFactory.#ctor(System.String)" />
        <element api="M:OOAdvantech.CommonEventHandler.EventHandlerFactory.CreateEventHandler(System.Reflection.EventInfo)" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.CommonEventHandler" />
      </containers>
    </api>
    <api id="M:OOAdvantech.CommonEventHandler.EventHandlerFactory.#ctor(System.String)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="Name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.CommonEventHandler" />
        <type api="T:OOAdvantech.CommonEventHandler.EventHandlerFactory" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.CommonEventHandler.EventHandlerFactory.CreateEventHandler(System.Reflection.EventInfo)">
      <apidata name="CreateEventHandler" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="Info">
          <type api="T:System.Reflection.EventInfo" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.CommonEventHandler" />
        <type api="T:OOAdvantech.CommonEventHandler.EventHandlerFactory" ref="true" />
      </containers>
    </api>
    <api id="T:OOAdvantech.CommonEventHandler.EventHandlerTypeEmitter">
      <apidata name="EventHandlerTypeEmitter" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:OOAdvantech.CommonEventHandler.EventHandlerTypeEmitter.#ctor(System.String)" />
        <element api="M:OOAdvantech.CommonEventHandler.EventHandlerTypeEmitter.GetEventHandlerType(System.Reflection.EventInfo)" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.CommonEventHandler" />
      </containers>
    </api>
    <api id="M:OOAdvantech.CommonEventHandler.EventHandlerTypeEmitter.#ctor(System.String)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="Name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.CommonEventHandler" />
        <type api="T:OOAdvantech.CommonEventHandler.EventHandlerTypeEmitter" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.CommonEventHandler.EventHandlerTypeEmitter.GetEventHandlerType(System.Reflection.EventInfo)">
      <apidata name="GetEventHandlerType" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="Info">
          <type api="T:System.Reflection.EventInfo" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.CommonEventHandler" />
        <type api="T:OOAdvantech.CommonEventHandler.EventHandlerTypeEmitter" ref="true" />
      </containers>
    </api>
    <api id="N:OOAdvantech.MetaDataRepository">
      <apidata name="OOAdvantech.MetaDataRepository" group="namespace" />
      <elements>
        <element api="T:OOAdvantech.MetaDataRepository.IErrorLog" />
        <element api="T:OOAdvantech.MetaDataRepository.SynchronizerSession" />
        <element api="T:OOAdvantech.MetaDataRepository.Asynchronous" />
        <element api="T:OOAdvantech.MetaDataRepository.AllowEventCallAsynchronousAttribute" />
        <element api="T:OOAdvantech.MetaDataRepository.MetaObject" />
        <element api="T:OOAdvantech.MetaDataRepository.MetaObject.MetaDataError" />
        <element api="T:OOAdvantech.MetaDataRepository.Namespace" />
        <element api="T:OOAdvantech.MetaDataRepository.StorageCell" />
        <element api="T:OOAdvantech.MetaDataRepository.Feature" />
        <element api="T:OOAdvantech.MetaDataRepository.StructuralFeature" />
        <element api="T:OOAdvantech.MetaDataRepository.AttributeRealization" />
        <element api="T:OOAdvantech.MetaDataRepository.IParameterableElement" />
        <element api="T:OOAdvantech.MetaDataRepository.TemplateParameter" />
        <element api="T:OOAdvantech.MetaDataRepository.ITemplateable" />
        <element api="T:OOAdvantech.MetaDataRepository.Classifier" />
        <element api="T:OOAdvantech.MetaDataRepository.Component" />
        <element api="T:OOAdvantech.MetaDataRepository.Roles" />
        <element api="T:OOAdvantech.MetaDataRepository.RoleAMultiplicityRangeAttribute" />
        <element api="T:OOAdvantech.MetaDataRepository.RoleBMultiplicityRangeAttribute" />
        <element api="T:OOAdvantech.MetaDataRepository.IgnoreErrorCheckAttribute" />
        <element api="T:OOAdvantech.MetaDataRepository.AssociationAttribute" />
        <element api="T:OOAdvantech.MetaDataRepository.PersistencyType" />
        <element api="T:OOAdvantech.MetaDataRepository.Persistent" />
        <element api="T:OOAdvantech.MetaDataRepository.Relationship" />
        <element api="T:OOAdvantech.MetaDataRepository.Generalization" />
        <element api="T:OOAdvantech.MetaDataRepository.InterfaceImplementor" />
        <element api="T:OOAdvantech.MetaDataRepository.Class" />
        <element api="T:OOAdvantech.MetaDataRepository.AssociationEndRealization" />
        <element api="T:OOAdvantech.MetaDataRepository.AssociationClass" />
        <element api="T:OOAdvantech.MetaDataRepository.Dependency" />
        <element api="T:OOAdvantech.MetaDataRepository.Attribute" />
        <element api="T:OOAdvantech.MetaDataRepository.AddCommand" />
        <element api="T:OOAdvantech.MetaDataRepository.RelatedStorageCell" />
        <element api="T:OOAdvantech.MetaDataRepository.StorageCellsLink" />
        <element api="T:OOAdvantech.MetaDataRepository.Package" />
        <element api="T:OOAdvantech.MetaDataRepository.Model" />
        <element api="T:OOAdvantech.MetaDataRepository.MetaObjectsStack" />
        <element api="T:OOAdvantech.MetaDataRepository.BuildAssemblyMetadata" />
        <element api="T:OOAdvantech.MetaDataRepository.AssociationEnd" />
        <element api="T:OOAdvantech.MetaDataRepository.AssociationType" />
        <element api="T:OOAdvantech.MetaDataRepository.Association" />
        <element api="T:OOAdvantech.MetaDataRepository.TemplateSignature" />
        <element api="T:OOAdvantech.MetaDataRepository.MultiplicityRange" />
        <element api="T:OOAdvantech.MetaDataRepository.MetaObjectID" />
        <element api="T:OOAdvantech.MetaDataRepository.BehavioralFeature" />
        <element api="T:OOAdvantech.MetaDataRepository.ObjectActivationCall" />
        <element api="T:OOAdvantech.MetaDataRepository.DeleteCommand" />
        <element api="T:OOAdvantech.MetaDataRepository.ValueTypePath" />
        <element api="T:OOAdvantech.MetaDataRepository.TemplateParameterSubstitution" />
        <element api="T:OOAdvantech.MetaDataRepository.DataType" />
        <element api="T:OOAdvantech.MetaDataRepository.Primitive" />
        <element api="T:OOAdvantech.MetaDataRepository.Parameter" />
        <element api="T:OOAdvantech.MetaDataRepository.Parameter.DirectionType" />
        <element api="T:OOAdvantech.MetaDataRepository.Method" />
        <element api="T:OOAdvantech.MetaDataRepository.MetaObjectCollectionA" />
        <element api="T:OOAdvantech.MetaDataRepository.MetaObjectCollectionA.AccessType" />
        <element api="T:OOAdvantech.MetaDataRepository.MetaObjectCollectionA.MetaObjectEnumerator" />
        <element api="T:OOAdvantech.MetaDataRepository.Storage" />
        <element api="T:OOAdvantech.MetaDataRepository.Realization" />
        <element api="T:OOAdvantech.MetaDataRepository.Structure" />
        <element api="T:OOAdvantech.MetaDataRepository.Interface" />
        <element api="T:OOAdvantech.MetaDataRepository.AssociationClassRole" />
        <element api="T:OOAdvantech.MetaDataRepository.PersistencyFlag" />
        <element api="T:OOAdvantech.MetaDataRepository.PersistentMember" />
        <element api="T:OOAdvantech.MetaDataRepository.ObjectIdentityType" />
        <element api="T:OOAdvantech.MetaDataRepository.IIdentityPart" />
        <element api="T:OOAdvantech.MetaDataRepository.IdentityPart" />
        <element api="T:OOAdvantech.MetaDataRepository.Enumeration" />
        <element api="T:OOAdvantech.MetaDataRepository.ContainedItemsSynchronizer" />
        <element api="T:OOAdvantech.MetaDataRepository.BackwardCompatibilityID" />
        <element api="T:OOAdvantech.MetaDataRepository.TemplateBinding" />
        <element api="T:OOAdvantech.MetaDataRepository.Operation" />
        <element api="T:OOAdvantech.MetaDataRepository.MetaObjectChangedEventHandler" />
        <element api="T:OOAdvantech.MetaDataRepository.VisibilityKind" />
        <element api="T:OOAdvantech.MetaDataRepository.MetaDataException" />
        <element api="T:OOAdvantech.MetaDataRepository.AssociationEndBehavior" />
      </elements>
    </api>
    <api id="T:OOAdvantech.MetaDataRepository.AddCommand">
      <apidata name="AddCommand" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="F:OOAdvantech.MetaDataRepository.AddCommand.MissingMetaObject" />
        <element api="F:OOAdvantech.MetaDataRepository.AddCommand.AddedObject" />
        <element api="F:OOAdvantech.MetaDataRepository.AddCommand.UpdateCollection" />
        <element api="M:OOAdvantech.MetaDataRepository.AddCommand.#ctor(OOAdvantech.MetaDataRepository.MetaObject,System.Collections.IList)" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.AddCommand.#ctor(OOAdvantech.MetaDataRepository.MetaObject,System.Collections.IList)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="missingMetaObject">
          <type api="T:OOAdvantech.MetaDataRepository.MetaObject" ref="true" />
        </parameter>
        <parameter name="theUpdateCollection">
          <type api="T:System.Collections.IList" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.AddCommand" ref="true" />
      </containers>
    </api>
    <api id="F:OOAdvantech.MetaDataRepository.AddCommand.AddedObject">
      <apidata name="AddedObject" group="member" subgroup="field" />
      <memberdata visibility="public" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:OOAdvantech.MetaDataRepository.MetaObject" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.AddCommand" ref="true" />
      </containers>
    </api>
    <api id="F:OOAdvantech.MetaDataRepository.AddCommand.MissingMetaObject">
      <apidata name="MissingMetaObject" group="member" subgroup="field" />
      <memberdata visibility="public" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:OOAdvantech.MetaDataRepository.MetaObject" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.AddCommand" ref="true" />
      </containers>
    </api>
    <api id="F:OOAdvantech.MetaDataRepository.AddCommand.UpdateCollection">
      <apidata name="UpdateCollection" group="member" subgroup="field" />
      <memberdata visibility="public" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Collections.IList" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.AddCommand" ref="true" />
      </containers>
    </api>
    <api id="T:OOAdvantech.MetaDataRepository.AllowEventCallAsynchronousAttribute">
      <apidata name="AllowEventCallAsynchronousAttribute" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:OOAdvantech.MetaDataRepository.AllowEventCallAsynchronousAttribute.#ctor" />
        <element api="M:System.Attribute.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.Equals(System.Object)">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.GetHashCode">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.Match(System.Object)">
          <apidata name="Match" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.IsDefaultAttribute">
          <apidata name="IsDefaultAttribute" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)">
          <apidata name="GetTypeInfoCount" group="member" subgroup="method" />
          <memberdata visibility="private" />
          <proceduredata virtual="true" final="true" eii="true" />
          <parameters>
            <parameter name="pcTInfo" out="true">
              <referenceTo>
                <type api="T:System.UInt32" ref="false" />
              </referenceTo>
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Runtime.InteropServices._Attribute.GetTypeInfoCount(System.UInt32@)">
              <type api="T:System.Runtime.InteropServices._Attribute" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)">
          <apidata name="GetTypeInfo" group="member" subgroup="method" />
          <memberdata visibility="private" />
          <proceduredata virtual="true" final="true" eii="true" />
          <parameters>
            <parameter name="iTInfo">
              <type api="T:System.UInt32" ref="false" />
            </parameter>
            <parameter name="lcid">
              <type api="T:System.UInt32" ref="false" />
            </parameter>
            <parameter name="ppTInfo">
              <type api="T:System.IntPtr" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Runtime.InteropServices._Attribute.GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)">
              <type api="T:System.Runtime.InteropServices._Attribute" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)">
          <apidata name="GetIDsOfNames" group="member" subgroup="method" />
          <memberdata visibility="private" />
          <proceduredata virtual="true" final="true" eii="true" />
          <parameters>
            <parameter name="riid" in="true">
              <referenceTo>
                <type api="T:System.Guid" ref="false" />
              </referenceTo>
            </parameter>
            <parameter name="rgszNames">
              <type api="T:System.IntPtr" ref="false" />
            </parameter>
            <parameter name="cNames">
              <type api="T:System.UInt32" ref="false" />
            </parameter>
            <parameter name="lcid">
              <type api="T:System.UInt32" ref="false" />
            </parameter>
            <parameter name="rgDispId">
              <type api="T:System.IntPtr" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Runtime.InteropServices._Attribute.GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)">
              <type api="T:System.Runtime.InteropServices._Attribute" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)">
          <apidata name="Invoke" group="member" subgroup="method" />
          <memberdata visibility="private" />
          <proceduredata virtual="true" final="true" eii="true" />
          <parameters>
            <parameter name="dispIdMember">
              <type api="T:System.UInt32" ref="false" />
            </parameter>
            <parameter name="riid" in="true">
              <referenceTo>
                <type api="T:System.Guid" ref="false" />
              </referenceTo>
            </parameter>
            <parameter name="lcid">
              <type api="T:System.UInt32" ref="false" />
            </parameter>
            <parameter name="wFlags">
              <type api="T:System.Int16" ref="false" />
            </parameter>
            <parameter name="pDispParams">
              <type api="T:System.IntPtr" ref="false" />
            </parameter>
            <parameter name="pVarResult">
              <type api="T:System.IntPtr" ref="false" />
            </parameter>
            <parameter name="pExcepInfo">
              <type api="T:System.IntPtr" ref="false" />
            </parameter>
            <parameter name="puArgErr">
              <type api="T:System.IntPtr" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Runtime.InteropServices._Attribute.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)">
              <type api="T:System.Runtime.InteropServices._Attribute" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="P:System.Attribute.TypeId">
          <apidata name="TypeId" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_TypeId" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Method" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.AllowEventCallAsynchronousAttribute.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.AllowEventCallAsynchronousAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:OOAdvantech.MetaDataRepository.Association">
      <apidata name="Association" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:OOAdvantech.MetaDataRepository.Relationship" ref="true" />
          <type api="T:OOAdvantech.MetaDataRepository.MetaObject" ref="true" />
          <type api="T:System.MarshalByRefObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="F:OOAdvantech.MetaDataRepository.Association._LinkClass" />
        <element api="F:OOAdvantech.MetaDataRepository.Association._General" />
        <element api="F:OOAdvantech.MetaDataRepository.Association._RoleA" />
        <element api="F:OOAdvantech.MetaDataRepository.Association._RoleB" />
        <element api="F:OOAdvantech.MetaDataRepository.Association._Connections" />
        <element api="F:OOAdvantech.MetaDataRepository.Association.StorageCellsLinks" />
        <element api="M:OOAdvantech.MetaDataRepository.Association.RemoveSpecialization(OOAdvantech.MetaDataRepository.Association)" />
        <element api="M:OOAdvantech.MetaDataRepository.Association.AddSpecialization(OOAdvantech.MetaDataRepository.Association)" />
        <element api="M:OOAdvantech.MetaDataRepository.Association.#ctor" />
        <element api="M:OOAdvantech.MetaDataRepository.Association.#ctor(System.String,OOAdvantech.MetaDataRepository.Classifier,System.String,OOAdvantech.MetaDataRepository.Classifier,System.String)" />
        <element api="M:OOAdvantech.MetaDataRepository.Association.#ctor(System.String,OOAdvantech.MetaDataRepository.AssociationEnd,OOAdvantech.MetaDataRepository.AssociationEnd,System.String)" />
        <element api="M:OOAdvantech.MetaDataRepository.Association.Synchronize(OOAdvantech.MetaDataRepository.MetaObject)" />
        <element api="M:OOAdvantech.MetaDataRepository.Association.GetExtensionMetaObjects" />
        <element api="P:OOAdvantech.MetaDataRepository.Association.LinkClass" />
        <element api="P:OOAdvantech.MetaDataRepository.Association.Specializations" />
        <element api="P:OOAdvantech.MetaDataRepository.Association.General" />
        <element api="P:OOAdvantech.MetaDataRepository.Association.MultiplicityType" />
        <element api="P:OOAdvantech.MetaDataRepository.Association.RoleA" />
        <element api="P:OOAdvantech.MetaDataRepository.Association.RoleB" />
        <element api="P:OOAdvantech.MetaDataRepository.Association.Connections" />
        <element api="P:OOAdvantech.MetaDataRepository.Association.HierarchyStorageCellsLinks" />
        <element api="P:OOAdvantech.MetaDataRepository.Association.HasPersistentObjectLink" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject._CaseInsensitiveName" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject._ImplementationUnit" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject.LockObject" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject.ReaderWriterLock" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject.Properties" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject._Name" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject.MetaObjectIDStream" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject._Identity" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject._ClientDependencies" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject._SupplierDependencies" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject._Namespace" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject.Visibility" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.MetaObjectChangeState" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.ShallowSynchronize(OOAdvantech.MetaDataRepository.MetaObject)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.AddDependency(System.String,OOAdvantech.MetaDataRepository.MetaObject)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.ErrorCheck(System.Collections.ArrayList@)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.GetDynamicPropertiesAsXmlString" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.SetIdentity(OOAdvantech.MetaDataRepository.MetaObjectID)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.GetExtensionMetaObject(System.Type)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.SetNamespace(OOAdvantech.MetaDataRepository.Namespace)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.GetPropertyValue``1(System.String,System.String)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.GetPropertyValue(System.Type,System.String,System.String)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.PutPropertyValue(System.String,System.String,System.Object)" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.CaseInsensitiveName" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.ImplementationUnit" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.OQLName" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.Name" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.FullName" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.OQLFullName" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.Identity" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.ClientDependencies" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.SupplierDependencies" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.Namespace" />
        <element api="E:OOAdvantech.MetaDataRepository.MetaObject.Changed" />
        <element api="M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="cloneIdentity">
              <type api="T:System.Boolean" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.MarshalByRefObject" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.MarshalByRefObject" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.MarshalByRefObject.GetLifetimeService">
          <apidata name="GetLifetimeService" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.MarshalByRefObject" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Security.Permissions.SecurityPermissionAttribute" ref="true" />
              <argument>
                <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
                <enumValue>
                  <field name="LinkDemand" />
                </enumValue>
              </argument>
              <assignment name="Flags">
                <type api="T:System.Security.Permissions.SecurityPermissionFlag" ref="false" />
                <enumValue>
                  <field name="Infrastructure" />
                </enumValue>
              </assignment>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.MarshalByRefObject.InitializeLifetimeService">
          <apidata name="InitializeLifetimeService" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.MarshalByRefObject" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Security.Permissions.SecurityPermissionAttribute" ref="true" />
              <argument>
                <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
                <enumValue>
                  <field name="LinkDemand" />
                </enumValue>
              </argument>
              <assignment name="Flags">
                <type api="T:System.Security.Permissions.SecurityPermissionFlag" ref="false" />
                <enumValue>
                  <field name="Infrastructure" />
                </enumValue>
              </assignment>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.MarshalByRefObject.CreateObjRef(System.Type)">
          <apidata name="CreateObjRef" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="requestedType">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Runtime.Remoting.ObjRef" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.MarshalByRefObject" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Security.Permissions.SecurityPermissionAttribute" ref="true" />
              <argument>
                <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
                <enumValue>
                  <field name="LinkDemand" />
                </enumValue>
              </argument>
              <assignment name="Flags">
                <type api="T:System.Security.Permissions.SecurityPermissionFlag" ref="false" />
                <enumValue>
                  <field name="Infrastructure" />
                </enumValue>
              </assignment>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.Persistent" ref="true" />
        </attribute>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.BackwardCompatibilityID" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>{AF4C9386-EB2E-45EE-B801-50611D1FFC8B}</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.Association.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Association" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.Association.#ctor(System.String,OOAdvantech.MetaDataRepository.AssociationEnd,OOAdvantech.MetaDataRepository.AssociationEnd,System.String)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="roleA">
          <type api="T:OOAdvantech.MetaDataRepository.AssociationEnd" ref="true" />
        </parameter>
        <parameter name="roleB">
          <type api="T:OOAdvantech.MetaDataRepository.AssociationEnd" ref="true" />
        </parameter>
        <parameter name="identity">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Association" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.Association.#ctor(System.String,OOAdvantech.MetaDataRepository.Classifier,System.String,OOAdvantech.MetaDataRepository.Classifier,System.String)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="roleAClassifier">
          <type api="T:OOAdvantech.MetaDataRepository.Classifier" ref="true" />
        </parameter>
        <parameter name="roleAName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="roleBClassifier">
          <type api="T:OOAdvantech.MetaDataRepository.Classifier" ref="true" />
        </parameter>
        <parameter name="roleBName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Association" ref="true" />
      </containers>
    </api>
    <api id="F:OOAdvantech.MetaDataRepository.Association._Connections">
      <apidata name="_Connections" group="member" subgroup="field" />
      <memberdata visibility="family" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:OOAdvantech.Collections.Generic.Set`1" ref="true">
          <specialization>
            <type api="T:OOAdvantech.MetaDataRepository.AssociationEnd" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Association" ref="true" />
      </containers>
    </api>
    <api id="F:OOAdvantech.MetaDataRepository.Association._General">
      <apidata name="_General" group="member" subgroup="field" />
      <memberdata visibility="family" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:OOAdvantech.Member`1" ref="true">
          <specialization>
            <type api="T:OOAdvantech.MetaDataRepository.Association" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Association" ref="true" />
      </containers>
    </api>
    <api id="F:OOAdvantech.MetaDataRepository.Association._LinkClass">
      <apidata name="_LinkClass" group="member" subgroup="field" />
      <memberdata visibility="family" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:OOAdvantech.MetaDataRepository.Classifier" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Association" ref="true" />
      </containers>
    </api>
    <api id="F:OOAdvantech.MetaDataRepository.Association._RoleA">
      <apidata name="_RoleA" group="member" subgroup="field" />
      <memberdata visibility="family" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:OOAdvantech.MetaDataRepository.AssociationEnd" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Association" ref="true" />
      </containers>
    </api>
    <api id="F:OOAdvantech.MetaDataRepository.Association._RoleB">
      <apidata name="_RoleB" group="member" subgroup="field" />
      <memberdata visibility="family" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:OOAdvantech.MetaDataRepository.AssociationEnd" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Association" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.Association.AddSpecialization(OOAdvantech.MetaDataRepository.Association)">
      <apidata name="AddSpecialization" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="association">
          <type api="T:OOAdvantech.MetaDataRepository.Association" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Association" ref="true" />
      </containers>
    </api>
    <api id="P:OOAdvantech.MetaDataRepository.Association.Connections">
      <apidata name="Connections" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Connections" />
      <returns>
        <type api="T:OOAdvantech.Collections.Generic.Set`1" ref="true">
          <specialization>
            <type api="T:OOAdvantech.MetaDataRepository.AssociationEnd" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Association" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.AssociationEndBehavior" ref="true" />
          <argument>
            <type api="T:OOAdvantech.MetaDataRepository.PersistencyFlag" ref="false" />
            <enumValue>
              <field name="OnConstruction" />
            </enumValue>
          </argument>
        </attribute>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.RoleAMultiplicityRangeAttribute" ref="true" />
          <argument>
            <type api="T:System.UInt64" ref="false" />
            <value>2</value>
          </argument>
          <argument>
            <type api="T:System.UInt64" ref="false" />
            <value>2</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.PersistentMember" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>_Connections</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.AssociationAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>AssociationEndPoint</value>
          </argument>
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:OOAdvantech.MetaDataRepository.AssociationEnd" ref="true" />
            </typeValue>
          </argument>
          <argument>
            <type api="T:OOAdvantech.MetaDataRepository.Roles" ref="false" />
            <enumValue>
              <field name="RoleA" />
            </enumValue>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>{C9B51DC4-1D24-44EB-B343-6F48A766C46D}</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:OOAdvantech.MetaDataRepository.Association.General">
      <apidata name="General" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_General" />
      <setter name="set_General" />
      <returns>
        <type api="T:OOAdvantech.MetaDataRepository.Association" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Association" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.AssociationAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>SpecializedAssociations</value>
          </argument>
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:OOAdvantech.MetaDataRepository.Association" ref="true" />
            </typeValue>
          </argument>
          <argument>
            <type api="T:OOAdvantech.MetaDataRepository.Roles" ref="false" />
            <enumValue>
              <field name="RoleA" />
            </enumValue>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>04b2946e-5c81-41d5-8d07-3d1b0fae5e56</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.RoleAMultiplicityRangeAttribute" ref="true" />
          <argument>
            <type api="T:System.UInt64" ref="false" />
            <value>0</value>
          </argument>
          <argument>
            <type api="T:System.UInt64" ref="false" />
            <value>1</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.AssociationEndBehavior" ref="true" />
          <argument>
            <type api="T:OOAdvantech.MetaDataRepository.PersistencyFlag" ref="false" />
            <enumValue>
              <field name="OnConstruction" />
            </enumValue>
          </argument>
        </attribute>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.PersistentMember" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>_General</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.Association.GetExtensionMetaObjects">
      <apidata name="GetExtensionMetaObjects" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:OOAdvantech.MetaDataRepository.MetaObject.GetExtensionMetaObjects">
          <type api="T:OOAdvantech.MetaDataRepository.MetaObject" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Collections.ArrayList" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Association" ref="true" />
      </containers>
    </api>
    <api id="P:OOAdvantech.MetaDataRepository.Association.HasPersistentObjectLink">
      <apidata name="HasPersistentObjectLink" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_HasPersistentObjectLink" />
      <setter name="set_HasPersistentObjectLink" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Association" ref="true" />
      </containers>
    </api>
    <api id="P:OOAdvantech.MetaDataRepository.Association.HierarchyStorageCellsLinks">
      <apidata name="HierarchyStorageCellsLinks" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_HierarchyStorageCellsLinks" />
      <returns>
        <type api="T:OOAdvantech.Collections.Generic.Set`1" ref="true">
          <specialization>
            <type api="T:OOAdvantech.MetaDataRepository.StorageCellsLink" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Association" ref="true" />
      </containers>
    </api>
    <api id="P:OOAdvantech.MetaDataRepository.Association.LinkClass">
      <apidata name="LinkClass" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_LinkClass" />
      <setter name="set_LinkClass" />
      <returns>
        <type api="T:OOAdvantech.MetaDataRepository.Classifier" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Association" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.AssociationAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>AssociationClass</value>
          </argument>
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:OOAdvantech.MetaDataRepository.Classifier" ref="true" />
            </typeValue>
          </argument>
          <argument>
            <type api="T:OOAdvantech.MetaDataRepository.Roles" ref="false" />
            <enumValue>
              <field name="RoleA" />
            </enumValue>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>{D12835A7-0E6D-45A9-A091-4AC1403B479E}</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.PersistentMember" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>_LinkClass</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.RoleAMultiplicityRangeAttribute" ref="true" />
          <argument>
            <type api="T:System.UInt64" ref="false" />
            <value>0</value>
          </argument>
          <argument>
            <type api="T:System.UInt64" ref="false" />
            <value>1</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.AssociationEndBehavior" ref="true" />
          <argument>
            <type api="T:OOAdvantech.MetaDataRepository.PersistencyFlag" ref="false" />
            <enumValue>
              <field name="OnConstruction" />
            </enumValue>
          </argument>
        </attribute>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.RoleBMultiplicityRangeAttribute" ref="true" />
          <argument>
            <type api="T:System.UInt64" ref="false" />
            <value>0</value>
          </argument>
          <argument>
            <type api="T:System.UInt64" ref="false" />
            <value>1</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:OOAdvantech.MetaDataRepository.Association.MultiplicityType">
      <apidata name="MultiplicityType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_MultiplicityType" />
      <returns>
        <type api="T:OOAdvantech.MetaDataRepository.AssociationType" ref="false" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Association" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.Association.RemoveSpecialization(OOAdvantech.MetaDataRepository.Association)">
      <apidata name="RemoveSpecialization" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="association">
          <type api="T:OOAdvantech.MetaDataRepository.Association" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Association" ref="true" />
      </containers>
    </api>
    <api id="P:OOAdvantech.MetaDataRepository.Association.RoleA">
      <apidata name="RoleA" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_RoleA" />
      <returns>
        <type api="T:OOAdvantech.MetaDataRepository.AssociationEnd" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Association" ref="true" />
      </containers>
    </api>
    <api id="P:OOAdvantech.MetaDataRepository.Association.RoleB">
      <apidata name="RoleB" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_RoleB" />
      <returns>
        <type api="T:OOAdvantech.MetaDataRepository.AssociationEnd" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Association" ref="true" />
      </containers>
    </api>
    <api id="P:OOAdvantech.MetaDataRepository.Association.Specializations">
      <apidata name="Specializations" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Specializations" />
      <returns>
        <type api="T:OOAdvantech.Collections.Generic.Set`1" ref="true">
          <specialization>
            <type api="T:OOAdvantech.MetaDataRepository.Association" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Association" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.RoleBMultiplicityRangeAttribute" ref="true" />
          <argument>
            <type api="T:System.UInt64" ref="false" />
            <value>0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.AssociationAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>SpecializedAssociations</value>
          </argument>
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:OOAdvantech.MetaDataRepository.Association" ref="true" />
            </typeValue>
          </argument>
          <argument>
            <type api="T:OOAdvantech.MetaDataRepository.Roles" ref="false" />
            <enumValue>
              <field name="RoleB" />
            </enumValue>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>04b2946e-5c81-41d5-8d07-3d1b0fae5e56</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.PersistentMember" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>_Specializations</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="F:OOAdvantech.MetaDataRepository.Association.StorageCellsLinks">
      <apidata name="StorageCellsLinks" group="member" subgroup="field" />
      <memberdata visibility="public" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:OOAdvantech.Collections.Generic.Set`1" ref="true">
          <specialization>
            <type api="T:OOAdvantech.MetaDataRepository.StorageCellsLink" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Association" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.AssociationAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>LinksInstanceTypeRelation</value>
          </argument>
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:OOAdvantech.MetaDataRepository.StorageCellsLink" ref="true" />
            </typeValue>
          </argument>
          <argument>
            <type api="T:OOAdvantech.MetaDataRepository.Roles" ref="false" />
            <enumValue>
              <field name="RoleA" />
            </enumValue>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>{E5C85CF2-{ECFC605B-F4AA-41B4-BD22-130AC73F5BEA}</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.RoleAMultiplicityRangeAttribute" ref="true" />
          <argument>
            <type api="T:System.UInt64" ref="false" />
            <value>0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.PersistentMember" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>_StorageCellsLinks</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.Association.Synchronize(OOAdvantech.MetaDataRepository.MetaObject)">
      <apidata name="Synchronize" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:OOAdvantech.MetaDataRepository.MetaObject.Synchronize(OOAdvantech.MetaDataRepository.MetaObject)">
          <type api="T:OOAdvantech.MetaDataRepository.MetaObject" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="originMetaObject">
          <type api="T:OOAdvantech.MetaDataRepository.MetaObject" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Association" ref="true" />
      </containers>
    </api>
    <api id="T:OOAdvantech.MetaDataRepository.AssociationAttribute">
      <apidata name="AssociationAttribute" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="F:OOAdvantech.MetaDataRepository.AssociationAttribute.AssociationName" />
        <element api="F:OOAdvantech.MetaDataRepository.AssociationAttribute.Identity" />
        <element api="F:OOAdvantech.MetaDataRepository.AssociationAttribute.Role" />
        <element api="F:OOAdvantech.MetaDataRepository.AssociationAttribute.Indexer" />
        <element api="F:OOAdvantech.MetaDataRepository.AssociationAttribute.GeneralAssociationIdentity" />
        <element api="F:OOAdvantech.MetaDataRepository.AssociationAttribute.IsRoleA" />
        <element api="F:OOAdvantech.MetaDataRepository.AssociationAttribute.OtherEndType" />
        <element api="M:OOAdvantech.MetaDataRepository.AssociationAttribute.#ctor(System.String,System.Type,OOAdvantech.MetaDataRepository.Roles,System.Boolean,System.String)" />
        <element api="M:OOAdvantech.MetaDataRepository.AssociationAttribute.#ctor(System.String,System.Type,OOAdvantech.MetaDataRepository.Roles,System.Boolean,System.String,System.String)" />
        <element api="M:OOAdvantech.MetaDataRepository.AssociationAttribute.#ctor(System.String,System.Type,OOAdvantech.MetaDataRepository.Roles,System.Boolean)" />
        <element api="M:OOAdvantech.MetaDataRepository.AssociationAttribute.#ctor(System.String,System.Type,OOAdvantech.MetaDataRepository.Roles,System.String)" />
        <element api="M:OOAdvantech.MetaDataRepository.AssociationAttribute.#ctor(System.String,System.Type,OOAdvantech.MetaDataRepository.Roles,System.String,System.String)" />
        <element api="M:OOAdvantech.MetaDataRepository.AssociationAttribute.#ctor(System.String,System.Type,OOAdvantech.MetaDataRepository.Roles)" />
        <element api="M:System.Attribute.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.Equals(System.Object)">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.GetHashCode">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.Match(System.Object)">
          <apidata name="Match" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.IsDefaultAttribute">
          <apidata name="IsDefaultAttribute" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)">
          <apidata name="GetTypeInfoCount" group="member" subgroup="method" />
          <memberdata visibility="private" />
          <proceduredata virtual="true" final="true" eii="true" />
          <parameters>
            <parameter name="pcTInfo" out="true">
              <referenceTo>
                <type api="T:System.UInt32" ref="false" />
              </referenceTo>
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Runtime.InteropServices._Attribute.GetTypeInfoCount(System.UInt32@)">
              <type api="T:System.Runtime.InteropServices._Attribute" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)">
          <apidata name="GetTypeInfo" group="member" subgroup="method" />
          <memberdata visibility="private" />
          <proceduredata virtual="true" final="true" eii="true" />
          <parameters>
            <parameter name="iTInfo">
              <type api="T:System.UInt32" ref="false" />
            </parameter>
            <parameter name="lcid">
              <type api="T:System.UInt32" ref="false" />
            </parameter>
            <parameter name="ppTInfo">
              <type api="T:System.IntPtr" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Runtime.InteropServices._Attribute.GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)">
              <type api="T:System.Runtime.InteropServices._Attribute" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)">
          <apidata name="GetIDsOfNames" group="member" subgroup="method" />
          <memberdata visibility="private" />
          <proceduredata virtual="true" final="true" eii="true" />
          <parameters>
            <parameter name="riid" in="true">
              <referenceTo>
                <type api="T:System.Guid" ref="false" />
              </referenceTo>
            </parameter>
            <parameter name="rgszNames">
              <type api="T:System.IntPtr" ref="false" />
            </parameter>
            <parameter name="cNames">
              <type api="T:System.UInt32" ref="false" />
            </parameter>
            <parameter name="lcid">
              <type api="T:System.UInt32" ref="false" />
            </parameter>
            <parameter name="rgDispId">
              <type api="T:System.IntPtr" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Runtime.InteropServices._Attribute.GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)">
              <type api="T:System.Runtime.InteropServices._Attribute" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)">
          <apidata name="Invoke" group="member" subgroup="method" />
          <memberdata visibility="private" />
          <proceduredata virtual="true" final="true" eii="true" />
          <parameters>
            <parameter name="dispIdMember">
              <type api="T:System.UInt32" ref="false" />
            </parameter>
            <parameter name="riid" in="true">
              <referenceTo>
                <type api="T:System.Guid" ref="false" />
              </referenceTo>
            </parameter>
            <parameter name="lcid">
              <type api="T:System.UInt32" ref="false" />
            </parameter>
            <parameter name="wFlags">
              <type api="T:System.Int16" ref="false" />
            </parameter>
            <parameter name="pDispParams">
              <type api="T:System.IntPtr" ref="false" />
            </parameter>
            <parameter name="pVarResult">
              <type api="T:System.IntPtr" ref="false" />
            </parameter>
            <parameter name="pExcepInfo">
              <type api="T:System.IntPtr" ref="false" />
            </parameter>
            <parameter name="puArgErr">
              <type api="T:System.IntPtr" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Runtime.InteropServices._Attribute.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)">
              <type api="T:System.Runtime.InteropServices._Attribute" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="P:System.Attribute.TypeId">
          <apidata name="TypeId" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_TypeId" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Property" />
              <field name="Field" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.AssociationAttribute.#ctor(System.String,System.Type,OOAdvantech.MetaDataRepository.Roles)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="associationName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="otherEndType">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="role">
          <type api="T:OOAdvantech.MetaDataRepository.Roles" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.AssociationAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.AssociationAttribute.#ctor(System.String,System.Type,OOAdvantech.MetaDataRepository.Roles,System.Boolean)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="associationName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="otherEndType">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="role">
          <type api="T:OOAdvantech.MetaDataRepository.Roles" ref="false" />
        </parameter>
        <parameter name="indexer">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.AssociationAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.AssociationAttribute.#ctor(System.String,System.Type,OOAdvantech.MetaDataRepository.Roles,System.Boolean,System.String)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="associationName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="otherEndType">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="role">
          <type api="T:OOAdvantech.MetaDataRepository.Roles" ref="false" />
        </parameter>
        <parameter name="indexer">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="identity">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.AssociationAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.AssociationAttribute.#ctor(System.String,System.Type,OOAdvantech.MetaDataRepository.Roles,System.Boolean,System.String,System.String)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="associationName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="otherEndType">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="role">
          <type api="T:OOAdvantech.MetaDataRepository.Roles" ref="false" />
        </parameter>
        <parameter name="indexer">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="identity">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="generalAssociationIdentity">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.AssociationAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.AssociationAttribute.#ctor(System.String,System.Type,OOAdvantech.MetaDataRepository.Roles,System.String)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="associationName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="otherEndType">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="role">
          <type api="T:OOAdvantech.MetaDataRepository.Roles" ref="false" />
        </parameter>
        <parameter name="identity">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.AssociationAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.AssociationAttribute.#ctor(System.String,System.Type,OOAdvantech.MetaDataRepository.Roles,System.String,System.String)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="associationName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="otherEndType">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="role">
          <type api="T:OOAdvantech.MetaDataRepository.Roles" ref="false" />
        </parameter>
        <parameter name="identity">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="generalAssociationIdentity">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.AssociationAttribute" ref="true" />
      </containers>
    </api>
    <api id="F:OOAdvantech.MetaDataRepository.AssociationAttribute.AssociationName">
      <apidata name="AssociationName" group="member" subgroup="field" />
      <memberdata visibility="public" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.AssociationAttribute" ref="true" />
      </containers>
    </api>
    <api id="F:OOAdvantech.MetaDataRepository.AssociationAttribute.GeneralAssociationIdentity">
      <apidata name="GeneralAssociationIdentity" group="member" subgroup="field" />
      <memberdata visibility="public" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.AssociationAttribute" ref="true" />
      </containers>
    </api>
    <api id="F:OOAdvantech.MetaDataRepository.AssociationAttribute.Identity">
      <apidata name="Identity" group="member" subgroup="field" />
      <memberdata visibility="public" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.AssociationAttribute" ref="true" />
      </containers>
    </api>
    <api id="F:OOAdvantech.MetaDataRepository.AssociationAttribute.Indexer">
      <apidata name="Indexer" group="member" subgroup="field" />
      <memberdata visibility="public" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.AssociationAttribute" ref="true" />
      </containers>
    </api>
    <api id="F:OOAdvantech.MetaDataRepository.AssociationAttribute.IsRoleA">
      <apidata name="IsRoleA" group="member" subgroup="field" />
      <memberdata visibility="public" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.AssociationAttribute" ref="true" />
      </containers>
    </api>
    <api id="F:OOAdvantech.MetaDataRepository.AssociationAttribute.OtherEndType">
      <apidata name="OtherEndType" group="member" subgroup="field" />
      <memberdata visibility="public" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.AssociationAttribute" ref="true" />
      </containers>
    </api>
    <api id="F:OOAdvantech.MetaDataRepository.AssociationAttribute.Role">
      <apidata name="Role" group="member" subgroup="field" />
      <memberdata visibility="public" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:OOAdvantech.MetaDataRepository.Roles" ref="false" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.AssociationAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:OOAdvantech.MetaDataRepository.AssociationClass">
      <apidata name="AssociationClass" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="F:OOAdvantech.MetaDataRepository.AssociationClass.AssocciationEndRoleA" />
        <element api="F:OOAdvantech.MetaDataRepository.AssociationClass.AssocciationEndRoleB" />
        <element api="F:OOAdvantech.MetaDataRepository.AssociationClass.AssocciationName" />
        <element api="F:OOAdvantech.MetaDataRepository.AssociationClass.AssocciationClass" />
        <element api="M:OOAdvantech.MetaDataRepository.AssociationClass.#ctor(System.Type)" />
        <element api="M:OOAdvantech.MetaDataRepository.AssociationClass.#ctor(System.Type,System.Type,System.String)" />
        <element api="M:System.Attribute.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.Equals(System.Object)">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.GetHashCode">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.Match(System.Object)">
          <apidata name="Match" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.IsDefaultAttribute">
          <apidata name="IsDefaultAttribute" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)">
          <apidata name="GetTypeInfoCount" group="member" subgroup="method" />
          <memberdata visibility="private" />
          <proceduredata virtual="true" final="true" eii="true" />
          <parameters>
            <parameter name="pcTInfo" out="true">
              <referenceTo>
                <type api="T:System.UInt32" ref="false" />
              </referenceTo>
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Runtime.InteropServices._Attribute.GetTypeInfoCount(System.UInt32@)">
              <type api="T:System.Runtime.InteropServices._Attribute" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)">
          <apidata name="GetTypeInfo" group="member" subgroup="method" />
          <memberdata visibility="private" />
          <proceduredata virtual="true" final="true" eii="true" />
          <parameters>
            <parameter name="iTInfo">
              <type api="T:System.UInt32" ref="false" />
            </parameter>
            <parameter name="lcid">
              <type api="T:System.UInt32" ref="false" />
            </parameter>
            <parameter name="ppTInfo">
              <type api="T:System.IntPtr" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Runtime.InteropServices._Attribute.GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)">
              <type api="T:System.Runtime.InteropServices._Attribute" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)">
          <apidata name="GetIDsOfNames" group="member" subgroup="method" />
          <memberdata visibility="private" />
          <proceduredata virtual="true" final="true" eii="true" />
          <parameters>
            <parameter name="riid" in="true">
              <referenceTo>
                <type api="T:System.Guid" ref="false" />
              </referenceTo>
            </parameter>
            <parameter name="rgszNames">
              <type api="T:System.IntPtr" ref="false" />
            </parameter>
            <parameter name="cNames">
              <type api="T:System.UInt32" ref="false" />
            </parameter>
            <parameter name="lcid">
              <type api="T:System.UInt32" ref="false" />
            </parameter>
            <parameter name="rgDispId">
              <type api="T:System.IntPtr" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Runtime.InteropServices._Attribute.GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)">
              <type api="T:System.Runtime.InteropServices._Attribute" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)">
          <apidata name="Invoke" group="member" subgroup="method" />
          <memberdata visibility="private" />
          <proceduredata virtual="true" final="true" eii="true" />
          <parameters>
            <parameter name="dispIdMember">
              <type api="T:System.UInt32" ref="false" />
            </parameter>
            <parameter name="riid" in="true">
              <referenceTo>
                <type api="T:System.Guid" ref="false" />
              </referenceTo>
            </parameter>
            <parameter name="lcid">
              <type api="T:System.UInt32" ref="false" />
            </parameter>
            <parameter name="wFlags">
              <type api="T:System.Int16" ref="false" />
            </parameter>
            <parameter name="pDispParams">
              <type api="T:System.IntPtr" ref="false" />
            </parameter>
            <parameter name="pVarResult">
              <type api="T:System.IntPtr" ref="false" />
            </parameter>
            <parameter name="pExcepInfo">
              <type api="T:System.IntPtr" ref="false" />
            </parameter>
            <parameter name="puArgErr">
              <type api="T:System.IntPtr" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Runtime.InteropServices._Attribute.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)">
              <type api="T:System.Runtime.InteropServices._Attribute" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="P:System.Attribute.TypeId">
          <apidata name="TypeId" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_TypeId" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Class" />
              <field name="Property" />
              <field name="Field" />
              <field name="Interface" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.AssociationClass.#ctor(System.Type)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="theAssocciationClass">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.AssociationClass" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.AssociationClass.#ctor(System.Type,System.Type,System.String)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="theAssocciationEndRoleA">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="theAssocciationEndRoleB">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="theAssocciationName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.AssociationClass" ref="true" />
      </containers>
    </api>
    <api id="F:OOAdvantech.MetaDataRepository.AssociationClass.AssocciationClass">
      <apidata name="AssocciationClass" group="member" subgroup="field" />
      <memberdata visibility="public" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.AssociationClass" ref="true" />
      </containers>
    </api>
    <api id="F:OOAdvantech.MetaDataRepository.AssociationClass.AssocciationEndRoleA">
      <apidata name="AssocciationEndRoleA" group="member" subgroup="field" />
      <memberdata visibility="public" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.AssociationClass" ref="true" />
      </containers>
    </api>
    <api id="F:OOAdvantech.MetaDataRepository.AssociationClass.AssocciationEndRoleB">
      <apidata name="AssocciationEndRoleB" group="member" subgroup="field" />
      <memberdata visibility="public" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.AssociationClass" ref="true" />
      </containers>
    </api>
    <api id="F:OOAdvantech.MetaDataRepository.AssociationClass.AssocciationName">
      <apidata name="AssocciationName" group="member" subgroup="field" />
      <memberdata visibility="public" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.AssociationClass" ref="true" />
      </containers>
    </api>
    <api id="T:OOAdvantech.MetaDataRepository.AssociationClassRole">
      <apidata name="AssociationClassRole" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="F:OOAdvantech.MetaDataRepository.AssociationClassRole.IsRoleA" />
        <element api="F:OOAdvantech.MetaDataRepository.AssociationClassRole.ImplMemberName" />
        <element api="M:OOAdvantech.MetaDataRepository.AssociationClassRole.#ctor(OOAdvantech.MetaDataRepository.Roles,System.String)" />
        <element api="M:OOAdvantech.MetaDataRepository.AssociationClassRole.#ctor(OOAdvantech.MetaDataRepository.Roles)" />
        <element api="M:System.Attribute.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.Equals(System.Object)">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.GetHashCode">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.Match(System.Object)">
          <apidata name="Match" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.IsDefaultAttribute">
          <apidata name="IsDefaultAttribute" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)">
          <apidata name="GetTypeInfoCount" group="member" subgroup="method" />
          <memberdata visibility="private" />
          <proceduredata virtual="true" final="true" eii="true" />
          <parameters>
            <parameter name="pcTInfo" out="true">
              <referenceTo>
                <type api="T:System.UInt32" ref="false" />
              </referenceTo>
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Runtime.InteropServices._Attribute.GetTypeInfoCount(System.UInt32@)">
              <type api="T:System.Runtime.InteropServices._Attribute" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)">
          <apidata name="GetTypeInfo" group="member" subgroup="method" />
          <memberdata visibility="private" />
          <proceduredata virtual="true" final="true" eii="true" />
          <parameters>
            <parameter name="iTInfo">
              <type api="T:System.UInt32" ref="false" />
            </parameter>
            <parameter name="lcid">
              <type api="T:System.UInt32" ref="false" />
            </parameter>
            <parameter name="ppTInfo">
              <type api="T:System.IntPtr" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Runtime.InteropServices._Attribute.GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)">
              <type api="T:System.Runtime.InteropServices._Attribute" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)">
          <apidata name="GetIDsOfNames" group="member" subgroup="method" />
          <memberdata visibility="private" />
          <proceduredata virtual="true" final="true" eii="true" />
          <parameters>
            <parameter name="riid" in="true">
              <referenceTo>
                <type api="T:System.Guid" ref="false" />
              </referenceTo>
            </parameter>
            <parameter name="rgszNames">
              <type api="T:System.IntPtr" ref="false" />
            </parameter>
            <parameter name="cNames">
              <type api="T:System.UInt32" ref="false" />
            </parameter>
            <parameter name="lcid">
              <type api="T:System.UInt32" ref="false" />
            </parameter>
            <parameter name="rgDispId">
              <type api="T:System.IntPtr" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Runtime.InteropServices._Attribute.GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)">
              <type api="T:System.Runtime.InteropServices._Attribute" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)">
          <apidata name="Invoke" group="member" subgroup="method" />
          <memberdata visibility="private" />
          <proceduredata virtual="true" final="true" eii="true" />
          <parameters>
            <parameter name="dispIdMember">
              <type api="T:System.UInt32" ref="false" />
            </parameter>
            <parameter name="riid" in="true">
              <referenceTo>
                <type api="T:System.Guid" ref="false" />
              </referenceTo>
            </parameter>
            <parameter name="lcid">
              <type api="T:System.UInt32" ref="false" />
            </parameter>
            <parameter name="wFlags">
              <type api="T:System.Int16" ref="false" />
            </parameter>
            <parameter name="pDispParams">
              <type api="T:System.IntPtr" ref="false" />
            </parameter>
            <parameter name="pVarResult">
              <type api="T:System.IntPtr" ref="false" />
            </parameter>
            <parameter name="pExcepInfo">
              <type api="T:System.IntPtr" ref="false" />
            </parameter>
            <parameter name="puArgErr">
              <type api="T:System.IntPtr" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Runtime.InteropServices._Attribute.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)">
              <type api="T:System.Runtime.InteropServices._Attribute" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="P:System.Attribute.TypeId">
          <apidata name="TypeId" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_TypeId" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.AssociationClassRole.#ctor(OOAdvantech.MetaDataRepository.Roles)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="role">
          <type api="T:OOAdvantech.MetaDataRepository.Roles" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.AssociationClassRole" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.AssociationClassRole.#ctor(OOAdvantech.MetaDataRepository.Roles,System.String)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="role">
          <type api="T:OOAdvantech.MetaDataRepository.Roles" ref="false" />
        </parameter>
        <parameter name="implMemberName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.AssociationClassRole" ref="true" />
      </containers>
    </api>
    <api id="F:OOAdvantech.MetaDataRepository.AssociationClassRole.ImplMemberName">
      <apidata name="ImplMemberName" group="member" subgroup="field" />
      <memberdata visibility="public" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.AssociationClassRole" ref="true" />
      </containers>
    </api>
    <api id="F:OOAdvantech.MetaDataRepository.AssociationClassRole.IsRoleA">
      <apidata name="IsRoleA" group="member" subgroup="field" />
      <memberdata visibility="public" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.AssociationClassRole" ref="true" />
      </containers>
    </api>
    <api id="T:OOAdvantech.MetaDataRepository.AssociationEnd">
      <apidata name="AssociationEnd" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:OOAdvantech.MetaDataRepository.MetaObject" ref="true" />
          <type api="T:System.MarshalByRefObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="F:OOAdvantech.MetaDataRepository.AssociationEnd._Indexer" />
        <element api="F:OOAdvantech.MetaDataRepository.AssociationEnd._CollectionClassifier" />
        <element api="F:OOAdvantech.MetaDataRepository.AssociationEnd._HasBehavioralSettings" />
        <element api="F:OOAdvantech.MetaDataRepository.AssociationEnd._Persistent" />
        <element api="F:OOAdvantech.MetaDataRepository.AssociationEnd._IsRoleA" />
        <element api="F:OOAdvantech.MetaDataRepository.AssociationEnd._LazyFetching" />
        <element api="F:OOAdvantech.MetaDataRepository.AssociationEnd._CascadeDelete" />
        <element api="F:OOAdvantech.MetaDataRepository.AssociationEnd._ReferentialIntegrity" />
        <element api="F:OOAdvantech.MetaDataRepository.AssociationEnd._Multiplicity" />
        <element api="F:OOAdvantech.MetaDataRepository.AssociationEnd._Setter" />
        <element api="F:OOAdvantech.MetaDataRepository.AssociationEnd._Getter" />
        <element api="F:OOAdvantech.MetaDataRepository.AssociationEnd.Navigable" />
        <element api="F:OOAdvantech.MetaDataRepository.AssociationEnd._Association" />
        <element api="F:OOAdvantech.MetaDataRepository.AssociationEnd._Specification" />
        <element api="F:OOAdvantech.MetaDataRepository.AssociationEnd.TransactionalMember" />
        <element api="M:OOAdvantech.MetaDataRepository.AssociationEnd.AddAssociationEndRealization(OOAdvantech.MetaDataRepository.AssociationEndRealization)" />
        <element api="M:OOAdvantech.MetaDataRepository.AssociationEnd.RemoveAssociationEndRealization(OOAdvantech.MetaDataRepository.AssociationEndRealization)" />
        <element api="M:OOAdvantech.MetaDataRepository.AssociationEnd.SetSpecification(OOAdvantech.MetaDataRepository.Classifier)" />
        <element api="M:OOAdvantech.MetaDataRepository.AssociationEnd.Synchronize(OOAdvantech.MetaDataRepository.MetaObject)" />
        <element api="M:OOAdvantech.MetaDataRepository.AssociationEnd.GetExtensionMetaObjects" />
        <element api="M:OOAdvantech.MetaDataRepository.AssociationEnd.#ctor" />
        <element api="M:OOAdvantech.MetaDataRepository.AssociationEnd.#ctor(System.String,OOAdvantech.MetaDataRepository.Classifier,OOAdvantech.MetaDataRepository.Roles)" />
        <element api="M:OOAdvantech.MetaDataRepository.AssociationEnd.ReAssigneRole" />
        <element api="M:OOAdvantech.MetaDataRepository.AssociationEnd.GetOtherEnd" />
        <element api="P:OOAdvantech.MetaDataRepository.AssociationEnd.ImplementationUnit" />
        <element api="P:OOAdvantech.MetaDataRepository.AssociationEnd.Indexer" />
        <element api="P:OOAdvantech.MetaDataRepository.AssociationEnd.CollectionClassifier" />
        <element api="P:OOAdvantech.MetaDataRepository.AssociationEnd.Role" />
        <element api="P:OOAdvantech.MetaDataRepository.AssociationEnd.HasBehavioralSettings" />
        <element api="P:OOAdvantech.MetaDataRepository.AssociationEnd.Persistent" />
        <element api="P:OOAdvantech.MetaDataRepository.AssociationEnd.HasLazyFetchingRealization" />
        <element api="P:OOAdvantech.MetaDataRepository.AssociationEnd.AssociationEndRealizations" />
        <element api="P:OOAdvantech.MetaDataRepository.AssociationEnd.HasAssociationEndRealizations" />
        <element api="P:OOAdvantech.MetaDataRepository.AssociationEnd.IsRoleA" />
        <element api="P:OOAdvantech.MetaDataRepository.AssociationEnd.LazyFetching" />
        <element api="P:OOAdvantech.MetaDataRepository.AssociationEnd.CascadeDelete" />
        <element api="P:OOAdvantech.MetaDataRepository.AssociationEnd.ReferentialIntegrity" />
        <element api="P:OOAdvantech.MetaDataRepository.AssociationEnd.Multiplicity" />
        <element api="P:OOAdvantech.MetaDataRepository.AssociationEnd.Setter" />
        <element api="P:OOAdvantech.MetaDataRepository.AssociationEnd.Getter" />
        <element api="P:OOAdvantech.MetaDataRepository.AssociationEnd.Identity" />
        <element api="P:OOAdvantech.MetaDataRepository.AssociationEnd.Association" />
        <element api="P:OOAdvantech.MetaDataRepository.AssociationEnd.Specification" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject._CaseInsensitiveName" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject._ImplementationUnit" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject.LockObject" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject.ReaderWriterLock" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject.Properties" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject._Name" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject.MetaObjectIDStream" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject._Identity" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject._ClientDependencies" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject._SupplierDependencies" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject._Namespace" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject.Visibility" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.MetaObjectChangeState" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.ShallowSynchronize(OOAdvantech.MetaDataRepository.MetaObject)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.AddDependency(System.String,OOAdvantech.MetaDataRepository.MetaObject)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.ErrorCheck(System.Collections.ArrayList@)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.GetDynamicPropertiesAsXmlString" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.SetIdentity(OOAdvantech.MetaDataRepository.MetaObjectID)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.GetExtensionMetaObject(System.Type)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.SetNamespace(OOAdvantech.MetaDataRepository.Namespace)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.GetPropertyValue``1(System.String,System.String)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.GetPropertyValue(System.Type,System.String,System.String)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.PutPropertyValue(System.String,System.String,System.Object)" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.CaseInsensitiveName" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.OQLName" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.Name" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.FullName" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.OQLFullName" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.ClientDependencies" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.SupplierDependencies" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.Namespace" />
        <element api="E:OOAdvantech.MetaDataRepository.MetaObject.Changed" />
        <element api="M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="cloneIdentity">
              <type api="T:System.Boolean" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.MarshalByRefObject" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.MarshalByRefObject" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.MarshalByRefObject.GetLifetimeService">
          <apidata name="GetLifetimeService" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.MarshalByRefObject" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Security.Permissions.SecurityPermissionAttribute" ref="true" />
              <argument>
                <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
                <enumValue>
                  <field name="LinkDemand" />
                </enumValue>
              </argument>
              <assignment name="Flags">
                <type api="T:System.Security.Permissions.SecurityPermissionFlag" ref="false" />
                <enumValue>
                  <field name="Infrastructure" />
                </enumValue>
              </assignment>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.MarshalByRefObject.InitializeLifetimeService">
          <apidata name="InitializeLifetimeService" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.MarshalByRefObject" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Security.Permissions.SecurityPermissionAttribute" ref="true" />
              <argument>
                <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
                <enumValue>
                  <field name="LinkDemand" />
                </enumValue>
              </argument>
              <assignment name="Flags">
                <type api="T:System.Security.Permissions.SecurityPermissionFlag" ref="false" />
                <enumValue>
                  <field name="Infrastructure" />
                </enumValue>
              </assignment>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.MarshalByRefObject.CreateObjRef(System.Type)">
          <apidata name="CreateObjRef" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="requestedType">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Runtime.Remoting.ObjRef" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.MarshalByRefObject" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Security.Permissions.SecurityPermissionAttribute" ref="true" />
              <argument>
                <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
                <enumValue>
                  <field name="LinkDemand" />
                </enumValue>
              </argument>
              <assignment name="Flags">
                <type api="T:System.Security.Permissions.SecurityPermissionFlag" ref="false" />
                <enumValue>
                  <field name="Infrastructure" />
                </enumValue>
              </assignment>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.Persistent" ref="true" />
        </attribute>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.BackwardCompatibilityID" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>{F3D343D7-7DD1-4C50-A2BD-0B9DFF7B2105}</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.AssociationEnd.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.AssociationEnd" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.AssociationEnd.#ctor(System.String,OOAdvantech.MetaDataRepository.Classifier,OOAdvantech.MetaDataRepository.Roles)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="specification">
          <type api="T:OOAdvantech.MetaDataRepository.Classifier" ref="true" />
        </parameter>
        <parameter name="roleType">
          <type api="T:OOAdvantech.MetaDataRepository.Roles" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.AssociationEnd" ref="true" />
      </containers>
    </api>
    <api id="F:OOAdvantech.MetaDataRepository.AssociationEnd._Association">
      <apidata name="_Association" group="member" subgroup="field" />
      <memberdata visibility="family" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:OOAdvantech.MetaDataRepository.Association" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.AssociationEnd" ref="true" />
      </containers>
    </api>
    <api id="F:OOAdvantech.MetaDataRepository.AssociationEnd._CascadeDelete">
      <apidata name="_CascadeDelete" group="member" subgroup="field" />
      <memberdata visibility="family" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.AssociationEnd" ref="true" />
      </containers>
    </api>
    <api id="F:OOAdvantech.MetaDataRepository.AssociationEnd._CollectionClassifier">
      <apidata name="_CollectionClassifier" group="member" subgroup="field" />
      <memberdata visibility="family" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:OOAdvantech.MetaDataRepository.Classifier" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.AssociationEnd" ref="true" />
      </containers>
    </api>
    <api id="F:OOAdvantech.MetaDataRepository.AssociationEnd._Getter">
      <apidata name="_Getter" group="member" subgroup="field" />
      <memberdata visibility="family" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:OOAdvantech.MetaDataRepository.Operation" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.AssociationEnd" ref="true" />
      </containers>
    </api>
    <api id="F:OOAdvantech.MetaDataRepository.AssociationEnd._HasBehavioralSettings">
      <apidata name="_HasBehavioralSettings" group="member" subgroup="field" />
      <memberdata visibility="family" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.AssociationEnd" ref="true" />
      </containers>
    </api>
    <api id="F:OOAdvantech.MetaDataRepository.AssociationEnd._Indexer">
      <apidata name="_Indexer" group="member" subgroup="field" />
      <memberdata visibility="family" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.AssociationEnd" ref="true" />
      </containers>
    </api>
    <api id="F:OOAdvantech.MetaDataRepository.AssociationEnd._IsRoleA">
      <apidata name="_IsRoleA" group="member" subgroup="field" />
      <memberdata visibility="family" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.AssociationEnd" ref="true" />
      </containers>
    </api>
    <api id="F:OOAdvantech.MetaDataRepository.AssociationEnd._LazyFetching">
      <apidata name="_LazyFetching" group="member" subgroup="field" />
      <memberdata visibility="family" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.AssociationEnd" ref="true" />
      </containers>
    </api>
    <api id="F:OOAdvantech.MetaDataRepository.AssociationEnd._Multiplicity">
      <apidata name="_Multiplicity" group="member" subgroup="field" />
      <memberdata visibility="family" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:OOAdvantech.MetaDataRepository.MultiplicityRange" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.AssociationEnd" ref="true" />
      </containers>
    </api>
    <api id="F:OOAdvantech.MetaDataRepository.AssociationEnd._Persistent">
      <apidata name="_Persistent" group="member" subgroup="field" />
      <memberdata visibility="family" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.AssociationEnd" ref="true" />
      </containers>
    </api>
    <api id="F:OOAdvantech.MetaDataRepository.AssociationEnd._ReferentialIntegrity">
      <apidata name="_ReferentialIntegrity" group="member" subgroup="field" />
      <memberdata visibility="family" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.AssociationEnd" ref="true" />
      </containers>
    </api>
    <api id="F:OOAdvantech.MetaDataRepository.AssociationEnd._Setter">
      <apidata name="_Setter" group="member" subgroup="field" />
      <memberdata visibility="family" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:OOAdvantech.MetaDataRepository.Operation" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.AssociationEnd" ref="true" />
      </containers>
    </api>
    <api id="F:OOAdvantech.MetaDataRepository.AssociationEnd._Specification">
      <apidata name="_Specification" group="member" subgroup="field" />
      <memberdata visibility="family" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:OOAdvantech.MetaDataRepository.Classifier" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.AssociationEnd" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.AssociationEnd.AddAssociationEndRealization(OOAdvantech.MetaDataRepository.AssociationEndRealization)">
      <apidata name="AddAssociationEndRealization" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="associationEndRealization">
          <type api="T:OOAdvantech.MetaDataRepository.AssociationEndRealization" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.AssociationEnd" ref="true" />
      </containers>
    </api>
    <api id="P:OOAdvantech.MetaDataRepository.AssociationEnd.Association">
      <apidata name="Association" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_Association" />
      <returns>
        <type api="T:OOAdvantech.MetaDataRepository.Association" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.AssociationEnd" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.AssociationEndBehavior" ref="true" />
          <argument>
            <type api="T:OOAdvantech.MetaDataRepository.PersistencyFlag" ref="false" />
            <enumValue>
              <field name="OnConstruction" />
            </enumValue>
          </argument>
        </attribute>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.RoleBMultiplicityRangeAttribute" ref="true" />
          <argument>
            <type api="T:System.UInt64" ref="false" />
            <value>1</value>
          </argument>
          <argument>
            <type api="T:System.UInt64" ref="false" />
            <value>1</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.AssociationAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>AssociationEndPoint</value>
          </argument>
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:OOAdvantech.MetaDataRepository.Association" ref="true" />
            </typeValue>
          </argument>
          <argument>
            <type api="T:OOAdvantech.MetaDataRepository.Roles" ref="false" />
            <enumValue>
              <field name="RoleB" />
            </enumValue>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>{C9B51DC4-1D24-44EB-B343-6F48A766C46D}</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.PersistentMember" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>_Association</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:OOAdvantech.MetaDataRepository.AssociationEnd.AssociationEndRealizations">
      <apidata name="AssociationEndRealizations" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_AssociationEndRealizations" />
      <returns>
        <type api="T:OOAdvantech.Collections.Generic.Set`1" ref="true">
          <specialization>
            <type api="T:OOAdvantech.MetaDataRepository.AssociationEndRealization" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.AssociationEnd" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.AssociationAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>AssociationEndRealization</value>
          </argument>
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:OOAdvantech.MetaDataRepository.AssociationEndRealization" ref="true" />
            </typeValue>
          </argument>
          <argument>
            <type api="T:OOAdvantech.MetaDataRepository.Roles" ref="false" />
            <enumValue>
              <field name="RoleB" />
            </enumValue>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>{B48643D9-F660-492C-852D-E150BBE16B37}</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.RoleBMultiplicityRangeAttribute" ref="true" />
          <argument>
            <type api="T:System.UInt64" ref="false" />
            <value>0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.PersistentMember" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>_AssociationEndRealizations</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:OOAdvantech.MetaDataRepository.AssociationEnd.CascadeDelete">
      <apidata name="CascadeDelete" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_CascadeDelete" />
      <setter name="set_CascadeDelete" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.AssociationEnd" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.PersistentMember" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>_CascadeDelete</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.BackwardCompatibilityID" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>+18</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:OOAdvantech.MetaDataRepository.AssociationEnd.CollectionClassifier">
      <apidata name="CollectionClassifier" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_CollectionClassifier" />
      <returns>
        <type api="T:OOAdvantech.MetaDataRepository.Classifier" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.AssociationEnd" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.AssociationEnd.GetExtensionMetaObjects">
      <apidata name="GetExtensionMetaObjects" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:OOAdvantech.MetaDataRepository.MetaObject.GetExtensionMetaObjects">
          <type api="T:OOAdvantech.MetaDataRepository.MetaObject" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Collections.ArrayList" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.AssociationEnd" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.AssociationEnd.GetOtherEnd">
      <apidata name="GetOtherEnd" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:OOAdvantech.MetaDataRepository.AssociationEnd" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.AssociationEnd" ref="true" />
      </containers>
    </api>
    <api id="P:OOAdvantech.MetaDataRepository.AssociationEnd.Getter">
      <apidata name="Getter" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_Getter" />
      <returns>
        <type api="T:OOAdvantech.MetaDataRepository.Operation" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.AssociationEnd" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.RoleBMultiplicityRangeAttribute" ref="true" />
          <argument>
            <type api="T:System.UInt64" ref="false" />
            <value>0</value>
          </argument>
          <argument>
            <type api="T:System.UInt64" ref="false" />
            <value>1</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.AssociationAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>ReadAssociationEnd</value>
          </argument>
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:OOAdvantech.MetaDataRepository.Operation" ref="true" />
            </typeValue>
          </argument>
          <argument>
            <type api="T:OOAdvantech.MetaDataRepository.Roles" ref="false" />
            <enumValue>
              <field name="RoleA" />
            </enumValue>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>{4227F265-E6A9-465D-B8FD-16AE14381A1E}</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.RoleAMultiplicityRangeAttribute" ref="true" />
          <argument>
            <type api="T:System.UInt64" ref="false" />
            <value>0</value>
          </argument>
          <argument>
            <type api="T:System.UInt64" ref="false" />
            <value>1</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:OOAdvantech.MetaDataRepository.AssociationEnd.HasAssociationEndRealizations">
      <apidata name="HasAssociationEndRealizations" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_HasAssociationEndRealizations" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.AssociationEnd" ref="true" />
      </containers>
    </api>
    <api id="P:OOAdvantech.MetaDataRepository.AssociationEnd.HasBehavioralSettings">
      <apidata name="HasBehavioralSettings" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_HasBehavioralSettings" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.AssociationEnd" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.PersistentMember" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>_HasBehavioralSettings</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.BackwardCompatibilityID" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>+2</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:OOAdvantech.MetaDataRepository.AssociationEnd.HasLazyFetchingRealization">
      <apidata name="HasLazyFetchingRealization" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_HasLazyFetchingRealization" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.AssociationEnd" ref="true" />
      </containers>
    </api>
    <api id="P:OOAdvantech.MetaDataRepository.AssociationEnd.Identity">
      <apidata name="Identity" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:OOAdvantech.MetaDataRepository.MetaObject.Identity">
          <type api="T:OOAdvantech.MetaDataRepository.MetaObject" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_Identity" />
      <returns>
        <type api="T:OOAdvantech.MetaDataRepository.MetaObjectID" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.AssociationEnd" ref="true" />
      </containers>
    </api>
    <api id="P:OOAdvantech.MetaDataRepository.AssociationEnd.ImplementationUnit">
      <apidata name="ImplementationUnit" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:OOAdvantech.MetaDataRepository.MetaObject.ImplementationUnit">
          <type api="T:OOAdvantech.MetaDataRepository.MetaObject" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_ImplementationUnit" />
      <returns>
        <type api="T:OOAdvantech.MetaDataRepository.Component" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.AssociationEnd" ref="true" />
      </containers>
    </api>
    <api id="P:OOAdvantech.MetaDataRepository.AssociationEnd.Indexer">
      <apidata name="Indexer" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Indexer" />
      <setter name="set_Indexer" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.AssociationEnd" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.BackwardCompatibilityID" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>+32</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.PersistentMember" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>_Indexer</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:OOAdvantech.MetaDataRepository.AssociationEnd.IsRoleA">
      <apidata name="IsRoleA" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_IsRoleA" />
      <setter name="set_IsRoleA" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.AssociationEnd" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.PersistentMember" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>_IsRoleA</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.BackwardCompatibilityID" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>+11</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:OOAdvantech.MetaDataRepository.AssociationEnd.LazyFetching">
      <apidata name="LazyFetching" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_LazyFetching" />
      <setter name="set_LazyFetching" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.AssociationEnd" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.BackwardCompatibilityID" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>+20</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.PersistentMember" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>_LazyFetching</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:OOAdvantech.MetaDataRepository.AssociationEnd.Multiplicity">
      <apidata name="Multiplicity" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_Multiplicity" />
      <returns>
        <type api="T:OOAdvantech.MetaDataRepository.MultiplicityRange" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.AssociationEnd" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.PersistentMember" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>_Multiplicity</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.AssociationEndBehavior" ref="true" />
          <argument>
            <type api="T:OOAdvantech.MetaDataRepository.PersistencyFlag" ref="false" />
            <enumValue>
              <field name="OnConstruction" />
            </enumValue>
          </argument>
        </attribute>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.RoleBMultiplicityRangeAttribute" ref="true" />
          <argument>
            <type api="T:System.UInt64" ref="false" />
            <value>1</value>
          </argument>
          <argument>
            <type api="T:System.UInt64" ref="false" />
            <value>1</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.AssociationAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>AssociationEndMultiplicity</value>
          </argument>
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:OOAdvantech.MetaDataRepository.MultiplicityRange" ref="true" />
            </typeValue>
          </argument>
          <argument>
            <type api="T:OOAdvantech.MetaDataRepository.Roles" ref="false" />
            <enumValue>
              <field name="RoleA" />
            </enumValue>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>{85CEEE4B-DC2A-46F4-83EA-6199F9F028E5}</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.RoleAMultiplicityRangeAttribute" ref="true" />
          <argument>
            <type api="T:System.UInt64" ref="false" />
            <value>1</value>
          </argument>
          <argument>
            <type api="T:System.UInt64" ref="false" />
            <value>1</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="F:OOAdvantech.MetaDataRepository.AssociationEnd.Navigable">
      <apidata name="Navigable" group="member" subgroup="field" />
      <memberdata visibility="public" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.AssociationEnd" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.BackwardCompatibilityID" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>+1</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.PersistentMember" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="P:OOAdvantech.MetaDataRepository.AssociationEnd.Persistent">
      <apidata name="Persistent" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Persistent" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.AssociationEnd" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.BackwardCompatibilityID" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>+7</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.PersistentMember" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>_Persistent</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.AssociationEnd.ReAssigneRole">
      <apidata name="ReAssigneRole" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.AssociationEnd" ref="true" />
      </containers>
    </api>
    <api id="P:OOAdvantech.MetaDataRepository.AssociationEnd.ReferentialIntegrity">
      <apidata name="ReferentialIntegrity" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ReferentialIntegrity" />
      <setter name="set_ReferentialIntegrity" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.AssociationEnd" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.PersistentMember" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>_ReferentialIntegrity</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.BackwardCompatibilityID" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>+19</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.AssociationEnd.RemoveAssociationEndRealization(OOAdvantech.MetaDataRepository.AssociationEndRealization)">
      <apidata name="RemoveAssociationEndRealization" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="associationEndRealization">
          <type api="T:OOAdvantech.MetaDataRepository.AssociationEndRealization" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.AssociationEnd" ref="true" />
      </containers>
    </api>
    <api id="P:OOAdvantech.MetaDataRepository.AssociationEnd.Role">
      <apidata name="Role" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Role" />
      <setter name="set_Role" />
      <returns>
        <type api="T:OOAdvantech.MetaDataRepository.Roles" ref="false" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.AssociationEnd" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.AssociationEnd.SetSpecification(OOAdvantech.MetaDataRepository.Classifier)">
      <apidata name="SetSpecification" group="member" subgroup="method" />
      <memberdata visibility="family or assembly" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:OOAdvantech.MetaDataRepository.Classifier" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.AssociationEnd" ref="true" />
      </containers>
    </api>
    <api id="P:OOAdvantech.MetaDataRepository.AssociationEnd.Setter">
      <apidata name="Setter" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_Setter" />
      <returns>
        <type api="T:OOAdvantech.MetaDataRepository.Operation" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.AssociationEnd" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.RoleBMultiplicityRangeAttribute" ref="true" />
          <argument>
            <type api="T:System.UInt64" ref="false" />
            <value>0</value>
          </argument>
          <argument>
            <type api="T:System.UInt64" ref="false" />
            <value>1</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.AssociationAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>WriteAssociationEnd</value>
          </argument>
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:OOAdvantech.MetaDataRepository.Operation" ref="true" />
            </typeValue>
          </argument>
          <argument>
            <type api="T:OOAdvantech.MetaDataRepository.Roles" ref="false" />
            <enumValue>
              <field name="RoleA" />
            </enumValue>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>{23B4DAFC-8F2D-4BC3-A5A3-4CA95F4DB36A}</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.RoleAMultiplicityRangeAttribute" ref="true" />
          <argument>
            <type api="T:System.UInt64" ref="false" />
            <value>0</value>
          </argument>
          <argument>
            <type api="T:System.UInt64" ref="false" />
            <value>1</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:OOAdvantech.MetaDataRepository.AssociationEnd.Specification">
      <apidata name="Specification" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_Specification" />
      <returns>
        <type api="T:OOAdvantech.MetaDataRepository.Classifier" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.AssociationEnd" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.PersistentMember" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>_Specification</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.RoleAMultiplicityRangeAttribute" ref="true" />
          <argument>
            <type api="T:System.UInt64" ref="false" />
            <value>1</value>
          </argument>
          <argument>
            <type api="T:System.UInt64" ref="false" />
            <value>1</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.AssociationAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>ClassifierRole</value>
          </argument>
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:OOAdvantech.MetaDataRepository.Classifier" ref="true" />
            </typeValue>
          </argument>
          <argument>
            <type api="T:OOAdvantech.MetaDataRepository.Roles" ref="false" />
            <enumValue>
              <field name="RoleA" />
            </enumValue>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>{1213BEE4-382C-4EE0-A62B-E013FCA9B4C3}</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.AssociationEndBehavior" ref="true" />
          <argument>
            <type api="T:OOAdvantech.MetaDataRepository.PersistencyFlag" ref="false" />
            <enumValue>
              <field name="OnConstruction" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.AssociationEnd.Synchronize(OOAdvantech.MetaDataRepository.MetaObject)">
      <apidata name="Synchronize" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:OOAdvantech.MetaDataRepository.MetaObject.Synchronize(OOAdvantech.MetaDataRepository.MetaObject)">
          <type api="T:OOAdvantech.MetaDataRepository.MetaObject" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="OriginMetaObject">
          <type api="T:OOAdvantech.MetaDataRepository.MetaObject" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.AssociationEnd" ref="true" />
      </containers>
    </api>
    <api id="F:OOAdvantech.MetaDataRepository.AssociationEnd.TransactionalMember">
      <apidata name="TransactionalMember" group="member" subgroup="field" />
      <memberdata visibility="public" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.AssociationEnd" ref="true" />
      </containers>
    </api>
    <api id="T:OOAdvantech.MetaDataRepository.AssociationEndBehavior">
      <apidata name="AssociationEndBehavior" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="F:OOAdvantech.MetaDataRepository.AssociationEndBehavior.PersistencyFlag" />
        <element api="M:OOAdvantech.MetaDataRepository.AssociationEndBehavior.#ctor(OOAdvantech.MetaDataRepository.PersistencyFlag)" />
        <element api="M:System.Attribute.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.Equals(System.Object)">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.GetHashCode">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.Match(System.Object)">
          <apidata name="Match" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.IsDefaultAttribute">
          <apidata name="IsDefaultAttribute" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)">
          <apidata name="GetTypeInfoCount" group="member" subgroup="method" />
          <memberdata visibility="private" />
          <proceduredata virtual="true" final="true" eii="true" />
          <parameters>
            <parameter name="pcTInfo" out="true">
              <referenceTo>
                <type api="T:System.UInt32" ref="false" />
              </referenceTo>
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Runtime.InteropServices._Attribute.GetTypeInfoCount(System.UInt32@)">
              <type api="T:System.Runtime.InteropServices._Attribute" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)">
          <apidata name="GetTypeInfo" group="member" subgroup="method" />
          <memberdata visibility="private" />
          <proceduredata virtual="true" final="true" eii="true" />
          <parameters>
            <parameter name="iTInfo">
              <type api="T:System.UInt32" ref="false" />
            </parameter>
            <parameter name="lcid">
              <type api="T:System.UInt32" ref="false" />
            </parameter>
            <parameter name="ppTInfo">
              <type api="T:System.IntPtr" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Runtime.InteropServices._Attribute.GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)">
              <type api="T:System.Runtime.InteropServices._Attribute" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)">
          <apidata name="GetIDsOfNames" group="member" subgroup="method" />
          <memberdata visibility="private" />
          <proceduredata virtual="true" final="true" eii="true" />
          <parameters>
            <parameter name="riid" in="true">
              <referenceTo>
                <type api="T:System.Guid" ref="false" />
              </referenceTo>
            </parameter>
            <parameter name="rgszNames">
              <type api="T:System.IntPtr" ref="false" />
            </parameter>
            <parameter name="cNames">
              <type api="T:System.UInt32" ref="false" />
            </parameter>
            <parameter name="lcid">
              <type api="T:System.UInt32" ref="false" />
            </parameter>
            <parameter name="rgDispId">
              <type api="T:System.IntPtr" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Runtime.InteropServices._Attribute.GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)">
              <type api="T:System.Runtime.InteropServices._Attribute" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)">
          <apidata name="Invoke" group="member" subgroup="method" />
          <memberdata visibility="private" />
          <proceduredata virtual="true" final="true" eii="true" />
          <parameters>
            <parameter name="dispIdMember">
              <type api="T:System.UInt32" ref="false" />
            </parameter>
            <parameter name="riid" in="true">
              <referenceTo>
                <type api="T:System.Guid" ref="false" />
              </referenceTo>
            </parameter>
            <parameter name="lcid">
              <type api="T:System.UInt32" ref="false" />
            </parameter>
            <parameter name="wFlags">
              <type api="T:System.Int16" ref="false" />
            </parameter>
            <parameter name="pDispParams">
              <type api="T:System.IntPtr" ref="false" />
            </parameter>
            <parameter name="pVarResult">
              <type api="T:System.IntPtr" ref="false" />
            </parameter>
            <parameter name="pExcepInfo">
              <type api="T:System.IntPtr" ref="false" />
            </parameter>
            <parameter name="puArgErr">
              <type api="T:System.IntPtr" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Runtime.InteropServices._Attribute.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)">
              <type api="T:System.Runtime.InteropServices._Attribute" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="P:System.Attribute.TypeId">
          <apidata name="TypeId" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_TypeId" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.AssociationEndBehavior.#ctor(OOAdvantech.MetaDataRepository.PersistencyFlag)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="mPersistencyFlag">
          <type api="T:OOAdvantech.MetaDataRepository.PersistencyFlag" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.AssociationEndBehavior" ref="true" />
      </containers>
    </api>
    <api id="F:OOAdvantech.MetaDataRepository.AssociationEndBehavior.PersistencyFlag">
      <apidata name="PersistencyFlag" group="member" subgroup="field" />
      <memberdata visibility="public" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:OOAdvantech.MetaDataRepository.PersistencyFlag" ref="false" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.AssociationEndBehavior" ref="true" />
      </containers>
    </api>
    <api id="T:OOAdvantech.MetaDataRepository.AssociationEndRealization">
      <apidata name="AssociationEndRealization" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:OOAdvantech.MetaDataRepository.Feature" ref="true" />
          <type api="T:OOAdvantech.MetaDataRepository.MetaObject" ref="true" />
          <type api="T:System.MarshalByRefObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="F:OOAdvantech.MetaDataRepository.AssociationEndRealization.TransactionalMember" />
        <element api="F:OOAdvantech.MetaDataRepository.AssociationEndRealization._Persistent" />
        <element api="F:OOAdvantech.MetaDataRepository.AssociationEndRealization._HasBehavioralSettings" />
        <element api="F:OOAdvantech.MetaDataRepository.AssociationEndRealization._CascadeDelete" />
        <element api="F:OOAdvantech.MetaDataRepository.AssociationEndRealization._ReferentialIntegrity" />
        <element api="F:OOAdvantech.MetaDataRepository.AssociationEndRealization._LazyFetching" />
        <element api="F:OOAdvantech.MetaDataRepository.AssociationEndRealization._Specification" />
        <element api="M:OOAdvantech.MetaDataRepository.AssociationEndRealization.#ctor" />
        <element api="M:OOAdvantech.MetaDataRepository.AssociationEndRealization.#ctor(OOAdvantech.MetaDataRepository.AssociationEnd)" />
        <element api="M:OOAdvantech.MetaDataRepository.AssociationEndRealization.Synchronize(OOAdvantech.MetaDataRepository.MetaObject)" />
        <element api="M:OOAdvantech.MetaDataRepository.AssociationEndRealization.GetExtensionMetaObjects" />
        <element api="P:OOAdvantech.MetaDataRepository.AssociationEndRealization.Persistent" />
        <element api="P:OOAdvantech.MetaDataRepository.AssociationEndRealization.HasBehavioralSettings" />
        <element api="P:OOAdvantech.MetaDataRepository.AssociationEndRealization.CascadeDelete" />
        <element api="P:OOAdvantech.MetaDataRepository.AssociationEndRealization.ReferentialIntegrity" />
        <element api="P:OOAdvantech.MetaDataRepository.AssociationEndRealization.LazyFetching" />
        <element api="P:OOAdvantech.MetaDataRepository.AssociationEndRealization.Specification" />
        <element api="F:OOAdvantech.MetaDataRepository.Feature._IsStatic" />
        <element api="F:OOAdvantech.MetaDataRepository.Feature._Owner" />
        <element api="P:OOAdvantech.MetaDataRepository.Feature.IsStatic" />
        <element api="P:OOAdvantech.MetaDataRepository.Feature.Owner" />
        <element api="P:OOAdvantech.MetaDataRepository.Feature.ImplementationUnit" />
        <element api="P:OOAdvantech.MetaDataRepository.Feature.Namespace" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject._CaseInsensitiveName" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject._ImplementationUnit" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject.LockObject" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject.ReaderWriterLock" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject.Properties" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject._Name" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject.MetaObjectIDStream" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject._Identity" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject._ClientDependencies" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject._SupplierDependencies" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject._Namespace" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject.Visibility" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.MetaObjectChangeState" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.ShallowSynchronize(OOAdvantech.MetaDataRepository.MetaObject)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.AddDependency(System.String,OOAdvantech.MetaDataRepository.MetaObject)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.ErrorCheck(System.Collections.ArrayList@)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.GetDynamicPropertiesAsXmlString" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.SetIdentity(OOAdvantech.MetaDataRepository.MetaObjectID)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.GetExtensionMetaObject(System.Type)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.SetNamespace(OOAdvantech.MetaDataRepository.Namespace)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.GetPropertyValue``1(System.String,System.String)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.GetPropertyValue(System.Type,System.String,System.String)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.PutPropertyValue(System.String,System.String,System.Object)" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.CaseInsensitiveName" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.OQLName" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.Name" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.FullName" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.OQLFullName" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.Identity" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.ClientDependencies" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.SupplierDependencies" />
        <element api="E:OOAdvantech.MetaDataRepository.MetaObject.Changed" />
        <element api="M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="cloneIdentity">
              <type api="T:System.Boolean" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.MarshalByRefObject" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.MarshalByRefObject" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.MarshalByRefObject.GetLifetimeService">
          <apidata name="GetLifetimeService" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.MarshalByRefObject" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Security.Permissions.SecurityPermissionAttribute" ref="true" />
              <argument>
                <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
                <enumValue>
                  <field name="LinkDemand" />
                </enumValue>
              </argument>
              <assignment name="Flags">
                <type api="T:System.Security.Permissions.SecurityPermissionFlag" ref="false" />
                <enumValue>
                  <field name="Infrastructure" />
                </enumValue>
              </assignment>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.MarshalByRefObject.InitializeLifetimeService">
          <apidata name="InitializeLifetimeService" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.MarshalByRefObject" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Security.Permissions.SecurityPermissionAttribute" ref="true" />
              <argument>
                <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
                <enumValue>
                  <field name="LinkDemand" />
                </enumValue>
              </argument>
              <assignment name="Flags">
                <type api="T:System.Security.Permissions.SecurityPermissionFlag" ref="false" />
                <enumValue>
                  <field name="Infrastructure" />
                </enumValue>
              </assignment>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.MarshalByRefObject.CreateObjRef(System.Type)">
          <apidata name="CreateObjRef" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="requestedType">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Runtime.Remoting.ObjRef" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.MarshalByRefObject" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Security.Permissions.SecurityPermissionAttribute" ref="true" />
              <argument>
                <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
                <enumValue>
                  <field name="LinkDemand" />
                </enumValue>
              </argument>
              <assignment name="Flags">
                <type api="T:System.Security.Permissions.SecurityPermissionFlag" ref="false" />
                <enumValue>
                  <field name="Infrastructure" />
                </enumValue>
              </assignment>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.BackwardCompatibilityID" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>{9BCE1F3A-0A8F-4BD2-A33D-0E6A9AB821B6}</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.Persistent" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.AssociationEndRealization.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.AssociationEndRealization" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.AssociationEndRealization.#ctor(OOAdvantech.MetaDataRepository.AssociationEnd)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="specification">
          <type api="T:OOAdvantech.MetaDataRepository.AssociationEnd" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.AssociationEndRealization" ref="true" />
      </containers>
    </api>
    <api id="F:OOAdvantech.MetaDataRepository.AssociationEndRealization._CascadeDelete">
      <apidata name="_CascadeDelete" group="member" subgroup="field" />
      <memberdata visibility="family" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.AssociationEndRealization" ref="true" />
      </containers>
    </api>
    <api id="F:OOAdvantech.MetaDataRepository.AssociationEndRealization._HasBehavioralSettings">
      <apidata name="_HasBehavioralSettings" group="member" subgroup="field" />
      <memberdata visibility="family" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.AssociationEndRealization" ref="true" />
      </containers>
    </api>
    <api id="F:OOAdvantech.MetaDataRepository.AssociationEndRealization._LazyFetching">
      <apidata name="_LazyFetching" group="member" subgroup="field" />
      <memberdata visibility="family" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.AssociationEndRealization" ref="true" />
      </containers>
    </api>
    <api id="F:OOAdvantech.MetaDataRepository.AssociationEndRealization._Persistent">
      <apidata name="_Persistent" group="member" subgroup="field" />
      <memberdata visibility="family" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.AssociationEndRealization" ref="true" />
      </containers>
    </api>
    <api id="F:OOAdvantech.MetaDataRepository.AssociationEndRealization._ReferentialIntegrity">
      <apidata name="_ReferentialIntegrity" group="member" subgroup="field" />
      <memberdata visibility="family" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.AssociationEndRealization" ref="true" />
      </containers>
    </api>
    <api id="F:OOAdvantech.MetaDataRepository.AssociationEndRealization._Specification">
      <apidata name="_Specification" group="member" subgroup="field" />
      <memberdata visibility="family" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:OOAdvantech.MetaDataRepository.AssociationEnd" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.AssociationEndRealization" ref="true" />
      </containers>
    </api>
    <api id="P:OOAdvantech.MetaDataRepository.AssociationEndRealization.CascadeDelete">
      <apidata name="CascadeDelete" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_CascadeDelete" />
      <setter name="set_CascadeDelete" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.AssociationEndRealization" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.PersistentMember" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>_CascadeDelete</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.BackwardCompatibilityID" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>+18</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.AssociationEndRealization.GetExtensionMetaObjects">
      <apidata name="GetExtensionMetaObjects" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:OOAdvantech.MetaDataRepository.MetaObject.GetExtensionMetaObjects">
          <type api="T:OOAdvantech.MetaDataRepository.MetaObject" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Collections.ArrayList" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.AssociationEndRealization" ref="true" />
      </containers>
    </api>
    <api id="P:OOAdvantech.MetaDataRepository.AssociationEndRealization.HasBehavioralSettings">
      <apidata name="HasBehavioralSettings" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_HasBehavioralSettings" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.AssociationEndRealization" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.BackwardCompatibilityID" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>+2</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.PersistentMember" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>_HasBehavioralSettings</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:OOAdvantech.MetaDataRepository.AssociationEndRealization.LazyFetching">
      <apidata name="LazyFetching" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_LazyFetching" />
      <setter name="set_LazyFetching" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.AssociationEndRealization" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.PersistentMember" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>_LazyFetching</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.BackwardCompatibilityID" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>+20</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:OOAdvantech.MetaDataRepository.AssociationEndRealization.Persistent">
      <apidata name="Persistent" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Persistent" />
      <setter name="set_Persistent" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.AssociationEndRealization" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.BackwardCompatibilityID" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>+7</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.PersistentMember" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>_Persistent</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:OOAdvantech.MetaDataRepository.AssociationEndRealization.ReferentialIntegrity">
      <apidata name="ReferentialIntegrity" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ReferentialIntegrity" />
      <setter name="set_ReferentialIntegrity" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.AssociationEndRealization" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.PersistentMember" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>_ReferentialIntegrity</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.BackwardCompatibilityID" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>+19</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:OOAdvantech.MetaDataRepository.AssociationEndRealization.Specification">
      <apidata name="Specification" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Specification" />
      <setter name="set_Specification" />
      <returns>
        <type api="T:OOAdvantech.MetaDataRepository.AssociationEnd" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.AssociationEndRealization" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.RoleAMultiplicityRangeAttribute" ref="true" />
          <argument>
            <type api="T:System.UInt64" ref="false" />
            <value>1</value>
          </argument>
          <argument>
            <type api="T:System.UInt64" ref="false" />
            <value>1</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.PersistentMember" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>_Specification</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.AssociationAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>AssociationEndRealization</value>
          </argument>
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:OOAdvantech.MetaDataRepository.AssociationEnd" ref="true" />
            </typeValue>
          </argument>
          <argument>
            <type api="T:OOAdvantech.MetaDataRepository.Roles" ref="false" />
            <enumValue>
              <field name="RoleA" />
            </enumValue>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>{B48643D9-F660-492C-852D-E150BBE16B37}</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.AssociationEndBehavior" ref="true" />
          <argument>
            <type api="T:OOAdvantech.MetaDataRepository.PersistencyFlag" ref="false" />
            <enumValue>
              <field name="OnConstruction" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.AssociationEndRealization.Synchronize(OOAdvantech.MetaDataRepository.MetaObject)">
      <apidata name="Synchronize" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:OOAdvantech.MetaDataRepository.MetaObject.Synchronize(OOAdvantech.MetaDataRepository.MetaObject)">
          <type api="T:OOAdvantech.MetaDataRepository.MetaObject" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="OriginMetaObject">
          <type api="T:OOAdvantech.MetaDataRepository.MetaObject" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.AssociationEndRealization" ref="true" />
      </containers>
    </api>
    <api id="F:OOAdvantech.MetaDataRepository.AssociationEndRealization.TransactionalMember">
      <apidata name="TransactionalMember" group="member" subgroup="field" />
      <memberdata visibility="public" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.AssociationEndRealization" ref="true" />
      </containers>
    </api>
    <api id="T:OOAdvantech.MetaDataRepository.AssociationType">
      <apidata name="AssociationType" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="F:OOAdvantech.MetaDataRepository.AssociationType.OneToMany" />
        <element api="F:OOAdvantech.MetaDataRepository.AssociationType.ManyToMany" />
        <element api="F:OOAdvantech.MetaDataRepository.AssociationType.OneToOne" />
        <element api="F:OOAdvantech.MetaDataRepository.AssociationType.ManyToOne" />
        <element api="F:OOAdvantech.MetaDataRepository.AssociationType.None" />
      </elements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
      </containers>
    </api>
    <api id="F:OOAdvantech.MetaDataRepository.AssociationType.ManyToMany">
      <apidata name="ManyToMany" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:OOAdvantech.MetaDataRepository.AssociationType" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.AssociationType" ref="false" />
      </containers>
    </api>
    <api id="F:OOAdvantech.MetaDataRepository.AssociationType.ManyToOne">
      <apidata name="ManyToOne" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:OOAdvantech.MetaDataRepository.AssociationType" ref="false" />
      </returns>
      <value>3</value>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.AssociationType" ref="false" />
      </containers>
    </api>
    <api id="F:OOAdvantech.MetaDataRepository.AssociationType.None">
      <apidata name="None" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:OOAdvantech.MetaDataRepository.AssociationType" ref="false" />
      </returns>
      <value>4</value>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.AssociationType" ref="false" />
      </containers>
    </api>
    <api id="F:OOAdvantech.MetaDataRepository.AssociationType.OneToMany">
      <apidata name="OneToMany" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:OOAdvantech.MetaDataRepository.AssociationType" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.AssociationType" ref="false" />
      </containers>
    </api>
    <api id="F:OOAdvantech.MetaDataRepository.AssociationType.OneToOne">
      <apidata name="OneToOne" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:OOAdvantech.MetaDataRepository.AssociationType" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.AssociationType" ref="false" />
      </containers>
    </api>
    <api id="T:OOAdvantech.MetaDataRepository.Asynchronous">
      <apidata name="Asynchronous" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:OOAdvantech.MetaDataRepository.Asynchronous.#ctor" />
        <element api="M:System.Attribute.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.Equals(System.Object)">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.GetHashCode">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.Match(System.Object)">
          <apidata name="Match" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.IsDefaultAttribute">
          <apidata name="IsDefaultAttribute" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)">
          <apidata name="GetTypeInfoCount" group="member" subgroup="method" />
          <memberdata visibility="private" />
          <proceduredata virtual="true" final="true" eii="true" />
          <parameters>
            <parameter name="pcTInfo" out="true">
              <referenceTo>
                <type api="T:System.UInt32" ref="false" />
              </referenceTo>
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Runtime.InteropServices._Attribute.GetTypeInfoCount(System.UInt32@)">
              <type api="T:System.Runtime.InteropServices._Attribute" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)">
          <apidata name="GetTypeInfo" group="member" subgroup="method" />
          <memberdata visibility="private" />
          <proceduredata virtual="true" final="true" eii="true" />
          <parameters>
            <parameter name="iTInfo">
              <type api="T:System.UInt32" ref="false" />
            </parameter>
            <parameter name="lcid">
              <type api="T:System.UInt32" ref="false" />
            </parameter>
            <parameter name="ppTInfo">
              <type api="T:System.IntPtr" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Runtime.InteropServices._Attribute.GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)">
              <type api="T:System.Runtime.InteropServices._Attribute" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)">
          <apidata name="GetIDsOfNames" group="member" subgroup="method" />
          <memberdata visibility="private" />
          <proceduredata virtual="true" final="true" eii="true" />
          <parameters>
            <parameter name="riid" in="true">
              <referenceTo>
                <type api="T:System.Guid" ref="false" />
              </referenceTo>
            </parameter>
            <parameter name="rgszNames">
              <type api="T:System.IntPtr" ref="false" />
            </parameter>
            <parameter name="cNames">
              <type api="T:System.UInt32" ref="false" />
            </parameter>
            <parameter name="lcid">
              <type api="T:System.UInt32" ref="false" />
            </parameter>
            <parameter name="rgDispId">
              <type api="T:System.IntPtr" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Runtime.InteropServices._Attribute.GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)">
              <type api="T:System.Runtime.InteropServices._Attribute" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)">
          <apidata name="Invoke" group="member" subgroup="method" />
          <memberdata visibility="private" />
          <proceduredata virtual="true" final="true" eii="true" />
          <parameters>
            <parameter name="dispIdMember">
              <type api="T:System.UInt32" ref="false" />
            </parameter>
            <parameter name="riid" in="true">
              <referenceTo>
                <type api="T:System.Guid" ref="false" />
              </referenceTo>
            </parameter>
            <parameter name="lcid">
              <type api="T:System.UInt32" ref="false" />
            </parameter>
            <parameter name="wFlags">
              <type api="T:System.Int16" ref="false" />
            </parameter>
            <parameter name="pDispParams">
              <type api="T:System.IntPtr" ref="false" />
            </parameter>
            <parameter name="pVarResult">
              <type api="T:System.IntPtr" ref="false" />
            </parameter>
            <parameter name="pExcepInfo">
              <type api="T:System.IntPtr" ref="false" />
            </parameter>
            <parameter name="puArgErr">
              <type api="T:System.IntPtr" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Runtime.InteropServices._Attribute.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)">
              <type api="T:System.Runtime.InteropServices._Attribute" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="P:System.Attribute.TypeId">
          <apidata name="TypeId" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_TypeId" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Method" />
              <field name="Event" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.Asynchronous.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Asynchronous" ref="true" />
      </containers>
    </api>
    <api id="T:OOAdvantech.MetaDataRepository.Attribute">
      <apidata name="Attribute" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:OOAdvantech.MetaDataRepository.StructuralFeature" ref="true" />
          <type api="T:OOAdvantech.MetaDataRepository.Feature" ref="true" />
          <type api="T:OOAdvantech.MetaDataRepository.MetaObject" ref="true" />
          <type api="T:System.MarshalByRefObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="F:OOAdvantech.MetaDataRepository.Attribute.ByValueTypes" />
        <element api="F:OOAdvantech.MetaDataRepository.Attribute._Setter" />
        <element api="F:OOAdvantech.MetaDataRepository.Attribute._Getter" />
        <element api="F:OOAdvantech.MetaDataRepository.Attribute.Persistent" />
        <element api="F:OOAdvantech.MetaDataRepository.Attribute.TransactionalMember" />
        <element api="M:OOAdvantech.MetaDataRepository.Attribute.AddAttributeRealization(OOAdvantech.MetaDataRepository.AttributeRealization)" />
        <element api="M:OOAdvantech.MetaDataRepository.Attribute.RemoveAttributeRealization(OOAdvantech.MetaDataRepository.AttributeRealization)" />
        <element api="M:OOAdvantech.MetaDataRepository.Attribute.ErrorCheck(System.Collections.ArrayList@)" />
        <element api="M:OOAdvantech.MetaDataRepository.Attribute.#ctor(System.String,OOAdvantech.MetaDataRepository.Classifier)" />
        <element api="M:OOAdvantech.MetaDataRepository.Attribute.#ctor" />
        <element api="M:OOAdvantech.MetaDataRepository.Attribute.Synchronize(OOAdvantech.MetaDataRepository.MetaObject)" />
        <element api="M:OOAdvantech.MetaDataRepository.Attribute.GetExtensionMetaObjects" />
        <element api="P:OOAdvantech.MetaDataRepository.Attribute.HasAttributeRealizations" />
        <element api="P:OOAdvantech.MetaDataRepository.Attribute.HasPersistentRealization" />
        <element api="P:OOAdvantech.MetaDataRepository.Attribute.AttributeRealizations" />
        <element api="P:OOAdvantech.MetaDataRepository.Attribute.Setter" />
        <element api="P:OOAdvantech.MetaDataRepository.Attribute.Getter" />
        <element api="P:OOAdvantech.MetaDataRepository.Attribute.IsPersistentValueType" />
        <element api="F:OOAdvantech.MetaDataRepository.StructuralFeature._ParameterizedType" />
        <element api="F:OOAdvantech.MetaDataRepository.StructuralFeature._Type" />
        <element api="P:OOAdvantech.MetaDataRepository.StructuralFeature.ParameterizedType" />
        <element api="P:OOAdvantech.MetaDataRepository.StructuralFeature.Type" />
        <element api="F:OOAdvantech.MetaDataRepository.Feature._IsStatic" />
        <element api="F:OOAdvantech.MetaDataRepository.Feature._Owner" />
        <element api="P:OOAdvantech.MetaDataRepository.Feature.IsStatic" />
        <element api="P:OOAdvantech.MetaDataRepository.Feature.Owner" />
        <element api="P:OOAdvantech.MetaDataRepository.Feature.ImplementationUnit" />
        <element api="P:OOAdvantech.MetaDataRepository.Feature.Namespace" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject._CaseInsensitiveName" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject._ImplementationUnit" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject.LockObject" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject.ReaderWriterLock" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject.Properties" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject._Name" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject.MetaObjectIDStream" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject._Identity" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject._ClientDependencies" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject._SupplierDependencies" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject._Namespace" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject.Visibility" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.MetaObjectChangeState" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.ShallowSynchronize(OOAdvantech.MetaDataRepository.MetaObject)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.AddDependency(System.String,OOAdvantech.MetaDataRepository.MetaObject)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.GetDynamicPropertiesAsXmlString" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.SetIdentity(OOAdvantech.MetaDataRepository.MetaObjectID)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.GetExtensionMetaObject(System.Type)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.SetNamespace(OOAdvantech.MetaDataRepository.Namespace)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.GetPropertyValue``1(System.String,System.String)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.GetPropertyValue(System.Type,System.String,System.String)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.PutPropertyValue(System.String,System.String,System.Object)" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.CaseInsensitiveName" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.OQLName" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.Name" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.FullName" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.OQLFullName" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.Identity" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.ClientDependencies" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.SupplierDependencies" />
        <element api="E:OOAdvantech.MetaDataRepository.MetaObject.Changed" />
        <element api="M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="cloneIdentity">
              <type api="T:System.Boolean" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.MarshalByRefObject" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.MarshalByRefObject" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.MarshalByRefObject.GetLifetimeService">
          <apidata name="GetLifetimeService" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.MarshalByRefObject" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Security.Permissions.SecurityPermissionAttribute" ref="true" />
              <argument>
                <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
                <enumValue>
                  <field name="LinkDemand" />
                </enumValue>
              </argument>
              <assignment name="Flags">
                <type api="T:System.Security.Permissions.SecurityPermissionFlag" ref="false" />
                <enumValue>
                  <field name="Infrastructure" />
                </enumValue>
              </assignment>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.MarshalByRefObject.InitializeLifetimeService">
          <apidata name="InitializeLifetimeService" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.MarshalByRefObject" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Security.Permissions.SecurityPermissionAttribute" ref="true" />
              <argument>
                <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
                <enumValue>
                  <field name="LinkDemand" />
                </enumValue>
              </argument>
              <assignment name="Flags">
                <type api="T:System.Security.Permissions.SecurityPermissionFlag" ref="false" />
                <enumValue>
                  <field name="Infrastructure" />
                </enumValue>
              </assignment>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.MarshalByRefObject.CreateObjRef(System.Type)">
          <apidata name="CreateObjRef" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="requestedType">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Runtime.Remoting.ObjRef" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.MarshalByRefObject" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Security.Permissions.SecurityPermissionAttribute" ref="true" />
              <argument>
                <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
                <enumValue>
                  <field name="LinkDemand" />
                </enumValue>
              </argument>
              <assignment name="Flags">
                <type api="T:System.Security.Permissions.SecurityPermissionFlag" ref="false" />
                <enumValue>
                  <field name="Infrastructure" />
                </enumValue>
              </assignment>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.Persistent" ref="true" />
        </attribute>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.BackwardCompatibilityID" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>{FB3940EF-0D72-4B54-A29E-ACB999EC452C}</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.Attribute.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Attribute" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.Attribute.#ctor(System.String,OOAdvantech.MetaDataRepository.Classifier)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="type">
          <type api="T:OOAdvantech.MetaDataRepository.Classifier" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Attribute" ref="true" />
      </containers>
    </api>
    <api id="F:OOAdvantech.MetaDataRepository.Attribute._Getter">
      <apidata name="_Getter" group="member" subgroup="field" />
      <memberdata visibility="family" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:OOAdvantech.MetaDataRepository.Operation" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Attribute" ref="true" />
      </containers>
    </api>
    <api id="F:OOAdvantech.MetaDataRepository.Attribute._Setter">
      <apidata name="_Setter" group="member" subgroup="field" />
      <memberdata visibility="family" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:OOAdvantech.MetaDataRepository.Operation" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Attribute" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.Attribute.AddAttributeRealization(OOAdvantech.MetaDataRepository.AttributeRealization)">
      <apidata name="AddAttributeRealization" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="attributeRealization">
          <type api="T:OOAdvantech.MetaDataRepository.AttributeRealization" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Attribute" ref="true" />
      </containers>
    </api>
    <api id="P:OOAdvantech.MetaDataRepository.Attribute.AttributeRealizations">
      <apidata name="AttributeRealizations" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_AttributeRealizations" />
      <returns>
        <type api="T:OOAdvantech.Collections.Generic.Set`1" ref="true">
          <specialization>
            <type api="T:OOAdvantech.MetaDataRepository.AttributeRealization" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Attribute" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.AssociationAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>AttributeRealization</value>
          </argument>
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:OOAdvantech.MetaDataRepository.AttributeRealization" ref="true" />
            </typeValue>
          </argument>
          <argument>
            <type api="T:OOAdvantech.MetaDataRepository.Roles" ref="false" />
            <enumValue>
              <field name="RoleB" />
            </enumValue>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>{226A9AEB-287E-44F3-99B3-8978546593BD}</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.RoleBMultiplicityRangeAttribute" ref="true" />
          <argument>
            <type api="T:System.UInt64" ref="false" />
            <value>0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.PersistentMember" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>_AttributeRealizations</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="F:OOAdvantech.MetaDataRepository.Attribute.ByValueTypes">
      <apidata name="ByValueTypes" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Collections.ArrayList" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Attribute" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.Attribute.ErrorCheck(System.Collections.ArrayList@)">
      <apidata name="ErrorCheck" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:OOAdvantech.MetaDataRepository.MetaObject.ErrorCheck(System.Collections.ArrayList@)">
          <type api="T:OOAdvantech.MetaDataRepository.MetaObject" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="errors">
          <referenceTo>
            <type api="T:System.Collections.ArrayList" ref="true" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Attribute" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.Attribute.GetExtensionMetaObjects">
      <apidata name="GetExtensionMetaObjects" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:OOAdvantech.MetaDataRepository.MetaObject.GetExtensionMetaObjects">
          <type api="T:OOAdvantech.MetaDataRepository.MetaObject" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Collections.ArrayList" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Attribute" ref="true" />
      </containers>
    </api>
    <api id="P:OOAdvantech.MetaDataRepository.Attribute.Getter">
      <apidata name="Getter" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Getter" />
      <setter name="set_Getter" />
      <returns>
        <type api="T:OOAdvantech.MetaDataRepository.Operation" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Attribute" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.RoleAMultiplicityRangeAttribute" ref="true" />
          <argument>
            <type api="T:System.UInt64" ref="false" />
            <value>0</value>
          </argument>
          <argument>
            <type api="T:System.UInt64" ref="false" />
            <value>1</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.RoleBMultiplicityRangeAttribute" ref="true" />
          <argument>
            <type api="T:System.UInt64" ref="false" />
            <value>0</value>
          </argument>
          <argument>
            <type api="T:System.UInt64" ref="false" />
            <value>1</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.AssociationAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>ReadAttributeAccess</value>
          </argument>
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:OOAdvantech.MetaDataRepository.Operation" ref="true" />
            </typeValue>
          </argument>
          <argument>
            <type api="T:OOAdvantech.MetaDataRepository.Roles" ref="false" />
            <enumValue>
              <field name="RoleA" />
            </enumValue>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>{4BC0657F-4390-443C-AC86-78C653A83EC3}</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.PersistentMember" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>_Getter</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:OOAdvantech.MetaDataRepository.Attribute.HasAttributeRealizations">
      <apidata name="HasAttributeRealizations" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_HasAttributeRealizations" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Attribute" ref="true" />
      </containers>
    </api>
    <api id="P:OOAdvantech.MetaDataRepository.Attribute.HasPersistentRealization">
      <apidata name="HasPersistentRealization" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_HasPersistentRealization" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Attribute" ref="true" />
      </containers>
    </api>
    <api id="P:OOAdvantech.MetaDataRepository.Attribute.IsPersistentValueType">
      <apidata name="IsPersistentValueType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsPersistentValueType" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Attribute" ref="true" />
      </containers>
    </api>
    <api id="F:OOAdvantech.MetaDataRepository.Attribute.Persistent">
      <apidata name="Persistent" group="member" subgroup="field" />
      <memberdata visibility="public" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Attribute" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.BackwardCompatibilityID" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>+12</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.PersistentMember" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.Attribute.RemoveAttributeRealization(OOAdvantech.MetaDataRepository.AttributeRealization)">
      <apidata name="RemoveAttributeRealization" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="attributeRealization">
          <type api="T:OOAdvantech.MetaDataRepository.AttributeRealization" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Attribute" ref="true" />
      </containers>
    </api>
    <api id="P:OOAdvantech.MetaDataRepository.Attribute.Setter">
      <apidata name="Setter" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Setter" />
      <setter name="set_Setter" />
      <returns>
        <type api="T:OOAdvantech.MetaDataRepository.Operation" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Attribute" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.AssociationAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>WriteAttributeAccess</value>
          </argument>
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:OOAdvantech.MetaDataRepository.Operation" ref="true" />
            </typeValue>
          </argument>
          <argument>
            <type api="T:OOAdvantech.MetaDataRepository.Roles" ref="false" />
            <enumValue>
              <field name="RoleA" />
            </enumValue>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>{BAF0B8DD-C6B7-4582-8A2D-16519F1F084E}</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.RoleBMultiplicityRangeAttribute" ref="true" />
          <argument>
            <type api="T:System.UInt64" ref="false" />
            <value>0</value>
          </argument>
          <argument>
            <type api="T:System.UInt64" ref="false" />
            <value>1</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.PersistentMember" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>_Setter</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.RoleAMultiplicityRangeAttribute" ref="true" />
          <argument>
            <type api="T:System.UInt64" ref="false" />
            <value>0</value>
          </argument>
          <argument>
            <type api="T:System.UInt64" ref="false" />
            <value>1</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.Attribute.Synchronize(OOAdvantech.MetaDataRepository.MetaObject)">
      <apidata name="Synchronize" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:OOAdvantech.MetaDataRepository.MetaObject.Synchronize(OOAdvantech.MetaDataRepository.MetaObject)">
          <type api="T:OOAdvantech.MetaDataRepository.MetaObject" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="originMetaObject">
          <type api="T:OOAdvantech.MetaDataRepository.MetaObject" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Attribute" ref="true" />
      </containers>
    </api>
    <api id="F:OOAdvantech.MetaDataRepository.Attribute.TransactionalMember">
      <apidata name="TransactionalMember" group="member" subgroup="field" />
      <memberdata visibility="public" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Attribute" ref="true" />
      </containers>
    </api>
    <api id="T:OOAdvantech.MetaDataRepository.AttributeRealization">
      <apidata name="AttributeRealization" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:OOAdvantech.MetaDataRepository.StructuralFeature" ref="true" />
          <type api="T:OOAdvantech.MetaDataRepository.Feature" ref="true" />
          <type api="T:OOAdvantech.MetaDataRepository.MetaObject" ref="true" />
          <type api="T:System.MarshalByRefObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="F:OOAdvantech.MetaDataRepository.AttributeRealization.TransactionalMember" />
        <element api="F:OOAdvantech.MetaDataRepository.AttributeRealization._Persistent" />
        <element api="F:OOAdvantech.MetaDataRepository.AttributeRealization._Specification" />
        <element api="M:OOAdvantech.MetaDataRepository.AttributeRealization.#ctor" />
        <element api="M:OOAdvantech.MetaDataRepository.AttributeRealization.#ctor(OOAdvantech.MetaDataRepository.Attribute)" />
        <element api="M:OOAdvantech.MetaDataRepository.AttributeRealization.GetExtensionMetaObjects" />
        <element api="M:OOAdvantech.MetaDataRepository.AttributeRealization.Synchronize(OOAdvantech.MetaDataRepository.MetaObject)" />
        <element api="P:OOAdvantech.MetaDataRepository.AttributeRealization.Type" />
        <element api="P:OOAdvantech.MetaDataRepository.AttributeRealization.ParameterizedType" />
        <element api="P:OOAdvantech.MetaDataRepository.AttributeRealization.Persistent" />
        <element api="P:OOAdvantech.MetaDataRepository.AttributeRealization.Specification" />
        <element api="F:OOAdvantech.MetaDataRepository.StructuralFeature._ParameterizedType" />
        <element api="F:OOAdvantech.MetaDataRepository.StructuralFeature._Type" />
        <element api="F:OOAdvantech.MetaDataRepository.Feature._IsStatic" />
        <element api="F:OOAdvantech.MetaDataRepository.Feature._Owner" />
        <element api="P:OOAdvantech.MetaDataRepository.Feature.IsStatic" />
        <element api="P:OOAdvantech.MetaDataRepository.Feature.Owner" />
        <element api="P:OOAdvantech.MetaDataRepository.Feature.ImplementationUnit" />
        <element api="P:OOAdvantech.MetaDataRepository.Feature.Namespace" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject._CaseInsensitiveName" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject._ImplementationUnit" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject.LockObject" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject.ReaderWriterLock" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject.Properties" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject._Name" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject.MetaObjectIDStream" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject._Identity" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject._ClientDependencies" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject._SupplierDependencies" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject._Namespace" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject.Visibility" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.MetaObjectChangeState" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.ShallowSynchronize(OOAdvantech.MetaDataRepository.MetaObject)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.AddDependency(System.String,OOAdvantech.MetaDataRepository.MetaObject)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.ErrorCheck(System.Collections.ArrayList@)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.GetDynamicPropertiesAsXmlString" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.SetIdentity(OOAdvantech.MetaDataRepository.MetaObjectID)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.GetExtensionMetaObject(System.Type)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.SetNamespace(OOAdvantech.MetaDataRepository.Namespace)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.GetPropertyValue``1(System.String,System.String)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.GetPropertyValue(System.Type,System.String,System.String)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.PutPropertyValue(System.String,System.String,System.Object)" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.CaseInsensitiveName" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.OQLName" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.Name" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.FullName" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.OQLFullName" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.Identity" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.ClientDependencies" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.SupplierDependencies" />
        <element api="E:OOAdvantech.MetaDataRepository.MetaObject.Changed" />
        <element api="M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="cloneIdentity">
              <type api="T:System.Boolean" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.MarshalByRefObject" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.MarshalByRefObject" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.MarshalByRefObject.GetLifetimeService">
          <apidata name="GetLifetimeService" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.MarshalByRefObject" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Security.Permissions.SecurityPermissionAttribute" ref="true" />
              <argument>
                <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
                <enumValue>
                  <field name="LinkDemand" />
                </enumValue>
              </argument>
              <assignment name="Flags">
                <type api="T:System.Security.Permissions.SecurityPermissionFlag" ref="false" />
                <enumValue>
                  <field name="Infrastructure" />
                </enumValue>
              </assignment>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.MarshalByRefObject.InitializeLifetimeService">
          <apidata name="InitializeLifetimeService" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.MarshalByRefObject" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Security.Permissions.SecurityPermissionAttribute" ref="true" />
              <argument>
                <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
                <enumValue>
                  <field name="LinkDemand" />
                </enumValue>
              </argument>
              <assignment name="Flags">
                <type api="T:System.Security.Permissions.SecurityPermissionFlag" ref="false" />
                <enumValue>
                  <field name="Infrastructure" />
                </enumValue>
              </assignment>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.MarshalByRefObject.CreateObjRef(System.Type)">
          <apidata name="CreateObjRef" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="requestedType">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Runtime.Remoting.ObjRef" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.MarshalByRefObject" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Security.Permissions.SecurityPermissionAttribute" ref="true" />
              <argument>
                <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
                <enumValue>
                  <field name="LinkDemand" />
                </enumValue>
              </argument>
              <assignment name="Flags">
                <type api="T:System.Security.Permissions.SecurityPermissionFlag" ref="false" />
                <enumValue>
                  <field name="Infrastructure" />
                </enumValue>
              </assignment>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.BackwardCompatibilityID" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>{3F854AFA-4903-437D-A556-206BB7D5C02E}</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.Persistent" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.AttributeRealization.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.AttributeRealization" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.AttributeRealization.#ctor(OOAdvantech.MetaDataRepository.Attribute)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="specification">
          <type api="T:OOAdvantech.MetaDataRepository.Attribute" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.AttributeRealization" ref="true" />
      </containers>
    </api>
    <api id="F:OOAdvantech.MetaDataRepository.AttributeRealization._Persistent">
      <apidata name="_Persistent" group="member" subgroup="field" />
      <memberdata visibility="family" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.AttributeRealization" ref="true" />
      </containers>
    </api>
    <api id="F:OOAdvantech.MetaDataRepository.AttributeRealization._Specification">
      <apidata name="_Specification" group="member" subgroup="field" />
      <memberdata visibility="family" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:OOAdvantech.MetaDataRepository.Attribute" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.AttributeRealization" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.AttributeRealization.GetExtensionMetaObjects">
      <apidata name="GetExtensionMetaObjects" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:OOAdvantech.MetaDataRepository.MetaObject.GetExtensionMetaObjects">
          <type api="T:OOAdvantech.MetaDataRepository.MetaObject" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Collections.ArrayList" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.AttributeRealization" ref="true" />
      </containers>
    </api>
    <api id="P:OOAdvantech.MetaDataRepository.AttributeRealization.ParameterizedType">
      <apidata name="ParameterizedType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:OOAdvantech.MetaDataRepository.StructuralFeature.ParameterizedType">
          <type api="T:OOAdvantech.MetaDataRepository.StructuralFeature" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" set="true" />
      <getter name="get_ParameterizedType" />
      <setter name="set_ParameterizedType" />
      <returns>
        <type api="T:OOAdvantech.MetaDataRepository.TemplateParameter" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.AttributeRealization" ref="true" />
      </containers>
    </api>
    <api id="P:OOAdvantech.MetaDataRepository.AttributeRealization.Persistent">
      <apidata name="Persistent" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Persistent" />
      <setter name="set_Persistent" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.AttributeRealization" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.BackwardCompatibilityID" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>+3</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.PersistentMember" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>_Persistent</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:OOAdvantech.MetaDataRepository.AttributeRealization.Specification">
      <apidata name="Specification" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Specification" />
      <setter name="set_Specification" />
      <returns>
        <type api="T:OOAdvantech.MetaDataRepository.Attribute" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.AttributeRealization" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.RoleAMultiplicityRangeAttribute" ref="true" />
          <argument>
            <type api="T:System.UInt64" ref="false" />
            <value>1</value>
          </argument>
          <argument>
            <type api="T:System.UInt64" ref="false" />
            <value>1</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.PersistentMember" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>_Specification</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.AssociationEndBehavior" ref="true" />
          <argument>
            <type api="T:OOAdvantech.MetaDataRepository.PersistencyFlag" ref="false" />
            <enumValue>
              <field name="OnConstruction" />
            </enumValue>
          </argument>
        </attribute>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.BackwardCompatibilityID" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>+1</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.AssociationAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>AttributeRealization</value>
          </argument>
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:OOAdvantech.MetaDataRepository.Attribute" ref="true" />
            </typeValue>
          </argument>
          <argument>
            <type api="T:OOAdvantech.MetaDataRepository.Roles" ref="false" />
            <enumValue>
              <field name="RoleA" />
            </enumValue>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>{226A9AEB-287E-44F3-99B3-8978546593BD}</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.AttributeRealization.Synchronize(OOAdvantech.MetaDataRepository.MetaObject)">
      <apidata name="Synchronize" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:OOAdvantech.MetaDataRepository.MetaObject.Synchronize(OOAdvantech.MetaDataRepository.MetaObject)">
          <type api="T:OOAdvantech.MetaDataRepository.MetaObject" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="OriginMetaObject">
          <type api="T:OOAdvantech.MetaDataRepository.MetaObject" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.AttributeRealization" ref="true" />
      </containers>
    </api>
    <api id="F:OOAdvantech.MetaDataRepository.AttributeRealization.TransactionalMember">
      <apidata name="TransactionalMember" group="member" subgroup="field" />
      <memberdata visibility="public" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.AttributeRealization" ref="true" />
      </containers>
    </api>
    <api id="P:OOAdvantech.MetaDataRepository.AttributeRealization.Type">
      <apidata name="Type" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:OOAdvantech.MetaDataRepository.StructuralFeature.Type">
          <type api="T:OOAdvantech.MetaDataRepository.StructuralFeature" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" set="true" />
      <getter name="get_Type" />
      <setter name="set_Type" />
      <returns>
        <type api="T:OOAdvantech.MetaDataRepository.Classifier" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.AttributeRealization" ref="true" />
      </containers>
    </api>
    <api id="T:OOAdvantech.MetaDataRepository.BackwardCompatibilityID">
      <apidata name="BackwardCompatibilityID" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:OOAdvantech.MetaDataRepository.BackwardCompatibilityID.#ctor(System.String)" />
        <element api="M:OOAdvantech.MetaDataRepository.BackwardCompatibilityID.ToString" />
        <element api="M:System.Attribute.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.Equals(System.Object)">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.GetHashCode">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.Match(System.Object)">
          <apidata name="Match" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.IsDefaultAttribute">
          <apidata name="IsDefaultAttribute" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)">
          <apidata name="GetTypeInfoCount" group="member" subgroup="method" />
          <memberdata visibility="private" />
          <proceduredata virtual="true" final="true" eii="true" />
          <parameters>
            <parameter name="pcTInfo" out="true">
              <referenceTo>
                <type api="T:System.UInt32" ref="false" />
              </referenceTo>
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Runtime.InteropServices._Attribute.GetTypeInfoCount(System.UInt32@)">
              <type api="T:System.Runtime.InteropServices._Attribute" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)">
          <apidata name="GetTypeInfo" group="member" subgroup="method" />
          <memberdata visibility="private" />
          <proceduredata virtual="true" final="true" eii="true" />
          <parameters>
            <parameter name="iTInfo">
              <type api="T:System.UInt32" ref="false" />
            </parameter>
            <parameter name="lcid">
              <type api="T:System.UInt32" ref="false" />
            </parameter>
            <parameter name="ppTInfo">
              <type api="T:System.IntPtr" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Runtime.InteropServices._Attribute.GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)">
              <type api="T:System.Runtime.InteropServices._Attribute" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)">
          <apidata name="GetIDsOfNames" group="member" subgroup="method" />
          <memberdata visibility="private" />
          <proceduredata virtual="true" final="true" eii="true" />
          <parameters>
            <parameter name="riid" in="true">
              <referenceTo>
                <type api="T:System.Guid" ref="false" />
              </referenceTo>
            </parameter>
            <parameter name="rgszNames">
              <type api="T:System.IntPtr" ref="false" />
            </parameter>
            <parameter name="cNames">
              <type api="T:System.UInt32" ref="false" />
            </parameter>
            <parameter name="lcid">
              <type api="T:System.UInt32" ref="false" />
            </parameter>
            <parameter name="rgDispId">
              <type api="T:System.IntPtr" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Runtime.InteropServices._Attribute.GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)">
              <type api="T:System.Runtime.InteropServices._Attribute" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)">
          <apidata name="Invoke" group="member" subgroup="method" />
          <memberdata visibility="private" />
          <proceduredata virtual="true" final="true" eii="true" />
          <parameters>
            <parameter name="dispIdMember">
              <type api="T:System.UInt32" ref="false" />
            </parameter>
            <parameter name="riid" in="true">
              <referenceTo>
                <type api="T:System.Guid" ref="false" />
              </referenceTo>
            </parameter>
            <parameter name="lcid">
              <type api="T:System.UInt32" ref="false" />
            </parameter>
            <parameter name="wFlags">
              <type api="T:System.Int16" ref="false" />
            </parameter>
            <parameter name="pDispParams">
              <type api="T:System.IntPtr" ref="false" />
            </parameter>
            <parameter name="pVarResult">
              <type api="T:System.IntPtr" ref="false" />
            </parameter>
            <parameter name="pExcepInfo">
              <type api="T:System.IntPtr" ref="false" />
            </parameter>
            <parameter name="puArgErr">
              <type api="T:System.IntPtr" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Runtime.InteropServices._Attribute.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)">
              <type api="T:System.Runtime.InteropServices._Attribute" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="P:System.Attribute.TypeId">
          <apidata name="TypeId" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_TypeId" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="All" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.BackwardCompatibilityID.#ctor(System.String)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="id">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.BackwardCompatibilityID" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.BackwardCompatibilityID.ToString">
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.ToString">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.BackwardCompatibilityID" ref="true" />
      </containers>
    </api>
    <api id="T:OOAdvantech.MetaDataRepository.BehavioralFeature">
      <apidata name="BehavioralFeature" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:OOAdvantech.MetaDataRepository.Feature" ref="true" />
          <type api="T:OOAdvantech.MetaDataRepository.MetaObject" ref="true" />
          <type api="T:System.MarshalByRefObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:OOAdvantech.MetaDataRepository.Method" ref="true" />
          <type api="T:OOAdvantech.MetaDataRepository.Operation" ref="true" />
        </descendents>
      </family>
      <elements>
        <element api="M:OOAdvantech.MetaDataRepository.BehavioralFeature.#ctor" />
        <element api="F:OOAdvantech.MetaDataRepository.Feature._IsStatic" />
        <element api="F:OOAdvantech.MetaDataRepository.Feature._Owner" />
        <element api="P:OOAdvantech.MetaDataRepository.Feature.IsStatic" />
        <element api="P:OOAdvantech.MetaDataRepository.Feature.Owner" />
        <element api="P:OOAdvantech.MetaDataRepository.Feature.ImplementationUnit" />
        <element api="P:OOAdvantech.MetaDataRepository.Feature.Namespace" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject._CaseInsensitiveName" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject._ImplementationUnit" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject.LockObject" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject.ReaderWriterLock" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject.Properties" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject._Name" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject.MetaObjectIDStream" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject._Identity" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject._ClientDependencies" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject._SupplierDependencies" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject._Namespace" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject.Visibility" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.MetaObjectChangeState" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.ShallowSynchronize(OOAdvantech.MetaDataRepository.MetaObject)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.AddDependency(System.String,OOAdvantech.MetaDataRepository.MetaObject)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.ErrorCheck(System.Collections.ArrayList@)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.GetDynamicPropertiesAsXmlString" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.SetIdentity(OOAdvantech.MetaDataRepository.MetaObjectID)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.Synchronize(OOAdvantech.MetaDataRepository.MetaObject)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.GetExtensionMetaObject(System.Type)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.GetExtensionMetaObjects" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.SetNamespace(OOAdvantech.MetaDataRepository.Namespace)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.GetPropertyValue``1(System.String,System.String)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.GetPropertyValue(System.Type,System.String,System.String)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.PutPropertyValue(System.String,System.String,System.Object)" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.CaseInsensitiveName" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.OQLName" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.Name" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.FullName" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.OQLFullName" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.Identity" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.ClientDependencies" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.SupplierDependencies" />
        <element api="E:OOAdvantech.MetaDataRepository.MetaObject.Changed" />
        <element api="M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="cloneIdentity">
              <type api="T:System.Boolean" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.MarshalByRefObject" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.MarshalByRefObject" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.MarshalByRefObject.GetLifetimeService">
          <apidata name="GetLifetimeService" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.MarshalByRefObject" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Security.Permissions.SecurityPermissionAttribute" ref="true" />
              <argument>
                <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
                <enumValue>
                  <field name="LinkDemand" />
                </enumValue>
              </argument>
              <assignment name="Flags">
                <type api="T:System.Security.Permissions.SecurityPermissionFlag" ref="false" />
                <enumValue>
                  <field name="Infrastructure" />
                </enumValue>
              </assignment>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.MarshalByRefObject.InitializeLifetimeService">
          <apidata name="InitializeLifetimeService" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.MarshalByRefObject" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Security.Permissions.SecurityPermissionAttribute" ref="true" />
              <argument>
                <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
                <enumValue>
                  <field name="LinkDemand" />
                </enumValue>
              </argument>
              <assignment name="Flags">
                <type api="T:System.Security.Permissions.SecurityPermissionFlag" ref="false" />
                <enumValue>
                  <field name="Infrastructure" />
                </enumValue>
              </assignment>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.MarshalByRefObject.CreateObjRef(System.Type)">
          <apidata name="CreateObjRef" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="requestedType">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Runtime.Remoting.ObjRef" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.MarshalByRefObject" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Security.Permissions.SecurityPermissionAttribute" ref="true" />
              <argument>
                <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
                <enumValue>
                  <field name="LinkDemand" />
                </enumValue>
              </argument>
              <assignment name="Flags">
                <type api="T:System.Security.Permissions.SecurityPermissionFlag" ref="false" />
                <enumValue>
                  <field name="Infrastructure" />
                </enumValue>
              </assignment>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.BehavioralFeature.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.BehavioralFeature" ref="true" />
      </containers>
    </api>
    <api id="T:OOAdvantech.MetaDataRepository.BuildAssemblyMetadata">
      <apidata name="BuildAssemblyMetadata" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:OOAdvantech.MetaDataRepository.BuildAssemblyMetadata.#ctor" />
        <element api="M:System.Attribute.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.Equals(System.Object)">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.GetHashCode">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.Match(System.Object)">
          <apidata name="Match" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.IsDefaultAttribute">
          <apidata name="IsDefaultAttribute" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)">
          <apidata name="GetTypeInfoCount" group="member" subgroup="method" />
          <memberdata visibility="private" />
          <proceduredata virtual="true" final="true" eii="true" />
          <parameters>
            <parameter name="pcTInfo" out="true">
              <referenceTo>
                <type api="T:System.UInt32" ref="false" />
              </referenceTo>
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Runtime.InteropServices._Attribute.GetTypeInfoCount(System.UInt32@)">
              <type api="T:System.Runtime.InteropServices._Attribute" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)">
          <apidata name="GetTypeInfo" group="member" subgroup="method" />
          <memberdata visibility="private" />
          <proceduredata virtual="true" final="true" eii="true" />
          <parameters>
            <parameter name="iTInfo">
              <type api="T:System.UInt32" ref="false" />
            </parameter>
            <parameter name="lcid">
              <type api="T:System.UInt32" ref="false" />
            </parameter>
            <parameter name="ppTInfo">
              <type api="T:System.IntPtr" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Runtime.InteropServices._Attribute.GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)">
              <type api="T:System.Runtime.InteropServices._Attribute" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)">
          <apidata name="GetIDsOfNames" group="member" subgroup="method" />
          <memberdata visibility="private" />
          <proceduredata virtual="true" final="true" eii="true" />
          <parameters>
            <parameter name="riid" in="true">
              <referenceTo>
                <type api="T:System.Guid" ref="false" />
              </referenceTo>
            </parameter>
            <parameter name="rgszNames">
              <type api="T:System.IntPtr" ref="false" />
            </parameter>
            <parameter name="cNames">
              <type api="T:System.UInt32" ref="false" />
            </parameter>
            <parameter name="lcid">
              <type api="T:System.UInt32" ref="false" />
            </parameter>
            <parameter name="rgDispId">
              <type api="T:System.IntPtr" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Runtime.InteropServices._Attribute.GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)">
              <type api="T:System.Runtime.InteropServices._Attribute" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)">
          <apidata name="Invoke" group="member" subgroup="method" />
          <memberdata visibility="private" />
          <proceduredata virtual="true" final="true" eii="true" />
          <parameters>
            <parameter name="dispIdMember">
              <type api="T:System.UInt32" ref="false" />
            </parameter>
            <parameter name="riid" in="true">
              <referenceTo>
                <type api="T:System.Guid" ref="false" />
              </referenceTo>
            </parameter>
            <parameter name="lcid">
              <type api="T:System.UInt32" ref="false" />
            </parameter>
            <parameter name="wFlags">
              <type api="T:System.Int16" ref="false" />
            </parameter>
            <parameter name="pDispParams">
              <type api="T:System.IntPtr" ref="false" />
            </parameter>
            <parameter name="pVarResult">
              <type api="T:System.IntPtr" ref="false" />
            </parameter>
            <parameter name="pExcepInfo">
              <type api="T:System.IntPtr" ref="false" />
            </parameter>
            <parameter name="puArgErr">
              <type api="T:System.IntPtr" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Runtime.InteropServices._Attribute.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)">
              <type api="T:System.Runtime.InteropServices._Attribute" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="P:System.Attribute.TypeId">
          <apidata name="TypeId" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_TypeId" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Assembly" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.BuildAssemblyMetadata.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.BuildAssemblyMetadata" ref="true" />
      </containers>
    </api>
    <api id="T:OOAdvantech.MetaDataRepository.Class">
      <apidata name="Class" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:OOAdvantech.MetaDataRepository.Classifier" ref="true" />
          <type api="T:OOAdvantech.MetaDataRepository.Namespace" ref="true" />
          <type api="T:OOAdvantech.MetaDataRepository.MetaObject" ref="true" />
          <type api="T:System.MarshalByRefObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:OOAdvantech.MetaDataRepository.InterfaceImplementor" ref="true" />
      </implements>
      <elements>
        <element api="F:OOAdvantech.MetaDataRepository.Class._StorageCells" />
        <element api="F:OOAdvantech.MetaDataRepository.Class._Abstract" />
        <element api="F:OOAdvantech.MetaDataRepository.Class._Persistent" />
        <element api="F:OOAdvantech.MetaDataRepository.Class._Realizations" />
        <element api="M:OOAdvantech.MetaDataRepository.Class.GetAllGeneralClasifiers" />
        <element api="M:OOAdvantech.MetaDataRepository.Class.GetGeneralClasifiers" />
        <element api="M:OOAdvantech.MetaDataRepository.Class.IsA(OOAdvantech.MetaDataRepository.Classifier)" />
        <element api="M:OOAdvantech.MetaDataRepository.Class.HasReferentialIntegrity(OOAdvantech.MetaDataRepository.AssociationEnd)" />
        <element api="M:OOAdvantech.MetaDataRepository.Class.IsLazyFetching(OOAdvantech.MetaDataRepository.AssociationEnd)" />
        <element api="M:OOAdvantech.MetaDataRepository.Class.GetAttributeRealization(OOAdvantech.MetaDataRepository.Attribute)" />
        <element api="M:OOAdvantech.MetaDataRepository.Class.IsCascadeDelete(OOAdvantech.MetaDataRepository.AssociationEnd)" />
        <element api="M:OOAdvantech.MetaDataRepository.Class.GetFeature(System.String,System.Boolean)" />
        <element api="M:OOAdvantech.MetaDataRepository.Class.IsPersistent(OOAdvantech.MetaDataRepository.Attribute)" />
        <element api="M:OOAdvantech.MetaDataRepository.Class.IsPersistent(OOAdvantech.MetaDataRepository.AssociationEnd)" />
        <element api="M:OOAdvantech.MetaDataRepository.Class.HasReferentialIntegrityRelations" />
        <element api="M:OOAdvantech.MetaDataRepository.Class.GetAllInterfaces" />
        <element api="M:OOAdvantech.MetaDataRepository.Class.GetInterfaces" />
        <element api="M:OOAdvantech.MetaDataRepository.Class.RefreshClassHierarchyCollections" />
        <element api="M:OOAdvantech.MetaDataRepository.Class.Synchronize(OOAdvantech.MetaDataRepository.MetaObject)" />
        <element api="M:OOAdvantech.MetaDataRepository.Class.ErrorCheck(System.Collections.ArrayList@)" />
        <element api="M:OOAdvantech.MetaDataRepository.Class.#ctor" />
        <element api="M:OOAdvantech.MetaDataRepository.Class.GetRoles(System.Boolean)" />
        <element api="M:OOAdvantech.MetaDataRepository.Class.GetOperations(System.Boolean)" />
        <element api="M:OOAdvantech.MetaDataRepository.Classifier.GetOperations(System.String)" />
        <element api="M:OOAdvantech.MetaDataRepository.Classifier.GetOperations(System.String,System.Boolean)" />
        <element api="M:OOAdvantech.MetaDataRepository.Class.GetAttributes(System.Boolean)" />
        <element api="M:OOAdvantech.MetaDataRepository.Class.GetPersistentAssociateRoles" />
        <element api="M:OOAdvantech.MetaDataRepository.Class.GetPersistentAttributes" />
        <element api="M:OOAdvantech.MetaDataRepository.Class.GetAssociateRoles(System.Boolean)" />
        <element api="M:OOAdvantech.MetaDataRepository.Class.AddRealizeRel(System.String,OOAdvantech.MetaDataRepository.Interface)" />
        <element api="M:OOAdvantech.MetaDataRepository.Class.RemoveMethod(OOAdvantech.MetaDataRepository.Method)" />
        <element api="M:OOAdvantech.MetaDataRepository.Class.RemoveAttributeRealization(OOAdvantech.MetaDataRepository.AttributeRealization)" />
        <element api="M:OOAdvantech.MetaDataRepository.Class.RemoveAssociationEndRealization(OOAdvantech.MetaDataRepository.AssociationEndRealization)" />
        <element api="M:OOAdvantech.MetaDataRepository.Class.RemoveRealizeRel(OOAdvantech.MetaDataRepository.Realization)" />
        <element api="M:OOAdvantech.MetaDataRepository.Class.RemoveNestedClass(OOAdvantech.MetaDataRepository.Class)" />
        <element api="M:OOAdvantech.MetaDataRepository.Class.GetAllNestedClasses" />
        <element api="M:OOAdvantech.MetaDataRepository.Class.AddNestedClass(System.String)" />
        <element api="M:OOAdvantech.MetaDataRepository.Class.AddMethod(OOAdvantech.MetaDataRepository.Operation)" />
        <element api="M:OOAdvantech.MetaDataRepository.Class.AddAttributeRealization(OOAdvantech.MetaDataRepository.Attribute)" />
        <element api="M:OOAdvantech.MetaDataRepository.Class.AddAssociationEndRealization(OOAdvantech.MetaDataRepository.AssociationEnd)" />
        <element api="P:OOAdvantech.MetaDataRepository.Class.ObjectActivation" />
        <element api="P:OOAdvantech.MetaDataRepository.Class.StorageCellsOfThisType" />
        <element api="P:OOAdvantech.MetaDataRepository.Class.StorageCells" />
        <element api="P:OOAdvantech.MetaDataRepository.Class.ClassHierarchyLinkAssociation" />
        <element api="P:OOAdvantech.MetaDataRepository.Class.Abstract" />
        <element api="P:OOAdvantech.MetaDataRepository.Class.Persistent" />
        <element api="P:OOAdvantech.MetaDataRepository.Class.Realizations" />
        <element api="P:OOAdvantech.MetaDataRepository.Class.Methods" />
        <element api="P:OOAdvantech.MetaDataRepository.Class.NestedClasses" />
        <element api="F:OOAdvantech.MetaDataRepository.Classifier._TemplateBinding" />
        <element api="F:OOAdvantech.MetaDataRepository.Classifier._LinkAssociation" />
        <element api="F:OOAdvantech.MetaDataRepository.Classifier.ClassifierHierarchyClassifiers" />
        <element api="F:OOAdvantech.MetaDataRepository.Classifier._Generalizations" />
        <element api="F:OOAdvantech.MetaDataRepository.Classifier._OwnedTemplateSignature" />
        <element api="F:OOAdvantech.MetaDataRepository.Classifier.ClassHierarchyAssociateRoles" />
        <element api="F:OOAdvantech.MetaDataRepository.Classifier.ClassHierarchyRoles" />
        <element api="F:OOAdvantech.MetaDataRepository.Classifier.ClassHierarchyAttributes" />
        <element api="F:OOAdvantech.MetaDataRepository.Classifier._Specializations" />
        <element api="F:OOAdvantech.MetaDataRepository.Classifier._Roles" />
        <element api="F:OOAdvantech.MetaDataRepository.Classifier._Features" />
        <element api="M:OOAdvantech.MetaDataRepository.Classifier.GetExtensionMetaObject(System.Type)" />
        <element api="M:OOAdvantech.MetaDataRepository.Classifier.ToString" />
        <element api="M:OOAdvantech.MetaDataRepository.Classifier.GetAllSpecializeClasifiers" />
        <element api="M:OOAdvantech.MetaDataRepository.Classifier.BuildCaseInsensitiveNames" />
        <element api="M:OOAdvantech.MetaDataRepository.Classifier.RemoveAssociation(OOAdvantech.MetaDataRepository.Association)" />
        <element api="M:OOAdvantech.MetaDataRepository.Classifier.RemoveAttribute(OOAdvantech.MetaDataRepository.Attribute)" />
        <element api="M:OOAdvantech.MetaDataRepository.Classifier.RemoveOperation(OOAdvantech.MetaDataRepository.Operation)" />
        <element api="M:OOAdvantech.MetaDataRepository.Classifier.GetAssignedComponents" />
        <element api="M:OOAdvantech.MetaDataRepository.Classifier.GetSpecializedClasifiers" />
        <element api="M:OOAdvantech.MetaDataRepository.Classifier.AddAssociation(System.String,OOAdvantech.MetaDataRepository.Roles,OOAdvantech.MetaDataRepository.Classifier,System.String)" />
        <element api="M:OOAdvantech.MetaDataRepository.Classifier.AddAttribute(System.String,OOAdvantech.MetaDataRepository.Classifier,System.String)" />
        <element api="M:OOAdvantech.MetaDataRepository.Classifier.AddOperation(System.String,OOAdvantech.MetaDataRepository.Classifier)" />
        <element api="M:OOAdvantech.MetaDataRepository.Classifier.RemoveGeneralization(OOAdvantech.MetaDataRepository.Generalization)" />
        <element api="M:OOAdvantech.MetaDataRepository.Classifier.AddGeneralization(System.String,OOAdvantech.MetaDataRepository.Classifier)" />
        <element api="M:OOAdvantech.MetaDataRepository.Classifier.AddRole(OOAdvantech.MetaDataRepository.AssociationEnd)" />
        <element api="M:OOAdvantech.MetaDataRepository.Classifier.RemoveRole(OOAdvantech.MetaDataRepository.AssociationEnd)" />
        <element api="M:OOAdvantech.MetaDataRepository.Classifier.GetRealizedAttributes" />
        <element api="M:OOAdvantech.MetaDataRepository.Classifier.GetOperation(System.String,System.String[],System.Boolean)" />
        <element api="M:OOAdvantech.MetaDataRepository.Classifier.GetRole(System.String)" />
        <element api="P:OOAdvantech.MetaDataRepository.Classifier.IsTemplate" />
        <element api="P:OOAdvantech.MetaDataRepository.Classifier.IsTemplateInstantiation" />
        <element api="P:OOAdvantech.MetaDataRepository.Classifier.Constractors" />
        <element api="P:OOAdvantech.MetaDataRepository.Classifier.TemplateBinding" />
        <element api="P:OOAdvantech.MetaDataRepository.Classifier.LinkAssociation" />
        <element api="P:OOAdvantech.MetaDataRepository.Classifier.Generalizations" />
        <element api="P:OOAdvantech.MetaDataRepository.Classifier.IsBindedClassifier" />
        <element api="P:OOAdvantech.MetaDataRepository.Classifier.ContainsTemplateParameter" />
        <element api="P:OOAdvantech.MetaDataRepository.Classifier.OwnedTemplateSignature" />
        <element api="P:OOAdvantech.MetaDataRepository.Classifier.Specializations" />
        <element api="P:OOAdvantech.MetaDataRepository.Classifier.Roles" />
        <element api="P:OOAdvantech.MetaDataRepository.Classifier.Features" />
        <element api="F:OOAdvantech.MetaDataRepository.Namespace._OwnedElements" />
        <element api="M:OOAdvantech.MetaDataRepository.Namespace.MakeNameUnaryInNamesapce(OOAdvantech.MetaDataRepository.MetaObject)" />
        <element api="M:OOAdvantech.MetaDataRepository.Namespace.GetExtensionMetaObjects" />
        <element api="M:OOAdvantech.MetaDataRepository.Namespace.AddOwnedElement(OOAdvantech.MetaDataRepository.MetaObject)" />
        <element api="M:OOAdvantech.MetaDataRepository.Namespace.RemoveOwnedElement(OOAdvantech.MetaDataRepository.MetaObject)" />
        <element api="P:OOAdvantech.MetaDataRepository.Namespace.OwnedElements" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject._CaseInsensitiveName" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject._ImplementationUnit" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject.LockObject" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject.ReaderWriterLock" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject.Properties" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject._Name" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject.MetaObjectIDStream" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject._Identity" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject._ClientDependencies" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject._SupplierDependencies" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject._Namespace" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject.Visibility" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.MetaObjectChangeState" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.ShallowSynchronize(OOAdvantech.MetaDataRepository.MetaObject)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.AddDependency(System.String,OOAdvantech.MetaDataRepository.MetaObject)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.GetDynamicPropertiesAsXmlString" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.SetIdentity(OOAdvantech.MetaDataRepository.MetaObjectID)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.SetNamespace(OOAdvantech.MetaDataRepository.Namespace)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.GetPropertyValue``1(System.String,System.String)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.GetPropertyValue(System.Type,System.String,System.String)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.PutPropertyValue(System.String,System.String,System.Object)" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.CaseInsensitiveName" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.ImplementationUnit" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.OQLName" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.Name" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.FullName" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.OQLFullName" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.Identity" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.ClientDependencies" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.SupplierDependencies" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.Namespace" />
        <element api="E:OOAdvantech.MetaDataRepository.MetaObject.Changed" />
        <element api="M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="cloneIdentity">
              <type api="T:System.Boolean" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.MarshalByRefObject" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.MarshalByRefObject" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.MarshalByRefObject.GetLifetimeService">
          <apidata name="GetLifetimeService" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.MarshalByRefObject" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Security.Permissions.SecurityPermissionAttribute" ref="true" />
              <argument>
                <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
                <enumValue>
                  <field name="LinkDemand" />
                </enumValue>
              </argument>
              <assignment name="Flags">
                <type api="T:System.Security.Permissions.SecurityPermissionFlag" ref="false" />
                <enumValue>
                  <field name="Infrastructure" />
                </enumValue>
              </assignment>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.MarshalByRefObject.InitializeLifetimeService">
          <apidata name="InitializeLifetimeService" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.MarshalByRefObject" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Security.Permissions.SecurityPermissionAttribute" ref="true" />
              <argument>
                <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
                <enumValue>
                  <field name="LinkDemand" />
                </enumValue>
              </argument>
              <assignment name="Flags">
                <type api="T:System.Security.Permissions.SecurityPermissionFlag" ref="false" />
                <enumValue>
                  <field name="Infrastructure" />
                </enumValue>
              </assignment>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.MarshalByRefObject.CreateObjRef(System.Type)">
          <apidata name="CreateObjRef" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="requestedType">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Runtime.Remoting.ObjRef" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.MarshalByRefObject" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Security.Permissions.SecurityPermissionAttribute" ref="true" />
              <argument>
                <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
                <enumValue>
                  <field name="LinkDemand" />
                </enumValue>
              </argument>
              <assignment name="Flags">
                <type api="T:System.Security.Permissions.SecurityPermissionFlag" ref="false" />
                <enumValue>
                  <field name="Infrastructure" />
                </enumValue>
              </assignment>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.BackwardCompatibilityID" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>{75479CE2-6FF0-4B75-9B62-F0190C9EA6E6}</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.Persistent" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.Class.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Class" ref="true" />
      </containers>
    </api>
    <api id="F:OOAdvantech.MetaDataRepository.Class._Abstract">
      <apidata name="_Abstract" group="member" subgroup="field" />
      <memberdata visibility="family" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Class" ref="true" />
      </containers>
    </api>
    <api id="F:OOAdvantech.MetaDataRepository.Class._Persistent">
      <apidata name="_Persistent" group="member" subgroup="field" />
      <memberdata visibility="family" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Class" ref="true" />
      </containers>
    </api>
    <api id="F:OOAdvantech.MetaDataRepository.Class._Realizations">
      <apidata name="_Realizations" group="member" subgroup="field" />
      <memberdata visibility="family" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:OOAdvantech.Collections.Generic.Set`1" ref="true">
          <specialization>
            <type api="T:OOAdvantech.MetaDataRepository.Realization" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Class" ref="true" />
      </containers>
    </api>
    <api id="F:OOAdvantech.MetaDataRepository.Class._StorageCells">
      <apidata name="_StorageCells" group="member" subgroup="field" />
      <memberdata visibility="family" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:OOAdvantech.Collections.Generic.Set`1" ref="true">
          <specialization>
            <type api="T:OOAdvantech.MetaDataRepository.StorageCell" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Class" ref="true" />
      </containers>
    </api>
    <api id="P:OOAdvantech.MetaDataRepository.Class.Abstract">
      <apidata name="Abstract" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Abstract" />
      <setter name="set_Abstract" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Class" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.PersistentMember" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>_Abstract</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.BackwardCompatibilityID" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>+13</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.Class.AddAssociationEndRealization(OOAdvantech.MetaDataRepository.AssociationEnd)">
      <apidata name="AddAssociationEndRealization" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="specification">
          <type api="T:OOAdvantech.MetaDataRepository.AssociationEnd" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:OOAdvantech.MetaDataRepository.AssociationEndRealization" ref="true" />
      </returns>
      <implements>
        <member api="M:OOAdvantech.MetaDataRepository.InterfaceImplementor.AddAssociationEndRealization(OOAdvantech.MetaDataRepository.AssociationEnd)">
          <type api="T:OOAdvantech.MetaDataRepository.InterfaceImplementor" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Class" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.Class.AddAttributeRealization(OOAdvantech.MetaDataRepository.Attribute)">
      <apidata name="AddAttributeRealization" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="specification">
          <type api="T:OOAdvantech.MetaDataRepository.Attribute" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:OOAdvantech.MetaDataRepository.AttributeRealization" ref="true" />
      </returns>
      <implements>
        <member api="M:OOAdvantech.MetaDataRepository.InterfaceImplementor.AddAttributeRealization(OOAdvantech.MetaDataRepository.Attribute)">
          <type api="T:OOAdvantech.MetaDataRepository.InterfaceImplementor" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Class" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.Class.AddMethod(OOAdvantech.MetaDataRepository.Operation)">
      <apidata name="AddMethod" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="specification">
          <type api="T:OOAdvantech.MetaDataRepository.Operation" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:OOAdvantech.MetaDataRepository.Method" ref="true" />
      </returns>
      <implements>
        <member api="M:OOAdvantech.MetaDataRepository.InterfaceImplementor.AddMethod(OOAdvantech.MetaDataRepository.Operation)">
          <type api="T:OOAdvantech.MetaDataRepository.InterfaceImplementor" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Class" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.Class.AddNestedClass(System.String)">
      <apidata name="AddNestedClass" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="Name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:OOAdvantech.MetaDataRepository.Class" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Class" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.Class.AddRealizeRel(System.String,OOAdvantech.MetaDataRepository.Interface)">
      <apidata name="AddRealizeRel" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="relationName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="_interface">
          <type api="T:OOAdvantech.MetaDataRepository.Interface" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:OOAdvantech.MetaDataRepository.Realization" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Class" ref="true" />
      </containers>
    </api>
    <api id="P:OOAdvantech.MetaDataRepository.Class.ClassHierarchyLinkAssociation">
      <apidata name="ClassHierarchyLinkAssociation" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:OOAdvantech.MetaDataRepository.Classifier.ClassHierarchyLinkAssociation">
          <type api="T:OOAdvantech.MetaDataRepository.Classifier" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_ClassHierarchyLinkAssociation" />
      <returns>
        <type api="T:OOAdvantech.MetaDataRepository.Association" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Class" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.Class.ErrorCheck(System.Collections.ArrayList@)">
      <apidata name="ErrorCheck" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:OOAdvantech.MetaDataRepository.Classifier.ErrorCheck(System.Collections.ArrayList@)">
          <type api="T:OOAdvantech.MetaDataRepository.Classifier" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="errors">
          <referenceTo>
            <type api="T:System.Collections.ArrayList" ref="true" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Class" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.Class.GetAllGeneralClasifiers">
      <apidata name="GetAllGeneralClasifiers" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:OOAdvantech.MetaDataRepository.Classifier.GetAllGeneralClasifiers">
          <type api="T:OOAdvantech.MetaDataRepository.Classifier" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:OOAdvantech.Collections.Generic.Set`1" ref="true">
          <specialization>
            <type api="T:OOAdvantech.MetaDataRepository.Classifier" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Class" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.Class.GetAllInterfaces">
      <apidata name="GetAllInterfaces" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:OOAdvantech.Collections.Generic.Set`1" ref="true">
          <specialization>
            <type api="T:OOAdvantech.MetaDataRepository.Interface" ref="true" />
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="M:OOAdvantech.MetaDataRepository.InterfaceImplementor.GetAllInterfaces">
          <type api="T:OOAdvantech.MetaDataRepository.InterfaceImplementor" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Class" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.Class.GetAllNestedClasses">
      <apidata name="GetAllNestedClasses" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:OOAdvantech.Collections.Generic.Set`1" ref="true">
          <specialization>
            <type api="T:OOAdvantech.MetaDataRepository.Classifier" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Class" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.Class.GetAssociateRoles(System.Boolean)">
      <apidata name="GetAssociateRoles" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:OOAdvantech.MetaDataRepository.Classifier.GetAssociateRoles(System.Boolean)">
          <type api="T:OOAdvantech.MetaDataRepository.Classifier" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="Inherit">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:OOAdvantech.Collections.Generic.Set`1" ref="true">
          <specialization>
            <type api="T:OOAdvantech.MetaDataRepository.AssociationEnd" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Class" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.Class.GetAttributeRealization(OOAdvantech.MetaDataRepository.Attribute)">
      <apidata name="GetAttributeRealization" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="attribute">
          <type api="T:OOAdvantech.MetaDataRepository.Attribute" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:OOAdvantech.MetaDataRepository.AttributeRealization" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Class" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.Class.GetAttributes(System.Boolean)">
      <apidata name="GetAttributes" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:OOAdvantech.MetaDataRepository.Classifier.GetAttributes(System.Boolean)">
          <type api="T:OOAdvantech.MetaDataRepository.Classifier" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="Inherit">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:OOAdvantech.Collections.Generic.Set`1" ref="true">
          <specialization>
            <type api="T:OOAdvantech.MetaDataRepository.Attribute" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Class" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.Class.GetFeature(System.String,System.Boolean)">
      <apidata name="GetFeature" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:OOAdvantech.MetaDataRepository.Classifier.GetFeature(System.String,System.Boolean)">
          <type api="T:OOAdvantech.MetaDataRepository.Classifier" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="identity">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="inherit">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:OOAdvantech.MetaDataRepository.Feature" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Class" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.Class.GetGeneralClasifiers">
      <apidata name="GetGeneralClasifiers" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:OOAdvantech.MetaDataRepository.Classifier.GetGeneralClasifiers">
          <type api="T:OOAdvantech.MetaDataRepository.Classifier" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:OOAdvantech.Collections.Generic.Set`1" ref="true">
          <specialization>
            <type api="T:OOAdvantech.MetaDataRepository.Classifier" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Class" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.Class.GetInterfaces">
      <apidata name="GetInterfaces" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:OOAdvantech.Collections.Generic.Set`1" ref="true">
          <specialization>
            <type api="T:OOAdvantech.MetaDataRepository.Interface" ref="true" />
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="M:OOAdvantech.MetaDataRepository.InterfaceImplementor.GetInterfaces">
          <type api="T:OOAdvantech.MetaDataRepository.InterfaceImplementor" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Class" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.Class.GetOperations(System.Boolean)">
      <apidata name="GetOperations" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:OOAdvantech.MetaDataRepository.Classifier.GetOperations(System.Boolean)">
          <type api="T:OOAdvantech.MetaDataRepository.Classifier" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="Inherit">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:OOAdvantech.Collections.Generic.Set`1" ref="true">
          <specialization>
            <type api="T:OOAdvantech.MetaDataRepository.Operation" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Class" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.Class.GetPersistentAssociateRoles">
      <apidata name="GetPersistentAssociateRoles" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Collections.Generic.List`1" ref="true">
          <specialization>
            <type api="T:OOAdvantech.MetaDataRepository.AssociationEnd" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Class" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.Class.GetPersistentAttributes">
      <apidata name="GetPersistentAttributes" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Collections.Generic.List`1" ref="true">
          <specialization>
            <type api="T:OOAdvantech.MetaDataRepository.Attribute" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Class" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.Class.GetRoles(System.Boolean)">
      <apidata name="GetRoles" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:OOAdvantech.MetaDataRepository.Classifier.GetRoles(System.Boolean)">
          <type api="T:OOAdvantech.MetaDataRepository.Classifier" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="Inherit">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:OOAdvantech.Collections.Generic.Set`1" ref="true">
          <specialization>
            <type api="T:OOAdvantech.MetaDataRepository.AssociationEnd" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Class" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.Class.HasReferentialIntegrity(OOAdvantech.MetaDataRepository.AssociationEnd)">
      <apidata name="HasReferentialIntegrity" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="associationEnd">
          <type api="T:OOAdvantech.MetaDataRepository.AssociationEnd" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Class" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.Class.HasReferentialIntegrityRelations">
      <apidata name="HasReferentialIntegrityRelations" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Class" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.Class.IsA(OOAdvantech.MetaDataRepository.Classifier)">
      <apidata name="IsA" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:OOAdvantech.MetaDataRepository.Classifier.IsA(OOAdvantech.MetaDataRepository.Classifier)">
          <type api="T:OOAdvantech.MetaDataRepository.Classifier" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="classifier">
          <type api="T:OOAdvantech.MetaDataRepository.Classifier" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Class" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.Class.IsCascadeDelete(OOAdvantech.MetaDataRepository.AssociationEnd)">
      <apidata name="IsCascadeDelete" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="associationEnd">
          <type api="T:OOAdvantech.MetaDataRepository.AssociationEnd" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Class" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.Class.IsLazyFetching(OOAdvantech.MetaDataRepository.AssociationEnd)">
      <apidata name="IsLazyFetching" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="associationEnd">
          <type api="T:OOAdvantech.MetaDataRepository.AssociationEnd" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Class" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.Class.IsPersistent(OOAdvantech.MetaDataRepository.AssociationEnd)">
      <apidata name="IsPersistent" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="associationEnd">
          <type api="T:OOAdvantech.MetaDataRepository.AssociationEnd" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Class" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.Class.IsPersistent(OOAdvantech.MetaDataRepository.Attribute)">
      <apidata name="IsPersistent" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="attribute">
          <type api="T:OOAdvantech.MetaDataRepository.Attribute" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Class" ref="true" />
      </containers>
    </api>
    <api id="P:OOAdvantech.MetaDataRepository.Class.Methods">
      <apidata name="Methods" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Methods" />
      <returns>
        <type api="T:OOAdvantech.Collections.Generic.Set`1" ref="true">
          <specialization>
            <type api="T:OOAdvantech.MetaDataRepository.Method" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Class" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.RoleBMultiplicityRangeAttribute" ref="true" />
          <argument>
            <type api="T:System.UInt64" ref="false" />
            <value>1</value>
          </argument>
          <argument>
            <type api="T:System.UInt64" ref="false" />
            <value>1</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.RoleAMultiplicityRangeAttribute" ref="true" />
          <argument>
            <type api="T:System.UInt64" ref="false" />
            <value>0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.PersistentMember" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>_Methods</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.AssociationAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>ClassImplementation</value>
          </argument>
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:OOAdvantech.MetaDataRepository.Method" ref="true" />
            </typeValue>
          </argument>
          <argument>
            <type api="T:OOAdvantech.MetaDataRepository.Roles" ref="false" />
            <enumValue>
              <field name="RoleA" />
            </enumValue>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>{42A65BA1-99AF-466A-A58B-9444F1E61903}</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:OOAdvantech.MetaDataRepository.Class.NestedClasses">
      <apidata name="NestedClasses" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_NestedClasses" />
      <setter name="set_NestedClasses" />
      <returns>
        <type api="T:OOAdvantech.Collections.Generic.Set`1" ref="true">
          <specialization>
            <type api="T:OOAdvantech.MetaDataRepository.Classifier" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Class" ref="true" />
      </containers>
    </api>
    <api id="P:OOAdvantech.MetaDataRepository.Class.ObjectActivation">
      <apidata name="ObjectActivation" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ObjectActivation" />
      <returns>
        <type api="T:OOAdvantech.MetaDataRepository.Operation" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Class" ref="true" />
      </containers>
    </api>
    <api id="P:OOAdvantech.MetaDataRepository.Class.Persistent">
      <apidata name="Persistent" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Persistent" />
      <setter name="set_Persistent" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Class" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.BackwardCompatibilityID" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>+12</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.PersistentMember" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>_Persistent</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:OOAdvantech.MetaDataRepository.Class.Realizations">
      <apidata name="Realizations" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_Realizations" />
      <returns>
        <type api="T:OOAdvantech.Collections.Generic.Set`1" ref="true">
          <specialization>
            <type api="T:OOAdvantech.MetaDataRepository.Realization" ref="true" />
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="P:OOAdvantech.MetaDataRepository.InterfaceImplementor.Realizations">
          <type api="T:OOAdvantech.MetaDataRepository.InterfaceImplementor" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Class" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.BackwardCompatibilityID" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>+28</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.PersistentMember" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>_Realizations</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.Class.RefreshClassHierarchyCollections">
      <apidata name="RefreshClassHierarchyCollections" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:OOAdvantech.MetaDataRepository.Classifier.RefreshClassHierarchyCollections">
          <type api="T:OOAdvantech.MetaDataRepository.Classifier" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Class" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.Class.RemoveAssociationEndRealization(OOAdvantech.MetaDataRepository.AssociationEndRealization)">
      <apidata name="RemoveAssociationEndRealization" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="associationEndRealization">
          <type api="T:OOAdvantech.MetaDataRepository.AssociationEndRealization" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:OOAdvantech.MetaDataRepository.InterfaceImplementor.RemoveAssociationEndRealization(OOAdvantech.MetaDataRepository.AssociationEndRealization)">
          <type api="T:OOAdvantech.MetaDataRepository.InterfaceImplementor" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Class" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.Class.RemoveAttributeRealization(OOAdvantech.MetaDataRepository.AttributeRealization)">
      <apidata name="RemoveAttributeRealization" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="attributeRealization">
          <type api="T:OOAdvantech.MetaDataRepository.AttributeRealization" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:OOAdvantech.MetaDataRepository.InterfaceImplementor.RemoveAttributeRealization(OOAdvantech.MetaDataRepository.AttributeRealization)">
          <type api="T:OOAdvantech.MetaDataRepository.InterfaceImplementor" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Class" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.Class.RemoveMethod(OOAdvantech.MetaDataRepository.Method)">
      <apidata name="RemoveMethod" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="method">
          <type api="T:OOAdvantech.MetaDataRepository.Method" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:OOAdvantech.MetaDataRepository.InterfaceImplementor.RemoveMethod(OOAdvantech.MetaDataRepository.Method)">
          <type api="T:OOAdvantech.MetaDataRepository.InterfaceImplementor" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Class" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.Class.RemoveNestedClass(OOAdvantech.MetaDataRepository.Class)">
      <apidata name="RemoveNestedClass" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="theNestedClass">
          <type api="T:OOAdvantech.MetaDataRepository.Class" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Class" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.Class.RemoveRealizeRel(OOAdvantech.MetaDataRepository.Realization)">
      <apidata name="RemoveRealizeRel" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="realizeRel">
          <type api="T:OOAdvantech.MetaDataRepository.Realization" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Class" ref="true" />
      </containers>
    </api>
    <api id="P:OOAdvantech.MetaDataRepository.Class.StorageCells">
      <apidata name="StorageCells" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_StorageCells" />
      <returns>
        <type api="T:OOAdvantech.Collections.Generic.Set`1" ref="true">
          <specialization>
            <type api="T:OOAdvantech.MetaDataRepository.StorageCell" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Class" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.PersistentMember" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>_StorageCells</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.RoleAMultiplicityRangeAttribute" ref="true" />
          <argument>
            <type api="T:System.UInt64" ref="false" />
            <value>0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.AssociationAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>StoreObjectInCell</value>
          </argument>
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:OOAdvantech.MetaDataRepository.StorageCell" ref="true" />
            </typeValue>
          </argument>
          <argument>
            <type api="T:OOAdvantech.MetaDataRepository.Roles" ref="false" />
            <enumValue>
              <field name="RoleA" />
            </enumValue>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>{E86388A2-3151-4935-BCF8-9A19CCFE6122}</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:OOAdvantech.MetaDataRepository.Class.StorageCellsOfThisType">
      <apidata name="StorageCellsOfThisType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_StorageCellsOfThisType" />
      <setter name="set_StorageCellsOfThisType" />
      <returns>
        <type api="T:OOAdvantech.Collections.Generic.Set`1" ref="true">
          <specialization>
            <type api="T:OOAdvantech.MetaDataRepository.StorageCell" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Class" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.Class.Synchronize(OOAdvantech.MetaDataRepository.MetaObject)">
      <apidata name="Synchronize" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:OOAdvantech.MetaDataRepository.Classifier.Synchronize(OOAdvantech.MetaDataRepository.MetaObject)">
          <type api="T:OOAdvantech.MetaDataRepository.Classifier" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="originMetaObject">
          <type api="T:OOAdvantech.MetaDataRepository.MetaObject" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Class" ref="true" />
      </containers>
    </api>
    <api id="T:OOAdvantech.MetaDataRepository.Classifier">
      <apidata name="Classifier" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:OOAdvantech.MetaDataRepository.Namespace" ref="true" />
          <type api="T:OOAdvantech.MetaDataRepository.MetaObject" ref="true" />
          <type api="T:System.MarshalByRefObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:OOAdvantech.MetaDataRepository.Component" ref="true" />
          <type api="T:OOAdvantech.MetaDataRepository.Class" ref="true" />
          <type api="T:OOAdvantech.MetaDataRepository.DataType" ref="true" />
          <type api="T:OOAdvantech.MetaDataRepository.Interface" ref="true" />
        </descendents>
      </family>
      <implements>
        <type api="T:OOAdvantech.MetaDataRepository.ITemplateable" ref="true" />
        <type api="T:OOAdvantech.MetaDataRepository.IParameterableElement" ref="true" />
      </implements>
      <elements>
        <element api="F:OOAdvantech.MetaDataRepository.Classifier._TemplateBinding" />
        <element api="F:OOAdvantech.MetaDataRepository.Classifier._LinkAssociation" />
        <element api="F:OOAdvantech.MetaDataRepository.Classifier.ClassifierHierarchyClassifiers" />
        <element api="F:OOAdvantech.MetaDataRepository.Classifier._Generalizations" />
        <element api="F:OOAdvantech.MetaDataRepository.Classifier._OwnedTemplateSignature" />
        <element api="F:OOAdvantech.MetaDataRepository.Classifier.ClassHierarchyAssociateRoles" />
        <element api="F:OOAdvantech.MetaDataRepository.Classifier.ClassHierarchyRoles" />
        <element api="F:OOAdvantech.MetaDataRepository.Classifier.ClassHierarchyAttributes" />
        <element api="F:OOAdvantech.MetaDataRepository.Classifier._Specializations" />
        <element api="F:OOAdvantech.MetaDataRepository.Classifier._Roles" />
        <element api="F:OOAdvantech.MetaDataRepository.Classifier._Features" />
        <element api="M:OOAdvantech.MetaDataRepository.Classifier.GetExtensionMetaObject(System.Type)" />
        <element api="M:OOAdvantech.MetaDataRepository.Classifier.GetClassifier(System.Type)" />
        <element api="M:OOAdvantech.MetaDataRepository.Classifier.ToString" />
        <element api="M:OOAdvantech.MetaDataRepository.Classifier.GetAllSpecializeClasifiers" />
        <element api="M:OOAdvantech.MetaDataRepository.Classifier.BuildCaseInsensitiveNames" />
        <element api="M:OOAdvantech.MetaDataRepository.Classifier.ErrorCheck(System.Collections.ArrayList@)" />
        <element api="M:OOAdvantech.MetaDataRepository.Classifier.#ctor" />
        <element api="M:OOAdvantech.MetaDataRepository.Classifier.IsA(OOAdvantech.MetaDataRepository.Classifier)" />
        <element api="M:OOAdvantech.MetaDataRepository.Classifier.Synchronize(OOAdvantech.MetaDataRepository.MetaObject)" />
        <element api="M:OOAdvantech.MetaDataRepository.Classifier.RemoveAssociation(OOAdvantech.MetaDataRepository.Association)" />
        <element api="M:OOAdvantech.MetaDataRepository.Classifier.GetGeneralClasifiers" />
        <element api="M:OOAdvantech.MetaDataRepository.Classifier.RefreshClassHierarchyCollections" />
        <element api="M:OOAdvantech.MetaDataRepository.Classifier.RemoveAttribute(OOAdvantech.MetaDataRepository.Attribute)" />
        <element api="M:OOAdvantech.MetaDataRepository.Classifier.GetAllGeneralClasifiers" />
        <element api="M:OOAdvantech.MetaDataRepository.Classifier.RemoveOperation(OOAdvantech.MetaDataRepository.Operation)" />
        <element api="M:OOAdvantech.MetaDataRepository.Classifier.GetAssignedComponents" />
        <element api="M:OOAdvantech.MetaDataRepository.Classifier.GetSpecializedClasifiers" />
        <element api="M:OOAdvantech.MetaDataRepository.Classifier.AddAssociation(System.String,OOAdvantech.MetaDataRepository.Roles,OOAdvantech.MetaDataRepository.Classifier,System.String)" />
        <element api="M:OOAdvantech.MetaDataRepository.Classifier.AddAttribute(System.String,OOAdvantech.MetaDataRepository.Classifier,System.String)" />
        <element api="M:OOAdvantech.MetaDataRepository.Classifier.AddOperation(System.String,OOAdvantech.MetaDataRepository.Classifier)" />
        <element api="M:OOAdvantech.MetaDataRepository.Classifier.GetAssociateRoles(System.Boolean)" />
        <element api="M:OOAdvantech.MetaDataRepository.Classifier.RemoveGeneralization(OOAdvantech.MetaDataRepository.Generalization)" />
        <element api="M:OOAdvantech.MetaDataRepository.Classifier.AddGeneralization(System.String,OOAdvantech.MetaDataRepository.Classifier)" />
        <element api="M:OOAdvantech.MetaDataRepository.Classifier.AddRole(OOAdvantech.MetaDataRepository.AssociationEnd)" />
        <element api="M:OOAdvantech.MetaDataRepository.Classifier.RemoveRole(OOAdvantech.MetaDataRepository.AssociationEnd)" />
        <element api="M:OOAdvantech.MetaDataRepository.Classifier.GetOperations(System.Boolean)" />
        <element api="M:OOAdvantech.MetaDataRepository.Classifier.GetOperations(System.String)" />
        <element api="M:OOAdvantech.MetaDataRepository.Classifier.GetOperations(System.String,System.Boolean)" />
        <element api="M:OOAdvantech.MetaDataRepository.Classifier.GetRoles(System.Boolean)" />
        <element api="M:OOAdvantech.MetaDataRepository.Classifier.GetRealizedAttributes" />
        <element api="M:OOAdvantech.MetaDataRepository.Classifier.GetAttributes(System.Boolean)" />
        <element api="M:OOAdvantech.MetaDataRepository.Classifier.GetOperation(System.String,System.String[],System.Boolean)" />
        <element api="M:OOAdvantech.MetaDataRepository.Classifier.GetRole(System.String)" />
        <element api="M:OOAdvantech.MetaDataRepository.Classifier.GetFeature(System.String,System.Boolean)" />
        <element api="P:OOAdvantech.MetaDataRepository.Classifier.IsTemplate" />
        <element api="P:OOAdvantech.MetaDataRepository.Classifier.IsTemplateInstantiation" />
        <element api="P:OOAdvantech.MetaDataRepository.Classifier.Constractors" />
        <element api="P:OOAdvantech.MetaDataRepository.Classifier.TemplateBinding" />
        <element api="P:OOAdvantech.MetaDataRepository.Classifier.LinkAssociation" />
        <element api="P:OOAdvantech.MetaDataRepository.Classifier.Generalizations" />
        <element api="P:OOAdvantech.MetaDataRepository.Classifier.StorageCellsOfThisType" />
        <element api="P:OOAdvantech.MetaDataRepository.Classifier.IsBindedClassifier" />
        <element api="P:OOAdvantech.MetaDataRepository.Classifier.ContainsTemplateParameter" />
        <element api="P:OOAdvantech.MetaDataRepository.Classifier.OwnedTemplateSignature" />
        <element api="P:OOAdvantech.MetaDataRepository.Classifier.ClassHierarchyLinkAssociation" />
        <element api="P:OOAdvantech.MetaDataRepository.Classifier.Specializations" />
        <element api="P:OOAdvantech.MetaDataRepository.Classifier.Roles" />
        <element api="P:OOAdvantech.MetaDataRepository.Classifier.Features" />
        <element api="F:OOAdvantech.MetaDataRepository.Namespace._OwnedElements" />
        <element api="M:OOAdvantech.MetaDataRepository.Namespace.MakeNameUnaryInNamesapce(OOAdvantech.MetaDataRepository.MetaObject)" />
        <element api="M:OOAdvantech.MetaDataRepository.Namespace.GetExtensionMetaObjects" />
        <element api="M:OOAdvantech.MetaDataRepository.Namespace.AddOwnedElement(OOAdvantech.MetaDataRepository.MetaObject)" />
        <element api="M:OOAdvantech.MetaDataRepository.Namespace.RemoveOwnedElement(OOAdvantech.MetaDataRepository.MetaObject)" />
        <element api="P:OOAdvantech.MetaDataRepository.Namespace.OwnedElements" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject._CaseInsensitiveName" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject._ImplementationUnit" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject.LockObject" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject.ReaderWriterLock" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject.Properties" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject._Name" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject.MetaObjectIDStream" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject._Identity" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject._ClientDependencies" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject._SupplierDependencies" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject._Namespace" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject.Visibility" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.MetaObjectChangeState" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.ShallowSynchronize(OOAdvantech.MetaDataRepository.MetaObject)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.AddDependency(System.String,OOAdvantech.MetaDataRepository.MetaObject)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.GetDynamicPropertiesAsXmlString" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.SetIdentity(OOAdvantech.MetaDataRepository.MetaObjectID)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.SetNamespace(OOAdvantech.MetaDataRepository.Namespace)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.GetPropertyValue``1(System.String,System.String)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.GetPropertyValue(System.Type,System.String,System.String)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.PutPropertyValue(System.String,System.String,System.Object)" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.CaseInsensitiveName" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.ImplementationUnit" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.OQLName" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.Name" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.FullName" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.OQLFullName" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.Identity" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.ClientDependencies" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.SupplierDependencies" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.Namespace" />
        <element api="E:OOAdvantech.MetaDataRepository.MetaObject.Changed" />
        <element api="M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="cloneIdentity">
              <type api="T:System.Boolean" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.MarshalByRefObject" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.MarshalByRefObject" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.MarshalByRefObject.GetLifetimeService">
          <apidata name="GetLifetimeService" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.MarshalByRefObject" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Security.Permissions.SecurityPermissionAttribute" ref="true" />
              <argument>
                <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
                <enumValue>
                  <field name="LinkDemand" />
                </enumValue>
              </argument>
              <assignment name="Flags">
                <type api="T:System.Security.Permissions.SecurityPermissionFlag" ref="false" />
                <enumValue>
                  <field name="Infrastructure" />
                </enumValue>
              </assignment>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.MarshalByRefObject.InitializeLifetimeService">
          <apidata name="InitializeLifetimeService" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.MarshalByRefObject" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Security.Permissions.SecurityPermissionAttribute" ref="true" />
              <argument>
                <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
                <enumValue>
                  <field name="LinkDemand" />
                </enumValue>
              </argument>
              <assignment name="Flags">
                <type api="T:System.Security.Permissions.SecurityPermissionFlag" ref="false" />
                <enumValue>
                  <field name="Infrastructure" />
                </enumValue>
              </assignment>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.MarshalByRefObject.CreateObjRef(System.Type)">
          <apidata name="CreateObjRef" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="requestedType">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Runtime.Remoting.ObjRef" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.MarshalByRefObject" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Security.Permissions.SecurityPermissionAttribute" ref="true" />
              <argument>
                <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
                <enumValue>
                  <field name="LinkDemand" />
                </enumValue>
              </argument>
              <assignment name="Flags">
                <type api="T:System.Security.Permissions.SecurityPermissionFlag" ref="false" />
                <enumValue>
                  <field name="Infrastructure" />
                </enumValue>
              </assignment>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.Persistent" ref="true" />
        </attribute>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.BackwardCompatibilityID" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>{1A46C6A7-2B03-4BC9-A3C0-28301BB83676}</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.Classifier.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Classifier" ref="true" />
      </containers>
    </api>
    <api id="F:OOAdvantech.MetaDataRepository.Classifier._Features">
      <apidata name="_Features" group="member" subgroup="field" />
      <memberdata visibility="family" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:OOAdvantech.Collections.Generic.Set`1" ref="true">
          <specialization>
            <type api="T:OOAdvantech.MetaDataRepository.Feature" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Classifier" ref="true" />
      </containers>
    </api>
    <api id="F:OOAdvantech.MetaDataRepository.Classifier._Generalizations">
      <apidata name="_Generalizations" group="member" subgroup="field" />
      <memberdata visibility="family" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:OOAdvantech.Collections.Generic.Set`1" ref="true">
          <specialization>
            <type api="T:OOAdvantech.MetaDataRepository.Generalization" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Classifier" ref="true" />
      </containers>
    </api>
    <api id="F:OOAdvantech.MetaDataRepository.Classifier._LinkAssociation">
      <apidata name="_LinkAssociation" group="member" subgroup="field" />
      <memberdata visibility="family" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:OOAdvantech.MetaDataRepository.Association" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Classifier" ref="true" />
      </containers>
    </api>
    <api id="F:OOAdvantech.MetaDataRepository.Classifier._OwnedTemplateSignature">
      <apidata name="_OwnedTemplateSignature" group="member" subgroup="field" />
      <memberdata visibility="family" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:OOAdvantech.MetaDataRepository.TemplateSignature" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Classifier" ref="true" />
      </containers>
    </api>
    <api id="F:OOAdvantech.MetaDataRepository.Classifier._Roles">
      <apidata name="_Roles" group="member" subgroup="field" />
      <memberdata visibility="family" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:OOAdvantech.Collections.Generic.Set`1" ref="true">
          <specialization>
            <type api="T:OOAdvantech.MetaDataRepository.AssociationEnd" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Classifier" ref="true" />
      </containers>
    </api>
    <api id="F:OOAdvantech.MetaDataRepository.Classifier._Specializations">
      <apidata name="_Specializations" group="member" subgroup="field" />
      <memberdata visibility="family" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:OOAdvantech.Collections.Generic.Set`1" ref="true">
          <specialization>
            <type api="T:OOAdvantech.MetaDataRepository.Generalization" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Classifier" ref="true" />
      </containers>
    </api>
    <api id="F:OOAdvantech.MetaDataRepository.Classifier._TemplateBinding">
      <apidata name="_TemplateBinding" group="member" subgroup="field" />
      <memberdata visibility="family" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:OOAdvantech.MetaDataRepository.TemplateBinding" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Classifier" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.Classifier.AddAssociation(System.String,OOAdvantech.MetaDataRepository.Roles,OOAdvantech.MetaDataRepository.Classifier,System.String)">
      <apidata name="AddAssociation" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="supplierRoleName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="supplierRole">
          <type api="T:OOAdvantech.MetaDataRepository.Roles" ref="false" />
        </parameter>
        <parameter name="supplierRoleClass">
          <type api="T:OOAdvantech.MetaDataRepository.Classifier" ref="true" />
        </parameter>
        <parameter name="associationIdentity">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:OOAdvantech.MetaDataRepository.Association" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Classifier" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.Classifier.AddAttribute(System.String,OOAdvantech.MetaDataRepository.Classifier,System.String)">
      <apidata name="AddAttribute" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="attributeName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="attributeType">
          <type api="T:OOAdvantech.MetaDataRepository.Classifier" ref="true" />
        </parameter>
        <parameter name="initialValue">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:OOAdvantech.MetaDataRepository.Attribute" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Classifier" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.Classifier.AddGeneralization(System.String,OOAdvantech.MetaDataRepository.Classifier)">
      <apidata name="AddGeneralization" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="parentClassifier">
          <type api="T:OOAdvantech.MetaDataRepository.Classifier" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:OOAdvantech.MetaDataRepository.Generalization" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Classifier" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.Classifier.AddOperation(System.String,OOAdvantech.MetaDataRepository.Classifier)">
      <apidata name="AddOperation" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="operationName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="opertionType">
          <type api="T:OOAdvantech.MetaDataRepository.Classifier" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:OOAdvantech.MetaDataRepository.Operation" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Classifier" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.Classifier.AddRole(OOAdvantech.MetaDataRepository.AssociationEnd)">
      <apidata name="AddRole" group="member" subgroup="method" />
      <memberdata visibility="family or assembly" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="associationEnd">
          <type api="T:OOAdvantech.MetaDataRepository.AssociationEnd" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Classifier" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.Classifier.BuildCaseInsensitiveNames">
      <apidata name="BuildCaseInsensitiveNames" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:OOAdvantech.MetaDataRepository.Namespace.BuildCaseInsensitiveNames">
          <type api="T:OOAdvantech.MetaDataRepository.Namespace" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Classifier" ref="true" />
      </containers>
    </api>
    <api id="F:OOAdvantech.MetaDataRepository.Classifier.ClassHierarchyAssociateRoles">
      <apidata name="ClassHierarchyAssociateRoles" group="member" subgroup="field" />
      <memberdata visibility="family or assembly" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:OOAdvantech.Collections.Generic.Set`1" ref="true">
          <specialization>
            <type api="T:OOAdvantech.MetaDataRepository.AssociationEnd" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Classifier" ref="true" />
      </containers>
    </api>
    <api id="F:OOAdvantech.MetaDataRepository.Classifier.ClassHierarchyAttributes">
      <apidata name="ClassHierarchyAttributes" group="member" subgroup="field" />
      <memberdata visibility="family or assembly" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:OOAdvantech.Collections.Generic.Set`1" ref="true">
          <specialization>
            <type api="T:OOAdvantech.MetaDataRepository.Attribute" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Classifier" ref="true" />
      </containers>
    </api>
    <api id="P:OOAdvantech.MetaDataRepository.Classifier.ClassHierarchyLinkAssociation">
      <apidata name="ClassHierarchyLinkAssociation" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_ClassHierarchyLinkAssociation" />
      <returns>
        <type api="T:OOAdvantech.MetaDataRepository.Association" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Classifier" ref="true" />
      </containers>
    </api>
    <api id="F:OOAdvantech.MetaDataRepository.Classifier.ClassHierarchyRoles">
      <apidata name="ClassHierarchyRoles" group="member" subgroup="field" />
      <memberdata visibility="family or assembly" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:OOAdvantech.Collections.Generic.Set`1" ref="true">
          <specialization>
            <type api="T:OOAdvantech.MetaDataRepository.AssociationEnd" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Classifier" ref="true" />
      </containers>
    </api>
    <api id="F:OOAdvantech.MetaDataRepository.Classifier.ClassifierHierarchyClassifiers">
      <apidata name="ClassifierHierarchyClassifiers" group="member" subgroup="field" />
      <memberdata visibility="family" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:OOAdvantech.Collections.Generic.Set`1" ref="true">
          <specialization>
            <type api="T:OOAdvantech.MetaDataRepository.Classifier" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Classifier" ref="true" />
      </containers>
    </api>
    <api id="P:OOAdvantech.MetaDataRepository.Classifier.Constractors">
      <apidata name="Constractors" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_Constractors" />
      <returns>
        <type api="T:OOAdvantech.Collections.Generic.List`1" ref="true">
          <specialization>
            <type api="T:OOAdvantech.MetaDataRepository.Operation" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Classifier" ref="true" />
      </containers>
    </api>
    <api id="P:OOAdvantech.MetaDataRepository.Classifier.ContainsTemplateParameter">
      <apidata name="ContainsTemplateParameter" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ContainsTemplateParameter" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Classifier" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.Classifier.ErrorCheck(System.Collections.ArrayList@)">
      <apidata name="ErrorCheck" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:OOAdvantech.MetaDataRepository.Namespace.ErrorCheck(System.Collections.ArrayList@)">
          <type api="T:OOAdvantech.MetaDataRepository.Namespace" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="errors">
          <referenceTo>
            <type api="T:System.Collections.ArrayList" ref="true" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Classifier" ref="true" />
      </containers>
    </api>
    <api id="P:OOAdvantech.MetaDataRepository.Classifier.Features">
      <apidata name="Features" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_Features" />
      <returns>
        <type api="T:OOAdvantech.Collections.Generic.Set`1" ref="true">
          <specialization>
            <type api="T:OOAdvantech.MetaDataRepository.Feature" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Classifier" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.AssociationAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>ClassifierMember</value>
          </argument>
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:OOAdvantech.MetaDataRepository.Feature" ref="true" />
            </typeValue>
          </argument>
          <argument>
            <type api="T:OOAdvantech.MetaDataRepository.Roles" ref="false" />
            <enumValue>
              <field name="RoleA" />
            </enumValue>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>{38679851-A962-46C4-A940-20522E07D301}</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.RoleAMultiplicityRangeAttribute" ref="true" />
          <argument>
            <type api="T:System.UInt64" ref="false" />
            <value>0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.PersistentMember" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>_Features</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:OOAdvantech.MetaDataRepository.Classifier.Generalizations">
      <apidata name="Generalizations" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_Generalizations" />
      <returns>
        <type api="T:OOAdvantech.Collections.Generic.Set`1" ref="true">
          <specialization>
            <type api="T:OOAdvantech.MetaDataRepository.Generalization" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Classifier" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.RoleBMultiplicityRangeAttribute" ref="true" />
          <argument>
            <type api="T:System.UInt64" ref="false" />
            <value>0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.AssociationAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Generalization</value>
          </argument>
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:OOAdvantech.MetaDataRepository.Generalization" ref="true" />
            </typeValue>
          </argument>
          <argument>
            <type api="T:OOAdvantech.MetaDataRepository.Roles" ref="false" />
            <enumValue>
              <field name="RoleB" />
            </enumValue>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>{31EE00E4-640A-493C-8662-08326CE3D600}</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.AssociationEndBehavior" ref="true" />
          <argument>
            <type api="T:OOAdvantech.MetaDataRepository.PersistencyFlag" ref="false" />
            <enumValue>
              <field name="OnConstruction" />
            </enumValue>
          </argument>
        </attribute>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.PersistentMember" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>_Generalizations</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.Classifier.GetAllGeneralClasifiers">
      <apidata name="GetAllGeneralClasifiers" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:OOAdvantech.Collections.Generic.Set`1" ref="true">
          <specialization>
            <type api="T:OOAdvantech.MetaDataRepository.Classifier" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Classifier" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.Classifier.GetAllSpecializeClasifiers">
      <apidata name="GetAllSpecializeClasifiers" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:OOAdvantech.Collections.Generic.Set`1" ref="true">
          <specialization>
            <type api="T:OOAdvantech.MetaDataRepository.Classifier" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Classifier" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.Classifier.GetAssignedComponents">
      <apidata name="GetAssignedComponents" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:OOAdvantech.Collections.Generic.Set`1" ref="true">
          <specialization>
            <type api="T:OOAdvantech.MetaDataRepository.Classifier" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Classifier" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.Classifier.GetAssociateRoles(System.Boolean)">
      <apidata name="GetAssociateRoles" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="Inherit">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:OOAdvantech.Collections.Generic.Set`1" ref="true">
          <specialization>
            <type api="T:OOAdvantech.MetaDataRepository.AssociationEnd" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Classifier" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.Classifier.GetAttributes(System.Boolean)">
      <apidata name="GetAttributes" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="Inherit">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:OOAdvantech.Collections.Generic.Set`1" ref="true">
          <specialization>
            <type api="T:OOAdvantech.MetaDataRepository.Attribute" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Classifier" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.Classifier.GetClassifier(System.Type)">
      <apidata name="GetClassifier" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:OOAdvantech.MetaDataRepository.Classifier" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Classifier" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.Classifier.GetExtensionMetaObject(System.Type)">
      <apidata name="GetExtensionMetaObject" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:OOAdvantech.MetaDataRepository.MetaObject.GetExtensionMetaObject(System.Type)">
          <type api="T:OOAdvantech.MetaDataRepository.MetaObject" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="MetaObjectType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Classifier" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.Classifier.GetFeature(System.String,System.Boolean)">
      <apidata name="GetFeature" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="identity">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="inherit">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:OOAdvantech.MetaDataRepository.Feature" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Classifier" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.Classifier.GetGeneralClasifiers">
      <apidata name="GetGeneralClasifiers" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:OOAdvantech.Collections.Generic.Set`1" ref="true">
          <specialization>
            <type api="T:OOAdvantech.MetaDataRepository.Classifier" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Classifier" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.Classifier.GetOperation(System.String,System.String[],System.Boolean)">
      <apidata name="GetOperation" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="oparationName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="parametersTypes">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="caseSensitive">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:OOAdvantech.MetaDataRepository.Operation" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Classifier" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.Classifier.GetOperations(System.Boolean)">
      <apidata name="GetOperations" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="Inherit">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:OOAdvantech.Collections.Generic.Set`1" ref="true">
          <specialization>
            <type api="T:OOAdvantech.MetaDataRepository.Operation" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Classifier" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.Classifier.GetOperations(System.String)">
      <apidata name="GetOperations" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="oparationName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:OOAdvantech.Collections.Generic.List`1" ref="true">
          <specialization>
            <type api="T:OOAdvantech.MetaDataRepository.Operation" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Classifier" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.Classifier.GetOperations(System.String,System.Boolean)">
      <apidata name="GetOperations" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="oparationName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="caseSensitive">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:OOAdvantech.Collections.Generic.List`1" ref="true">
          <specialization>
            <type api="T:OOAdvantech.MetaDataRepository.Operation" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Classifier" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.Classifier.GetRealizedAttributes">
      <apidata name="GetRealizedAttributes" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:OOAdvantech.Collections.Generic.Set`1" ref="true">
          <specialization>
            <type api="T:OOAdvantech.MetaDataRepository.Attribute" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Classifier" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.Classifier.GetRole(System.String)">
      <apidata name="GetRole" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="associationEndIdentity">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:OOAdvantech.MetaDataRepository.AssociationEnd" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Classifier" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.Classifier.GetRoles(System.Boolean)">
      <apidata name="GetRoles" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="Inherit">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:OOAdvantech.Collections.Generic.Set`1" ref="true">
          <specialization>
            <type api="T:OOAdvantech.MetaDataRepository.AssociationEnd" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Classifier" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.Classifier.GetSpecializedClasifiers">
      <apidata name="GetSpecializedClasifiers" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:OOAdvantech.Collections.Generic.Set`1" ref="true">
          <specialization>
            <type api="T:OOAdvantech.MetaDataRepository.Classifier" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Classifier" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.Classifier.IsA(OOAdvantech.MetaDataRepository.Classifier)">
      <apidata name="IsA" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="classifier">
          <type api="T:OOAdvantech.MetaDataRepository.Classifier" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Classifier" ref="true" />
      </containers>
    </api>
    <api id="P:OOAdvantech.MetaDataRepository.Classifier.IsBindedClassifier">
      <apidata name="IsBindedClassifier" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsBindedClassifier" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Classifier" ref="true" />
      </containers>
    </api>
    <api id="P:OOAdvantech.MetaDataRepository.Classifier.IsTemplate">
      <apidata name="IsTemplate" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsTemplate" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Classifier" ref="true" />
      </containers>
    </api>
    <api id="P:OOAdvantech.MetaDataRepository.Classifier.IsTemplateInstantiation">
      <apidata name="IsTemplateInstantiation" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsTemplateInstantiation" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Classifier" ref="true" />
      </containers>
    </api>
    <api id="P:OOAdvantech.MetaDataRepository.Classifier.LinkAssociation">
      <apidata name="LinkAssociation" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_LinkAssociation" />
      <setter name="set_LinkAssociation" />
      <returns>
        <type api="T:OOAdvantech.MetaDataRepository.Association" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Classifier" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.RoleBMultiplicityRangeAttribute" ref="true" />
          <argument>
            <type api="T:System.UInt64" ref="false" />
            <value>0</value>
          </argument>
          <argument>
            <type api="T:System.UInt64" ref="false" />
            <value>1</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.PersistentMember" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>_LinkAssociation</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.AssociationEndBehavior" ref="true" />
          <argument>
            <type api="T:OOAdvantech.MetaDataRepository.PersistencyFlag" ref="false" />
            <enumValue>
              <field name="OnConstruction" />
            </enumValue>
          </argument>
        </attribute>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.AssociationAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>AssociationClass</value>
          </argument>
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:OOAdvantech.MetaDataRepository.Association" ref="true" />
            </typeValue>
          </argument>
          <argument>
            <type api="T:OOAdvantech.MetaDataRepository.Roles" ref="false" />
            <enumValue>
              <field name="RoleB" />
            </enumValue>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>{D12835A7-0E6D-45A9-A091-4AC1403B479E}</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:OOAdvantech.MetaDataRepository.Classifier.OwnedTemplateSignature">
      <apidata name="OwnedTemplateSignature" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_OwnedTemplateSignature" />
      <setter name="set_OwnedTemplateSignature" />
      <returns>
        <type api="T:OOAdvantech.MetaDataRepository.TemplateSignature" ref="true" />
      </returns>
      <implements>
        <member api="P:OOAdvantech.MetaDataRepository.ITemplateable.OwnedTemplateSignature">
          <type api="T:OOAdvantech.MetaDataRepository.ITemplateable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Classifier" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.PersistentMember" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>_OwnedTemplateSignature</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.BackwardCompatibilityID" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>+59</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.Classifier.RefreshClassHierarchyCollections">
      <apidata name="RefreshClassHierarchyCollections" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Classifier" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.Classifier.RemoveAssociation(OOAdvantech.MetaDataRepository.Association)">
      <apidata name="RemoveAssociation" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="theAssociation">
          <type api="T:OOAdvantech.MetaDataRepository.Association" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Classifier" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.Classifier.RemoveAttribute(OOAdvantech.MetaDataRepository.Attribute)">
      <apidata name="RemoveAttribute" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="theAttribute">
          <type api="T:OOAdvantech.MetaDataRepository.Attribute" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Classifier" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.Classifier.RemoveGeneralization(OOAdvantech.MetaDataRepository.Generalization)">
      <apidata name="RemoveGeneralization" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="theGeneralization">
          <type api="T:OOAdvantech.MetaDataRepository.Generalization" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Classifier" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.Classifier.RemoveOperation(OOAdvantech.MetaDataRepository.Operation)">
      <apidata name="RemoveOperation" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="theOperation">
          <type api="T:OOAdvantech.MetaDataRepository.Operation" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Classifier" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.Classifier.RemoveRole(OOAdvantech.MetaDataRepository.AssociationEnd)">
      <apidata name="RemoveRole" group="member" subgroup="method" />
      <memberdata visibility="family or assembly" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="associationEnd">
          <type api="T:OOAdvantech.MetaDataRepository.AssociationEnd" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Classifier" ref="true" />
      </containers>
    </api>
    <api id="P:OOAdvantech.MetaDataRepository.Classifier.Roles">
      <apidata name="Roles" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_Roles" />
      <returns>
        <type api="T:OOAdvantech.Collections.Generic.Set`1" ref="true">
          <specialization>
            <type api="T:OOAdvantech.MetaDataRepository.AssociationEnd" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Classifier" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.RoleBMultiplicityRangeAttribute" ref="true" />
          <argument>
            <type api="T:System.UInt64" ref="false" />
            <value>0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.AssociationAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>ClassifierRole</value>
          </argument>
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:OOAdvantech.MetaDataRepository.AssociationEnd" ref="true" />
            </typeValue>
          </argument>
          <argument>
            <type api="T:OOAdvantech.MetaDataRepository.Roles" ref="false" />
            <enumValue>
              <field name="RoleB" />
            </enumValue>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>{1213BEE4-382C-4EE0-A62B-E013FCA9B4C3}</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.AssociationEndBehavior" ref="true" />
          <argument>
            <type api="T:OOAdvantech.MetaDataRepository.PersistencyFlag" ref="false" />
            <enumValue>
              <field name="Default" />
              <field name="OnConstruction" />
              <field name="CascadeDelete" />
            </enumValue>
          </argument>
        </attribute>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.PersistentMember" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>_Roles</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:OOAdvantech.MetaDataRepository.Classifier.Specializations">
      <apidata name="Specializations" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_Specializations" />
      <returns>
        <type api="T:OOAdvantech.Collections.Generic.Set`1" ref="true">
          <specialization>
            <type api="T:OOAdvantech.MetaDataRepository.Generalization" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Classifier" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.RoleBMultiplicityRangeAttribute" ref="true" />
          <argument>
            <type api="T:System.UInt64" ref="false" />
            <value>0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.AssociationAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Specialization</value>
          </argument>
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:OOAdvantech.MetaDataRepository.Generalization" ref="true" />
            </typeValue>
          </argument>
          <argument>
            <type api="T:OOAdvantech.MetaDataRepository.Roles" ref="false" />
            <enumValue>
              <field name="RoleB" />
            </enumValue>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>{E591FA9E-B3D8-4699-B6FC-3BD5BB2EA4AC}</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.AssociationEndBehavior" ref="true" />
          <argument>
            <type api="T:OOAdvantech.MetaDataRepository.PersistencyFlag" ref="false" />
            <enumValue>
              <field name="OnConstruction" />
            </enumValue>
          </argument>
        </attribute>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.PersistentMember" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>_Specializations</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:OOAdvantech.MetaDataRepository.Classifier.StorageCellsOfThisType">
      <apidata name="StorageCellsOfThisType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_StorageCellsOfThisType" />
      <returns>
        <type api="T:OOAdvantech.Collections.Generic.Set`1" ref="true">
          <specialization>
            <type api="T:OOAdvantech.MetaDataRepository.StorageCell" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Classifier" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.Classifier.Synchronize(OOAdvantech.MetaDataRepository.MetaObject)">
      <apidata name="Synchronize" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:OOAdvantech.MetaDataRepository.Namespace.Synchronize(OOAdvantech.MetaDataRepository.MetaObject)">
          <type api="T:OOAdvantech.MetaDataRepository.Namespace" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="originMetaObject">
          <type api="T:OOAdvantech.MetaDataRepository.MetaObject" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Classifier" ref="true" />
      </containers>
    </api>
    <api id="P:OOAdvantech.MetaDataRepository.Classifier.TemplateBinding">
      <apidata name="TemplateBinding" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" set="true" />
      <getter name="get_TemplateBinding" />
      <setter name="set_TemplateBinding" />
      <returns>
        <type api="T:OOAdvantech.MetaDataRepository.TemplateBinding" ref="true" />
      </returns>
      <implements>
        <member api="P:OOAdvantech.MetaDataRepository.ITemplateable.TemplateBinding">
          <type api="T:OOAdvantech.MetaDataRepository.ITemplateable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Classifier" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.PersistentMember" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>_TemplateBinding</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.BackwardCompatibilityID" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>+60</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.Classifier.ToString">
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.ToString">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Classifier" ref="true" />
      </containers>
    </api>
    <api id="T:OOAdvantech.MetaDataRepository.Component">
      <apidata name="Component" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:OOAdvantech.MetaDataRepository.Classifier" ref="true" />
          <type api="T:OOAdvantech.MetaDataRepository.Namespace" ref="true" />
          <type api="T:OOAdvantech.MetaDataRepository.MetaObject" ref="true" />
          <type api="T:System.MarshalByRefObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="F:OOAdvantech.MetaDataRepository.Component._AssemblyString" />
        <element api="F:OOAdvantech.MetaDataRepository.Component._Residents" />
        <element api="M:OOAdvantech.MetaDataRepository.Component.CreateClass(System.String,System.String)" />
        <element api="M:OOAdvantech.MetaDataRepository.Component.CreateInterface(System.String,System.String)" />
        <element api="M:OOAdvantech.MetaDataRepository.Component.CreateStructure(System.String,System.String)" />
        <element api="M:OOAdvantech.MetaDataRepository.Component.CreateEnumeration(System.String,System.String)" />
        <element api="M:OOAdvantech.MetaDataRepository.Component.GetComponent(System.Reflection.Assembly)" />
        <element api="M:OOAdvantech.MetaDataRepository.Component.GetClassifier(System.String,System.Boolean)" />
        <element api="M:OOAdvantech.MetaDataRepository.Component.ErrorCheck(System.Collections.ArrayList@)" />
        <element api="M:OOAdvantech.MetaDataRepository.Component.Synchronize(OOAdvantech.MetaDataRepository.MetaObject)" />
        <element api="M:OOAdvantech.MetaDataRepository.Component.AddResident(OOAdvantech.MetaDataRepository.MetaObject)" />
        <element api="M:OOAdvantech.MetaDataRepository.Component.RemoveResident(OOAdvantech.MetaDataRepository.MetaObject)" />
        <element api="M:OOAdvantech.MetaDataRepository.Component.#ctor" />
        <element api="P:OOAdvantech.MetaDataRepository.Component.ImplementationUnit" />
        <element api="P:OOAdvantech.MetaDataRepository.Component.Context" />
        <element api="P:OOAdvantech.MetaDataRepository.Component.AssemblyString" />
        <element api="P:OOAdvantech.MetaDataRepository.Component.HasPersistentClasses" />
        <element api="P:OOAdvantech.MetaDataRepository.Component.Residents" />
        <element api="F:OOAdvantech.MetaDataRepository.Classifier._TemplateBinding" />
        <element api="F:OOAdvantech.MetaDataRepository.Classifier._LinkAssociation" />
        <element api="F:OOAdvantech.MetaDataRepository.Classifier.ClassifierHierarchyClassifiers" />
        <element api="F:OOAdvantech.MetaDataRepository.Classifier._Generalizations" />
        <element api="F:OOAdvantech.MetaDataRepository.Classifier._OwnedTemplateSignature" />
        <element api="F:OOAdvantech.MetaDataRepository.Classifier.ClassHierarchyAssociateRoles" />
        <element api="F:OOAdvantech.MetaDataRepository.Classifier.ClassHierarchyRoles" />
        <element api="F:OOAdvantech.MetaDataRepository.Classifier.ClassHierarchyAttributes" />
        <element api="F:OOAdvantech.MetaDataRepository.Classifier._Specializations" />
        <element api="F:OOAdvantech.MetaDataRepository.Classifier._Roles" />
        <element api="F:OOAdvantech.MetaDataRepository.Classifier._Features" />
        <element api="M:OOAdvantech.MetaDataRepository.Classifier.GetExtensionMetaObject(System.Type)" />
        <element api="M:OOAdvantech.MetaDataRepository.Classifier.ToString" />
        <element api="M:OOAdvantech.MetaDataRepository.Classifier.GetAllSpecializeClasifiers" />
        <element api="M:OOAdvantech.MetaDataRepository.Classifier.BuildCaseInsensitiveNames" />
        <element api="M:OOAdvantech.MetaDataRepository.Classifier.IsA(OOAdvantech.MetaDataRepository.Classifier)" />
        <element api="M:OOAdvantech.MetaDataRepository.Classifier.RemoveAssociation(OOAdvantech.MetaDataRepository.Association)" />
        <element api="M:OOAdvantech.MetaDataRepository.Classifier.GetGeneralClasifiers" />
        <element api="M:OOAdvantech.MetaDataRepository.Classifier.RefreshClassHierarchyCollections" />
        <element api="M:OOAdvantech.MetaDataRepository.Classifier.RemoveAttribute(OOAdvantech.MetaDataRepository.Attribute)" />
        <element api="M:OOAdvantech.MetaDataRepository.Classifier.GetAllGeneralClasifiers" />
        <element api="M:OOAdvantech.MetaDataRepository.Classifier.RemoveOperation(OOAdvantech.MetaDataRepository.Operation)" />
        <element api="M:OOAdvantech.MetaDataRepository.Classifier.GetAssignedComponents" />
        <element api="M:OOAdvantech.MetaDataRepository.Classifier.GetSpecializedClasifiers" />
        <element api="M:OOAdvantech.MetaDataRepository.Classifier.AddAssociation(System.String,OOAdvantech.MetaDataRepository.Roles,OOAdvantech.MetaDataRepository.Classifier,System.String)" />
        <element api="M:OOAdvantech.MetaDataRepository.Classifier.AddAttribute(System.String,OOAdvantech.MetaDataRepository.Classifier,System.String)" />
        <element api="M:OOAdvantech.MetaDataRepository.Classifier.AddOperation(System.String,OOAdvantech.MetaDataRepository.Classifier)" />
        <element api="M:OOAdvantech.MetaDataRepository.Classifier.GetAssociateRoles(System.Boolean)" />
        <element api="M:OOAdvantech.MetaDataRepository.Classifier.RemoveGeneralization(OOAdvantech.MetaDataRepository.Generalization)" />
        <element api="M:OOAdvantech.MetaDataRepository.Classifier.AddGeneralization(System.String,OOAdvantech.MetaDataRepository.Classifier)" />
        <element api="M:OOAdvantech.MetaDataRepository.Classifier.AddRole(OOAdvantech.MetaDataRepository.AssociationEnd)" />
        <element api="M:OOAdvantech.MetaDataRepository.Classifier.RemoveRole(OOAdvantech.MetaDataRepository.AssociationEnd)" />
        <element api="M:OOAdvantech.MetaDataRepository.Classifier.GetOperations(System.Boolean)" />
        <element api="M:OOAdvantech.MetaDataRepository.Classifier.GetOperations(System.String)" />
        <element api="M:OOAdvantech.MetaDataRepository.Classifier.GetOperations(System.String,System.Boolean)" />
        <element api="M:OOAdvantech.MetaDataRepository.Classifier.GetRoles(System.Boolean)" />
        <element api="M:OOAdvantech.MetaDataRepository.Classifier.GetRealizedAttributes" />
        <element api="M:OOAdvantech.MetaDataRepository.Classifier.GetAttributes(System.Boolean)" />
        <element api="M:OOAdvantech.MetaDataRepository.Classifier.GetOperation(System.String,System.String[],System.Boolean)" />
        <element api="M:OOAdvantech.MetaDataRepository.Classifier.GetRole(System.String)" />
        <element api="M:OOAdvantech.MetaDataRepository.Classifier.GetFeature(System.String,System.Boolean)" />
        <element api="P:OOAdvantech.MetaDataRepository.Classifier.IsTemplate" />
        <element api="P:OOAdvantech.MetaDataRepository.Classifier.IsTemplateInstantiation" />
        <element api="P:OOAdvantech.MetaDataRepository.Classifier.Constractors" />
        <element api="P:OOAdvantech.MetaDataRepository.Classifier.TemplateBinding" />
        <element api="P:OOAdvantech.MetaDataRepository.Classifier.LinkAssociation" />
        <element api="P:OOAdvantech.MetaDataRepository.Classifier.Generalizations" />
        <element api="P:OOAdvantech.MetaDataRepository.Classifier.StorageCellsOfThisType" />
        <element api="P:OOAdvantech.MetaDataRepository.Classifier.IsBindedClassifier" />
        <element api="P:OOAdvantech.MetaDataRepository.Classifier.ContainsTemplateParameter" />
        <element api="P:OOAdvantech.MetaDataRepository.Classifier.OwnedTemplateSignature" />
        <element api="P:OOAdvantech.MetaDataRepository.Classifier.ClassHierarchyLinkAssociation" />
        <element api="P:OOAdvantech.MetaDataRepository.Classifier.Specializations" />
        <element api="P:OOAdvantech.MetaDataRepository.Classifier.Roles" />
        <element api="P:OOAdvantech.MetaDataRepository.Classifier.Features" />
        <element api="F:OOAdvantech.MetaDataRepository.Namespace._OwnedElements" />
        <element api="M:OOAdvantech.MetaDataRepository.Namespace.MakeNameUnaryInNamesapce(OOAdvantech.MetaDataRepository.MetaObject)" />
        <element api="M:OOAdvantech.MetaDataRepository.Namespace.GetExtensionMetaObjects" />
        <element api="M:OOAdvantech.MetaDataRepository.Namespace.AddOwnedElement(OOAdvantech.MetaDataRepository.MetaObject)" />
        <element api="M:OOAdvantech.MetaDataRepository.Namespace.RemoveOwnedElement(OOAdvantech.MetaDataRepository.MetaObject)" />
        <element api="P:OOAdvantech.MetaDataRepository.Namespace.OwnedElements" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject._CaseInsensitiveName" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject._ImplementationUnit" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject.LockObject" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject.ReaderWriterLock" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject.Properties" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject._Name" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject.MetaObjectIDStream" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject._Identity" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject._ClientDependencies" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject._SupplierDependencies" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject._Namespace" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject.Visibility" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.MetaObjectChangeState" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.ShallowSynchronize(OOAdvantech.MetaDataRepository.MetaObject)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.AddDependency(System.String,OOAdvantech.MetaDataRepository.MetaObject)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.GetDynamicPropertiesAsXmlString" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.SetIdentity(OOAdvantech.MetaDataRepository.MetaObjectID)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.SetNamespace(OOAdvantech.MetaDataRepository.Namespace)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.GetPropertyValue``1(System.String,System.String)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.GetPropertyValue(System.Type,System.String,System.String)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.PutPropertyValue(System.String,System.String,System.Object)" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.CaseInsensitiveName" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.OQLName" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.Name" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.FullName" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.OQLFullName" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.Identity" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.ClientDependencies" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.SupplierDependencies" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.Namespace" />
        <element api="E:OOAdvantech.MetaDataRepository.MetaObject.Changed" />
        <element api="M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="cloneIdentity">
              <type api="T:System.Boolean" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.MarshalByRefObject" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.MarshalByRefObject" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.MarshalByRefObject.GetLifetimeService">
          <apidata name="GetLifetimeService" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.MarshalByRefObject" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Security.Permissions.SecurityPermissionAttribute" ref="true" />
              <argument>
                <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
                <enumValue>
                  <field name="LinkDemand" />
                </enumValue>
              </argument>
              <assignment name="Flags">
                <type api="T:System.Security.Permissions.SecurityPermissionFlag" ref="false" />
                <enumValue>
                  <field name="Infrastructure" />
                </enumValue>
              </assignment>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.MarshalByRefObject.InitializeLifetimeService">
          <apidata name="InitializeLifetimeService" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.MarshalByRefObject" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Security.Permissions.SecurityPermissionAttribute" ref="true" />
              <argument>
                <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
                <enumValue>
                  <field name="LinkDemand" />
                </enumValue>
              </argument>
              <assignment name="Flags">
                <type api="T:System.Security.Permissions.SecurityPermissionFlag" ref="false" />
                <enumValue>
                  <field name="Infrastructure" />
                </enumValue>
              </assignment>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.MarshalByRefObject.CreateObjRef(System.Type)">
          <apidata name="CreateObjRef" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="requestedType">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Runtime.Remoting.ObjRef" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.MarshalByRefObject" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Security.Permissions.SecurityPermissionAttribute" ref="true" />
              <argument>
                <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
                <enumValue>
                  <field name="LinkDemand" />
                </enumValue>
              </argument>
              <assignment name="Flags">
                <type api="T:System.Security.Permissions.SecurityPermissionFlag" ref="false" />
                <enumValue>
                  <field name="Infrastructure" />
                </enumValue>
              </assignment>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.Persistent" ref="true" />
        </attribute>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.BackwardCompatibilityID" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>{31426AE4-54E2-4EF3-9D8F-C3A1F4072167}</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.Component.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Component" ref="true" />
      </containers>
    </api>
    <api id="F:OOAdvantech.MetaDataRepository.Component._AssemblyString">
      <apidata name="_AssemblyString" group="member" subgroup="field" />
      <memberdata visibility="family" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Component" ref="true" />
      </containers>
    </api>
    <api id="F:OOAdvantech.MetaDataRepository.Component._Residents">
      <apidata name="_Residents" group="member" subgroup="field" />
      <memberdata visibility="family" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:OOAdvantech.Collections.Generic.Set`1" ref="true">
          <specialization>
            <type api="T:OOAdvantech.MetaDataRepository.MetaObject" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Component" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.Component.AddResident(OOAdvantech.MetaDataRepository.MetaObject)">
      <apidata name="AddResident" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="metaObject">
          <type api="T:OOAdvantech.MetaDataRepository.MetaObject" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Component" ref="true" />
      </containers>
    </api>
    <api id="P:OOAdvantech.MetaDataRepository.Component.AssemblyString">
      <apidata name="AssemblyString" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_AssemblyString" />
      <setter name="set_AssemblyString" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Component" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.PersistentMember" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>_AssemblyString</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.BackwardCompatibilityID" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>+1</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:OOAdvantech.MetaDataRepository.Component.Context">
      <apidata name="Context" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Context" />
      <setter name="set_Context" />
      <returns>
        <type api="T:OOAdvantech.MetaDataRepository.Storage" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Component" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.AssociationAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>StorageComponent</value>
          </argument>
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:OOAdvantech.MetaDataRepository.Storage" ref="true" />
            </typeValue>
          </argument>
          <argument>
            <type api="T:OOAdvantech.MetaDataRepository.Roles" ref="false" />
            <enumValue>
              <field name="RoleB" />
            </enumValue>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>{32C3C895-BD31-4CB4-983A-3D342EF936E1}</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.AssociationEndBehavior" ref="true" />
          <argument>
            <type api="T:OOAdvantech.MetaDataRepository.PersistencyFlag" ref="false" />
            <enumValue>
              <field name="OnConstruction" />
            </enumValue>
          </argument>
        </attribute>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.RoleBMultiplicityRangeAttribute" ref="true" />
          <argument>
            <type api="T:System.UInt64" ref="false" />
            <value>0</value>
          </argument>
          <argument>
            <type api="T:System.UInt64" ref="false" />
            <value>1</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.PersistentMember" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>_Context</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.Component.CreateClass(System.String,System.String)">
      <apidata name="CreateClass" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="className">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="namespaceName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:OOAdvantech.MetaDataRepository.Class" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Component" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.Component.CreateEnumeration(System.String,System.String)">
      <apidata name="CreateEnumeration" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="enumerationName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="namespaceName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:OOAdvantech.MetaDataRepository.Enumeration" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Component" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.Component.CreateInterface(System.String,System.String)">
      <apidata name="CreateInterface" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="interfaceName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="namespaceName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:OOAdvantech.MetaDataRepository.Interface" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Component" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.Component.CreateStructure(System.String,System.String)">
      <apidata name="CreateStructure" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="structureName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="namespaceName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:OOAdvantech.MetaDataRepository.Structure" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Component" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.Component.ErrorCheck(System.Collections.ArrayList@)">
      <apidata name="ErrorCheck" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:OOAdvantech.MetaDataRepository.Classifier.ErrorCheck(System.Collections.ArrayList@)">
          <type api="T:OOAdvantech.MetaDataRepository.Classifier" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="errors">
          <referenceTo>
            <type api="T:System.Collections.ArrayList" ref="true" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Component" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.Component.GetClassifier(System.String,System.Boolean)">
      <apidata name="GetClassifier" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="fullName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="caseSensitive">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:OOAdvantech.MetaDataRepository.Classifier" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Component" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.Component.GetComponent(System.Reflection.Assembly)">
      <apidata name="GetComponent" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="assembly">
          <type api="T:System.Reflection.Assembly" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:OOAdvantech.MetaDataRepository.Component" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Component" ref="true" />
      </containers>
    </api>
    <api id="P:OOAdvantech.MetaDataRepository.Component.HasPersistentClasses">
      <apidata name="HasPersistentClasses" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_HasPersistentClasses" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Component" ref="true" />
      </containers>
    </api>
    <api id="P:OOAdvantech.MetaDataRepository.Component.ImplementationUnit">
      <apidata name="ImplementationUnit" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:OOAdvantech.MetaDataRepository.MetaObject.ImplementationUnit">
          <type api="T:OOAdvantech.MetaDataRepository.MetaObject" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_ImplementationUnit" />
      <returns>
        <type api="T:OOAdvantech.MetaDataRepository.Component" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Component" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.Component.RemoveResident(OOAdvantech.MetaDataRepository.MetaObject)">
      <apidata name="RemoveResident" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="metaObject">
          <type api="T:OOAdvantech.MetaDataRepository.MetaObject" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Component" ref="true" />
      </containers>
    </api>
    <api id="P:OOAdvantech.MetaDataRepository.Component.Residents">
      <apidata name="Residents" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_Residents" />
      <returns>
        <type api="T:OOAdvantech.Collections.Generic.Set`1" ref="true">
          <specialization>
            <type api="T:OOAdvantech.MetaDataRepository.MetaObject" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Component" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.RoleAMultiplicityRangeAttribute" ref="true" />
          <argument>
            <type api="T:System.UInt64" ref="false" />
            <value>0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.PersistentMember" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>_Residents</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.AssociationAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Implementation</value>
          </argument>
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:OOAdvantech.MetaDataRepository.MetaObject" ref="true" />
            </typeValue>
          </argument>
          <argument>
            <type api="T:OOAdvantech.MetaDataRepository.Roles" ref="false" />
            <enumValue>
              <field name="RoleA" />
            </enumValue>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>{8FAF0E7A-D1F5-42A0-9887-25790C5913BB}</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.AssociationEndBehavior" ref="true" />
          <argument>
            <type api="T:OOAdvantech.MetaDataRepository.PersistencyFlag" ref="false" />
            <enumValue>
              <field name="Default" />
              <field name="ReferentialIntegrity" />
              <field name="CascadeDelete" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.Component.Synchronize(OOAdvantech.MetaDataRepository.MetaObject)">
      <apidata name="Synchronize" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:OOAdvantech.MetaDataRepository.Classifier.Synchronize(OOAdvantech.MetaDataRepository.MetaObject)">
          <type api="T:OOAdvantech.MetaDataRepository.Classifier" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="OriginMetaObject">
          <type api="T:OOAdvantech.MetaDataRepository.MetaObject" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Component" ref="true" />
      </containers>
    </api>
    <api id="T:OOAdvantech.MetaDataRepository.ContainedItemsSynchronizer">
      <apidata name="ContainedItemsSynchronizer" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="F:OOAdvantech.MetaDataRepository.ContainedItemsSynchronizer.AddedObjectsCommands" />
        <element api="F:OOAdvantech.MetaDataRepository.ContainedItemsSynchronizer.DeletedObjectsCommands" />
        <element api="F:OOAdvantech.MetaDataRepository.ContainedItemsSynchronizer.theMetaObjectsStack" />
        <element api="F:OOAdvantech.MetaDataRepository.ContainedItemsSynchronizer.Source" />
        <element api="F:OOAdvantech.MetaDataRepository.ContainedItemsSynchronizer.Updated" />
        <element api="M:OOAdvantech.MetaDataRepository.ContainedItemsSynchronizer.ExecuteAddCommand" />
        <element api="M:OOAdvantech.MetaDataRepository.ContainedItemsSynchronizer.ExecuteDeleteCommand" />
        <element api="M:OOAdvantech.MetaDataRepository.ContainedItemsSynchronizer.Synchronize" />
        <element api="M:OOAdvantech.MetaDataRepository.ContainedItemsSynchronizer.#ctor(System.Collections.IList,System.Collections.IList,OOAdvantech.MetaDataRepository.MetaObject)" />
        <element api="M:OOAdvantech.MetaDataRepository.ContainedItemsSynchronizer.FindModifications" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.ContainedItemsSynchronizer.#ctor(System.Collections.IList,System.Collections.IList,OOAdvantech.MetaDataRepository.MetaObject)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="theSource">
          <type api="T:System.Collections.IList" ref="true" />
        </parameter>
        <parameter name="theUpdated">
          <type api="T:System.Collections.IList" ref="true" />
        </parameter>
        <parameter name="placeIdentifier">
          <type api="T:OOAdvantech.MetaDataRepository.MetaObject" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.ContainedItemsSynchronizer" ref="true" />
      </containers>
    </api>
    <api id="F:OOAdvantech.MetaDataRepository.ContainedItemsSynchronizer.AddedObjectsCommands">
      <apidata name="AddedObjectsCommands" group="member" subgroup="field" />
      <memberdata visibility="public" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Collections.ArrayList" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.ContainedItemsSynchronizer" ref="true" />
      </containers>
    </api>
    <api id="F:OOAdvantech.MetaDataRepository.ContainedItemsSynchronizer.DeletedObjectsCommands">
      <apidata name="DeletedObjectsCommands" group="member" subgroup="field" />
      <memberdata visibility="public" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Collections.ArrayList" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.ContainedItemsSynchronizer" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.ContainedItemsSynchronizer.ExecuteAddCommand">
      <apidata name="ExecuteAddCommand" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.ContainedItemsSynchronizer" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.ContainedItemsSynchronizer.ExecuteDeleteCommand">
      <apidata name="ExecuteDeleteCommand" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.ContainedItemsSynchronizer" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.ContainedItemsSynchronizer.FindModifications">
      <apidata name="FindModifications" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.ContainedItemsSynchronizer" ref="true" />
      </containers>
    </api>
    <api id="F:OOAdvantech.MetaDataRepository.ContainedItemsSynchronizer.Source">
      <apidata name="Source" group="member" subgroup="field" />
      <memberdata visibility="public" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Collections.IList" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.ContainedItemsSynchronizer" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.ContainedItemsSynchronizer.Synchronize">
      <apidata name="Synchronize" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.ContainedItemsSynchronizer" ref="true" />
      </containers>
    </api>
    <api id="F:OOAdvantech.MetaDataRepository.ContainedItemsSynchronizer.theMetaObjectsStack">
      <apidata name="theMetaObjectsStack" group="member" subgroup="field" />
      <memberdata visibility="public" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:OOAdvantech.MetaDataRepository.MetaObjectsStack" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.ContainedItemsSynchronizer" ref="true" />
      </containers>
    </api>
    <api id="F:OOAdvantech.MetaDataRepository.ContainedItemsSynchronizer.Updated">
      <apidata name="Updated" group="member" subgroup="field" />
      <memberdata visibility="public" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Collections.IList" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.ContainedItemsSynchronizer" ref="true" />
      </containers>
    </api>
    <api id="T:OOAdvantech.MetaDataRepository.DataType">
      <apidata name="DataType" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:OOAdvantech.MetaDataRepository.Classifier" ref="true" />
          <type api="T:OOAdvantech.MetaDataRepository.Namespace" ref="true" />
          <type api="T:OOAdvantech.MetaDataRepository.MetaObject" ref="true" />
          <type api="T:System.MarshalByRefObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:OOAdvantech.MetaDataRepository.Primitive" ref="true" />
          <type api="T:OOAdvantech.MetaDataRepository.Structure" ref="true" />
          <type api="T:OOAdvantech.MetaDataRepository.Enumeration" ref="true" />
        </descendents>
      </family>
      <elements>
        <element api="M:OOAdvantech.MetaDataRepository.DataType.#ctor" />
        <element api="F:OOAdvantech.MetaDataRepository.Classifier._TemplateBinding" />
        <element api="F:OOAdvantech.MetaDataRepository.Classifier._LinkAssociation" />
        <element api="F:OOAdvantech.MetaDataRepository.Classifier.ClassifierHierarchyClassifiers" />
        <element api="F:OOAdvantech.MetaDataRepository.Classifier._Generalizations" />
        <element api="F:OOAdvantech.MetaDataRepository.Classifier._OwnedTemplateSignature" />
        <element api="F:OOAdvantech.MetaDataRepository.Classifier.ClassHierarchyAssociateRoles" />
        <element api="F:OOAdvantech.MetaDataRepository.Classifier.ClassHierarchyRoles" />
        <element api="F:OOAdvantech.MetaDataRepository.Classifier.ClassHierarchyAttributes" />
        <element api="F:OOAdvantech.MetaDataRepository.Classifier._Specializations" />
        <element api="F:OOAdvantech.MetaDataRepository.Classifier._Roles" />
        <element api="F:OOAdvantech.MetaDataRepository.Classifier._Features" />
        <element api="M:OOAdvantech.MetaDataRepository.Classifier.GetExtensionMetaObject(System.Type)" />
        <element api="M:OOAdvantech.MetaDataRepository.Classifier.ToString" />
        <element api="M:OOAdvantech.MetaDataRepository.Classifier.GetAllSpecializeClasifiers" />
        <element api="M:OOAdvantech.MetaDataRepository.Classifier.BuildCaseInsensitiveNames" />
        <element api="M:OOAdvantech.MetaDataRepository.Classifier.ErrorCheck(System.Collections.ArrayList@)" />
        <element api="M:OOAdvantech.MetaDataRepository.Classifier.IsA(OOAdvantech.MetaDataRepository.Classifier)" />
        <element api="M:OOAdvantech.MetaDataRepository.Classifier.Synchronize(OOAdvantech.MetaDataRepository.MetaObject)" />
        <element api="M:OOAdvantech.MetaDataRepository.Classifier.RemoveAssociation(OOAdvantech.MetaDataRepository.Association)" />
        <element api="M:OOAdvantech.MetaDataRepository.Classifier.GetGeneralClasifiers" />
        <element api="M:OOAdvantech.MetaDataRepository.Classifier.RefreshClassHierarchyCollections" />
        <element api="M:OOAdvantech.MetaDataRepository.Classifier.RemoveAttribute(OOAdvantech.MetaDataRepository.Attribute)" />
        <element api="M:OOAdvantech.MetaDataRepository.Classifier.GetAllGeneralClasifiers" />
        <element api="M:OOAdvantech.MetaDataRepository.Classifier.RemoveOperation(OOAdvantech.MetaDataRepository.Operation)" />
        <element api="M:OOAdvantech.MetaDataRepository.Classifier.GetAssignedComponents" />
        <element api="M:OOAdvantech.MetaDataRepository.Classifier.GetSpecializedClasifiers" />
        <element api="M:OOAdvantech.MetaDataRepository.Classifier.AddAssociation(System.String,OOAdvantech.MetaDataRepository.Roles,OOAdvantech.MetaDataRepository.Classifier,System.String)" />
        <element api="M:OOAdvantech.MetaDataRepository.Classifier.AddAttribute(System.String,OOAdvantech.MetaDataRepository.Classifier,System.String)" />
        <element api="M:OOAdvantech.MetaDataRepository.Classifier.AddOperation(System.String,OOAdvantech.MetaDataRepository.Classifier)" />
        <element api="M:OOAdvantech.MetaDataRepository.Classifier.GetAssociateRoles(System.Boolean)" />
        <element api="M:OOAdvantech.MetaDataRepository.Classifier.RemoveGeneralization(OOAdvantech.MetaDataRepository.Generalization)" />
        <element api="M:OOAdvantech.MetaDataRepository.Classifier.AddGeneralization(System.String,OOAdvantech.MetaDataRepository.Classifier)" />
        <element api="M:OOAdvantech.MetaDataRepository.Classifier.AddRole(OOAdvantech.MetaDataRepository.AssociationEnd)" />
        <element api="M:OOAdvantech.MetaDataRepository.Classifier.RemoveRole(OOAdvantech.MetaDataRepository.AssociationEnd)" />
        <element api="M:OOAdvantech.MetaDataRepository.Classifier.GetOperations(System.Boolean)" />
        <element api="M:OOAdvantech.MetaDataRepository.Classifier.GetOperations(System.String)" />
        <element api="M:OOAdvantech.MetaDataRepository.Classifier.GetOperations(System.String,System.Boolean)" />
        <element api="M:OOAdvantech.MetaDataRepository.Classifier.GetRoles(System.Boolean)" />
        <element api="M:OOAdvantech.MetaDataRepository.Classifier.GetRealizedAttributes" />
        <element api="M:OOAdvantech.MetaDataRepository.Classifier.GetAttributes(System.Boolean)" />
        <element api="M:OOAdvantech.MetaDataRepository.Classifier.GetOperation(System.String,System.String[],System.Boolean)" />
        <element api="M:OOAdvantech.MetaDataRepository.Classifier.GetRole(System.String)" />
        <element api="M:OOAdvantech.MetaDataRepository.Classifier.GetFeature(System.String,System.Boolean)" />
        <element api="P:OOAdvantech.MetaDataRepository.Classifier.IsTemplate" />
        <element api="P:OOAdvantech.MetaDataRepository.Classifier.IsTemplateInstantiation" />
        <element api="P:OOAdvantech.MetaDataRepository.Classifier.Constractors" />
        <element api="P:OOAdvantech.MetaDataRepository.Classifier.TemplateBinding" />
        <element api="P:OOAdvantech.MetaDataRepository.Classifier.LinkAssociation" />
        <element api="P:OOAdvantech.MetaDataRepository.Classifier.Generalizations" />
        <element api="P:OOAdvantech.MetaDataRepository.Classifier.StorageCellsOfThisType" />
        <element api="P:OOAdvantech.MetaDataRepository.Classifier.IsBindedClassifier" />
        <element api="P:OOAdvantech.MetaDataRepository.Classifier.ContainsTemplateParameter" />
        <element api="P:OOAdvantech.MetaDataRepository.Classifier.OwnedTemplateSignature" />
        <element api="P:OOAdvantech.MetaDataRepository.Classifier.ClassHierarchyLinkAssociation" />
        <element api="P:OOAdvantech.MetaDataRepository.Classifier.Specializations" />
        <element api="P:OOAdvantech.MetaDataRepository.Classifier.Roles" />
        <element api="P:OOAdvantech.MetaDataRepository.Classifier.Features" />
        <element api="F:OOAdvantech.MetaDataRepository.Namespace._OwnedElements" />
        <element api="M:OOAdvantech.MetaDataRepository.Namespace.MakeNameUnaryInNamesapce(OOAdvantech.MetaDataRepository.MetaObject)" />
        <element api="M:OOAdvantech.MetaDataRepository.Namespace.GetExtensionMetaObjects" />
        <element api="M:OOAdvantech.MetaDataRepository.Namespace.AddOwnedElement(OOAdvantech.MetaDataRepository.MetaObject)" />
        <element api="M:OOAdvantech.MetaDataRepository.Namespace.RemoveOwnedElement(OOAdvantech.MetaDataRepository.MetaObject)" />
        <element api="P:OOAdvantech.MetaDataRepository.Namespace.OwnedElements" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject._CaseInsensitiveName" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject._ImplementationUnit" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject.LockObject" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject.ReaderWriterLock" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject.Properties" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject._Name" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject.MetaObjectIDStream" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject._Identity" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject._ClientDependencies" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject._SupplierDependencies" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject._Namespace" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject.Visibility" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.MetaObjectChangeState" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.ShallowSynchronize(OOAdvantech.MetaDataRepository.MetaObject)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.AddDependency(System.String,OOAdvantech.MetaDataRepository.MetaObject)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.GetDynamicPropertiesAsXmlString" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.SetIdentity(OOAdvantech.MetaDataRepository.MetaObjectID)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.SetNamespace(OOAdvantech.MetaDataRepository.Namespace)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.GetPropertyValue``1(System.String,System.String)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.GetPropertyValue(System.Type,System.String,System.String)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.PutPropertyValue(System.String,System.String,System.Object)" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.CaseInsensitiveName" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.ImplementationUnit" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.OQLName" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.Name" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.FullName" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.OQLFullName" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.Identity" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.ClientDependencies" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.SupplierDependencies" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.Namespace" />
        <element api="E:OOAdvantech.MetaDataRepository.MetaObject.Changed" />
        <element api="M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="cloneIdentity">
              <type api="T:System.Boolean" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.MarshalByRefObject" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.MarshalByRefObject" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.MarshalByRefObject.GetLifetimeService">
          <apidata name="GetLifetimeService" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.MarshalByRefObject" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Security.Permissions.SecurityPermissionAttribute" ref="true" />
              <argument>
                <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
                <enumValue>
                  <field name="LinkDemand" />
                </enumValue>
              </argument>
              <assignment name="Flags">
                <type api="T:System.Security.Permissions.SecurityPermissionFlag" ref="false" />
                <enumValue>
                  <field name="Infrastructure" />
                </enumValue>
              </assignment>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.MarshalByRefObject.InitializeLifetimeService">
          <apidata name="InitializeLifetimeService" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.MarshalByRefObject" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Security.Permissions.SecurityPermissionAttribute" ref="true" />
              <argument>
                <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
                <enumValue>
                  <field name="LinkDemand" />
                </enumValue>
              </argument>
              <assignment name="Flags">
                <type api="T:System.Security.Permissions.SecurityPermissionFlag" ref="false" />
                <enumValue>
                  <field name="Infrastructure" />
                </enumValue>
              </assignment>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.MarshalByRefObject.CreateObjRef(System.Type)">
          <apidata name="CreateObjRef" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="requestedType">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Runtime.Remoting.ObjRef" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.MarshalByRefObject" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Security.Permissions.SecurityPermissionAttribute" ref="true" />
              <argument>
                <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
                <enumValue>
                  <field name="LinkDemand" />
                </enumValue>
              </argument>
              <assignment name="Flags">
                <type api="T:System.Security.Permissions.SecurityPermissionFlag" ref="false" />
                <enumValue>
                  <field name="Infrastructure" />
                </enumValue>
              </assignment>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.DataType.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.DataType" ref="true" />
      </containers>
    </api>
    <api id="T:OOAdvantech.MetaDataRepository.DeleteCommand">
      <apidata name="DeleteCommand" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="F:OOAdvantech.MetaDataRepository.DeleteCommand.CandidateForDeleteObject" />
        <element api="F:OOAdvantech.MetaDataRepository.DeleteCommand.UpdateCollection" />
        <element api="M:OOAdvantech.MetaDataRepository.DeleteCommand.#ctor(OOAdvantech.MetaDataRepository.MetaObject,System.Collections.IList)" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.DeleteCommand.#ctor(OOAdvantech.MetaDataRepository.MetaObject,System.Collections.IList)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="theMetaObject">
          <type api="T:OOAdvantech.MetaDataRepository.MetaObject" ref="true" />
        </parameter>
        <parameter name="theUpdateCollection">
          <type api="T:System.Collections.IList" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.DeleteCommand" ref="true" />
      </containers>
    </api>
    <api id="F:OOAdvantech.MetaDataRepository.DeleteCommand.CandidateForDeleteObject">
      <apidata name="CandidateForDeleteObject" group="member" subgroup="field" />
      <memberdata visibility="public" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:OOAdvantech.MetaDataRepository.MetaObject" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.DeleteCommand" ref="true" />
      </containers>
    </api>
    <api id="F:OOAdvantech.MetaDataRepository.DeleteCommand.UpdateCollection">
      <apidata name="UpdateCollection" group="member" subgroup="field" />
      <memberdata visibility="public" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Collections.IList" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.DeleteCommand" ref="true" />
      </containers>
    </api>
    <api id="T:OOAdvantech.MetaDataRepository.Dependency">
      <apidata name="Dependency" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:OOAdvantech.MetaDataRepository.Relationship" ref="true" />
          <type api="T:OOAdvantech.MetaDataRepository.MetaObject" ref="true" />
          <type api="T:System.MarshalByRefObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:OOAdvantech.MetaDataRepository.TemplateBinding" ref="true" />
        </descendents>
      </family>
      <elements>
        <element api="F:OOAdvantech.MetaDataRepository.Dependency._Client" />
        <element api="F:OOAdvantech.MetaDataRepository.Dependency._Supplier" />
        <element api="M:OOAdvantech.MetaDataRepository.Dependency.#ctor" />
        <element api="M:OOAdvantech.MetaDataRepository.Dependency.#ctor(System.String,OOAdvantech.MetaDataRepository.MetaObject,OOAdvantech.MetaDataRepository.MetaObject)" />
        <element api="M:OOAdvantech.MetaDataRepository.Dependency.Synchronize(OOAdvantech.MetaDataRepository.MetaObject)" />
        <element api="M:OOAdvantech.MetaDataRepository.Dependency.GetExtensionMetaObjects" />
        <element api="P:OOAdvantech.MetaDataRepository.Dependency.Identity" />
        <element api="P:OOAdvantech.MetaDataRepository.Dependency.Client" />
        <element api="P:OOAdvantech.MetaDataRepository.Dependency.Supplier" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject._CaseInsensitiveName" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject._ImplementationUnit" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject.LockObject" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject.ReaderWriterLock" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject.Properties" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject._Name" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject.MetaObjectIDStream" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject._Identity" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject._ClientDependencies" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject._SupplierDependencies" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject._Namespace" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject.Visibility" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.MetaObjectChangeState" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.ShallowSynchronize(OOAdvantech.MetaDataRepository.MetaObject)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.AddDependency(System.String,OOAdvantech.MetaDataRepository.MetaObject)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.ErrorCheck(System.Collections.ArrayList@)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.GetDynamicPropertiesAsXmlString" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.SetIdentity(OOAdvantech.MetaDataRepository.MetaObjectID)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.GetExtensionMetaObject(System.Type)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.SetNamespace(OOAdvantech.MetaDataRepository.Namespace)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.GetPropertyValue``1(System.String,System.String)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.GetPropertyValue(System.Type,System.String,System.String)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.PutPropertyValue(System.String,System.String,System.Object)" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.CaseInsensitiveName" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.ImplementationUnit" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.OQLName" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.Name" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.FullName" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.OQLFullName" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.ClientDependencies" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.SupplierDependencies" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.Namespace" />
        <element api="E:OOAdvantech.MetaDataRepository.MetaObject.Changed" />
        <element api="M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="cloneIdentity">
              <type api="T:System.Boolean" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.MarshalByRefObject" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.MarshalByRefObject" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.MarshalByRefObject.GetLifetimeService">
          <apidata name="GetLifetimeService" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.MarshalByRefObject" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Security.Permissions.SecurityPermissionAttribute" ref="true" />
              <argument>
                <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
                <enumValue>
                  <field name="LinkDemand" />
                </enumValue>
              </argument>
              <assignment name="Flags">
                <type api="T:System.Security.Permissions.SecurityPermissionFlag" ref="false" />
                <enumValue>
                  <field name="Infrastructure" />
                </enumValue>
              </assignment>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.MarshalByRefObject.InitializeLifetimeService">
          <apidata name="InitializeLifetimeService" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.MarshalByRefObject" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Security.Permissions.SecurityPermissionAttribute" ref="true" />
              <argument>
                <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
                <enumValue>
                  <field name="LinkDemand" />
                </enumValue>
              </argument>
              <assignment name="Flags">
                <type api="T:System.Security.Permissions.SecurityPermissionFlag" ref="false" />
                <enumValue>
                  <field name="Infrastructure" />
                </enumValue>
              </assignment>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.MarshalByRefObject.CreateObjRef(System.Type)">
          <apidata name="CreateObjRef" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="requestedType">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Runtime.Remoting.ObjRef" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.MarshalByRefObject" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Security.Permissions.SecurityPermissionAttribute" ref="true" />
              <argument>
                <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
                <enumValue>
                  <field name="LinkDemand" />
                </enumValue>
              </argument>
              <assignment name="Flags">
                <type api="T:System.Security.Permissions.SecurityPermissionFlag" ref="false" />
                <enumValue>
                  <field name="Infrastructure" />
                </enumValue>
              </assignment>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.Persistent" ref="true" />
        </attribute>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.BackwardCompatibilityID" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>{4CB15518-9079-4AC6-9251-5058EB1274DB}</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.Dependency.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Dependency" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.Dependency.#ctor(System.String,OOAdvantech.MetaDataRepository.MetaObject,OOAdvantech.MetaDataRepository.MetaObject)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="client">
          <type api="T:OOAdvantech.MetaDataRepository.MetaObject" ref="true" />
        </parameter>
        <parameter name="supplier">
          <type api="T:OOAdvantech.MetaDataRepository.MetaObject" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Dependency" ref="true" />
      </containers>
    </api>
    <api id="F:OOAdvantech.MetaDataRepository.Dependency._Client">
      <apidata name="_Client" group="member" subgroup="field" />
      <memberdata visibility="family" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:OOAdvantech.MetaDataRepository.MetaObject" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Dependency" ref="true" />
      </containers>
    </api>
    <api id="F:OOAdvantech.MetaDataRepository.Dependency._Supplier">
      <apidata name="_Supplier" group="member" subgroup="field" />
      <memberdata visibility="family" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:OOAdvantech.MetaDataRepository.MetaObject" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Dependency" ref="true" />
      </containers>
    </api>
    <api id="P:OOAdvantech.MetaDataRepository.Dependency.Client">
      <apidata name="Client" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Client" />
      <setter name="set_Client" />
      <returns>
        <type api="T:OOAdvantech.MetaDataRepository.MetaObject" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Dependency" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.RoleAMultiplicityRangeAttribute" ref="true" />
          <argument>
            <type api="T:System.UInt64" ref="false" />
            <value>1</value>
          </argument>
          <argument>
            <type api="T:System.UInt64" ref="false" />
            <value>1</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.PersistentMember" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>_Client</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.AssociationEndBehavior" ref="true" />
          <argument>
            <type api="T:OOAdvantech.MetaDataRepository.PersistencyFlag" ref="false" />
            <enumValue>
              <field name="OnConstruction" />
            </enumValue>
          </argument>
        </attribute>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.AssociationAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>ClientDependency</value>
          </argument>
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:OOAdvantech.MetaDataRepository.MetaObject" ref="true" />
            </typeValue>
          </argument>
          <argument>
            <type api="T:OOAdvantech.MetaDataRepository.Roles" ref="false" />
            <enumValue>
              <field name="RoleA" />
            </enumValue>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>{54E7CCBA-6C18-4E9A-A69B-7C26B1ACFF41}</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.Dependency.GetExtensionMetaObjects">
      <apidata name="GetExtensionMetaObjects" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:OOAdvantech.MetaDataRepository.MetaObject.GetExtensionMetaObjects">
          <type api="T:OOAdvantech.MetaDataRepository.MetaObject" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Collections.ArrayList" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Dependency" ref="true" />
      </containers>
    </api>
    <api id="P:OOAdvantech.MetaDataRepository.Dependency.Identity">
      <apidata name="Identity" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:OOAdvantech.MetaDataRepository.MetaObject.Identity">
          <type api="T:OOAdvantech.MetaDataRepository.MetaObject" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_Identity" />
      <returns>
        <type api="T:OOAdvantech.MetaDataRepository.MetaObjectID" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Dependency" ref="true" />
      </containers>
    </api>
    <api id="P:OOAdvantech.MetaDataRepository.Dependency.Supplier">
      <apidata name="Supplier" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Supplier" />
      <setter name="set_Supplier" />
      <returns>
        <type api="T:OOAdvantech.MetaDataRepository.MetaObject" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Dependency" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.AssociationEndBehavior" ref="true" />
          <argument>
            <type api="T:OOAdvantech.MetaDataRepository.PersistencyFlag" ref="false" />
            <enumValue>
              <field name="OnConstruction" />
            </enumValue>
          </argument>
        </attribute>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.RoleAMultiplicityRangeAttribute" ref="true" />
          <argument>
            <type api="T:System.UInt64" ref="false" />
            <value>1</value>
          </argument>
          <argument>
            <type api="T:System.UInt64" ref="false" />
            <value>1</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.AssociationAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>SupplierDependency</value>
          </argument>
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:OOAdvantech.MetaDataRepository.MetaObject" ref="true" />
            </typeValue>
          </argument>
          <argument>
            <type api="T:OOAdvantech.MetaDataRepository.Roles" ref="false" />
            <enumValue>
              <field name="RoleA" />
            </enumValue>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>{945370AF-442A-490A-A336-9EE77D07F621}</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.PersistentMember" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>_Supplier</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.Dependency.Synchronize(OOAdvantech.MetaDataRepository.MetaObject)">
      <apidata name="Synchronize" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:OOAdvantech.MetaDataRepository.MetaObject.Synchronize(OOAdvantech.MetaDataRepository.MetaObject)">
          <type api="T:OOAdvantech.MetaDataRepository.MetaObject" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="OriginMetaObject">
          <type api="T:OOAdvantech.MetaDataRepository.MetaObject" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Dependency" ref="true" />
      </containers>
    </api>
    <api id="T:OOAdvantech.MetaDataRepository.Enumeration">
      <apidata name="Enumeration" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:OOAdvantech.MetaDataRepository.DataType" ref="true" />
          <type api="T:OOAdvantech.MetaDataRepository.Classifier" ref="true" />
          <type api="T:OOAdvantech.MetaDataRepository.Namespace" ref="true" />
          <type api="T:OOAdvantech.MetaDataRepository.MetaObject" ref="true" />
          <type api="T:System.MarshalByRefObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:OOAdvantech.MetaDataRepository.Enumeration.#ctor" />
        <element api="F:OOAdvantech.MetaDataRepository.Classifier._TemplateBinding" />
        <element api="F:OOAdvantech.MetaDataRepository.Classifier._LinkAssociation" />
        <element api="F:OOAdvantech.MetaDataRepository.Classifier.ClassifierHierarchyClassifiers" />
        <element api="F:OOAdvantech.MetaDataRepository.Classifier._Generalizations" />
        <element api="F:OOAdvantech.MetaDataRepository.Classifier._OwnedTemplateSignature" />
        <element api="F:OOAdvantech.MetaDataRepository.Classifier.ClassHierarchyAssociateRoles" />
        <element api="F:OOAdvantech.MetaDataRepository.Classifier.ClassHierarchyRoles" />
        <element api="F:OOAdvantech.MetaDataRepository.Classifier.ClassHierarchyAttributes" />
        <element api="F:OOAdvantech.MetaDataRepository.Classifier._Specializations" />
        <element api="F:OOAdvantech.MetaDataRepository.Classifier._Roles" />
        <element api="F:OOAdvantech.MetaDataRepository.Classifier._Features" />
        <element api="M:OOAdvantech.MetaDataRepository.Classifier.GetExtensionMetaObject(System.Type)" />
        <element api="M:OOAdvantech.MetaDataRepository.Classifier.ToString" />
        <element api="M:OOAdvantech.MetaDataRepository.Classifier.GetAllSpecializeClasifiers" />
        <element api="M:OOAdvantech.MetaDataRepository.Classifier.BuildCaseInsensitiveNames" />
        <element api="M:OOAdvantech.MetaDataRepository.Classifier.ErrorCheck(System.Collections.ArrayList@)" />
        <element api="M:OOAdvantech.MetaDataRepository.Classifier.IsA(OOAdvantech.MetaDataRepository.Classifier)" />
        <element api="M:OOAdvantech.MetaDataRepository.Classifier.Synchronize(OOAdvantech.MetaDataRepository.MetaObject)" />
        <element api="M:OOAdvantech.MetaDataRepository.Classifier.RemoveAssociation(OOAdvantech.MetaDataRepository.Association)" />
        <element api="M:OOAdvantech.MetaDataRepository.Classifier.GetGeneralClasifiers" />
        <element api="M:OOAdvantech.MetaDataRepository.Classifier.RefreshClassHierarchyCollections" />
        <element api="M:OOAdvantech.MetaDataRepository.Classifier.RemoveAttribute(OOAdvantech.MetaDataRepository.Attribute)" />
        <element api="M:OOAdvantech.MetaDataRepository.Classifier.GetAllGeneralClasifiers" />
        <element api="M:OOAdvantech.MetaDataRepository.Classifier.RemoveOperation(OOAdvantech.MetaDataRepository.Operation)" />
        <element api="M:OOAdvantech.MetaDataRepository.Classifier.GetAssignedComponents" />
        <element api="M:OOAdvantech.MetaDataRepository.Classifier.GetSpecializedClasifiers" />
        <element api="M:OOAdvantech.MetaDataRepository.Classifier.AddAssociation(System.String,OOAdvantech.MetaDataRepository.Roles,OOAdvantech.MetaDataRepository.Classifier,System.String)" />
        <element api="M:OOAdvantech.MetaDataRepository.Classifier.AddAttribute(System.String,OOAdvantech.MetaDataRepository.Classifier,System.String)" />
        <element api="M:OOAdvantech.MetaDataRepository.Classifier.AddOperation(System.String,OOAdvantech.MetaDataRepository.Classifier)" />
        <element api="M:OOAdvantech.MetaDataRepository.Classifier.GetAssociateRoles(System.Boolean)" />
        <element api="M:OOAdvantech.MetaDataRepository.Classifier.RemoveGeneralization(OOAdvantech.MetaDataRepository.Generalization)" />
        <element api="M:OOAdvantech.MetaDataRepository.Classifier.AddGeneralization(System.String,OOAdvantech.MetaDataRepository.Classifier)" />
        <element api="M:OOAdvantech.MetaDataRepository.Classifier.AddRole(OOAdvantech.MetaDataRepository.AssociationEnd)" />
        <element api="M:OOAdvantech.MetaDataRepository.Classifier.RemoveRole(OOAdvantech.MetaDataRepository.AssociationEnd)" />
        <element api="M:OOAdvantech.MetaDataRepository.Classifier.GetOperations(System.Boolean)" />
        <element api="M:OOAdvantech.MetaDataRepository.Classifier.GetOperations(System.String)" />
        <element api="M:OOAdvantech.MetaDataRepository.Classifier.GetOperations(System.String,System.Boolean)" />
        <element api="M:OOAdvantech.MetaDataRepository.Classifier.GetRoles(System.Boolean)" />
        <element api="M:OOAdvantech.MetaDataRepository.Classifier.GetRealizedAttributes" />
        <element api="M:OOAdvantech.MetaDataRepository.Classifier.GetAttributes(System.Boolean)" />
        <element api="M:OOAdvantech.MetaDataRepository.Classifier.GetOperation(System.String,System.String[],System.Boolean)" />
        <element api="M:OOAdvantech.MetaDataRepository.Classifier.GetRole(System.String)" />
        <element api="M:OOAdvantech.MetaDataRepository.Classifier.GetFeature(System.String,System.Boolean)" />
        <element api="P:OOAdvantech.MetaDataRepository.Classifier.IsTemplate" />
        <element api="P:OOAdvantech.MetaDataRepository.Classifier.IsTemplateInstantiation" />
        <element api="P:OOAdvantech.MetaDataRepository.Classifier.Constractors" />
        <element api="P:OOAdvantech.MetaDataRepository.Classifier.TemplateBinding" />
        <element api="P:OOAdvantech.MetaDataRepository.Classifier.LinkAssociation" />
        <element api="P:OOAdvantech.MetaDataRepository.Classifier.Generalizations" />
        <element api="P:OOAdvantech.MetaDataRepository.Classifier.StorageCellsOfThisType" />
        <element api="P:OOAdvantech.MetaDataRepository.Classifier.IsBindedClassifier" />
        <element api="P:OOAdvantech.MetaDataRepository.Classifier.ContainsTemplateParameter" />
        <element api="P:OOAdvantech.MetaDataRepository.Classifier.OwnedTemplateSignature" />
        <element api="P:OOAdvantech.MetaDataRepository.Classifier.ClassHierarchyLinkAssociation" />
        <element api="P:OOAdvantech.MetaDataRepository.Classifier.Specializations" />
        <element api="P:OOAdvantech.MetaDataRepository.Classifier.Roles" />
        <element api="P:OOAdvantech.MetaDataRepository.Classifier.Features" />
        <element api="F:OOAdvantech.MetaDataRepository.Namespace._OwnedElements" />
        <element api="M:OOAdvantech.MetaDataRepository.Namespace.MakeNameUnaryInNamesapce(OOAdvantech.MetaDataRepository.MetaObject)" />
        <element api="M:OOAdvantech.MetaDataRepository.Namespace.GetExtensionMetaObjects" />
        <element api="M:OOAdvantech.MetaDataRepository.Namespace.AddOwnedElement(OOAdvantech.MetaDataRepository.MetaObject)" />
        <element api="M:OOAdvantech.MetaDataRepository.Namespace.RemoveOwnedElement(OOAdvantech.MetaDataRepository.MetaObject)" />
        <element api="P:OOAdvantech.MetaDataRepository.Namespace.OwnedElements" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject._CaseInsensitiveName" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject._ImplementationUnit" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject.LockObject" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject.ReaderWriterLock" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject.Properties" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject._Name" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject.MetaObjectIDStream" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject._Identity" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject._ClientDependencies" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject._SupplierDependencies" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject._Namespace" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject.Visibility" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.MetaObjectChangeState" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.ShallowSynchronize(OOAdvantech.MetaDataRepository.MetaObject)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.AddDependency(System.String,OOAdvantech.MetaDataRepository.MetaObject)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.GetDynamicPropertiesAsXmlString" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.SetIdentity(OOAdvantech.MetaDataRepository.MetaObjectID)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.SetNamespace(OOAdvantech.MetaDataRepository.Namespace)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.GetPropertyValue``1(System.String,System.String)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.GetPropertyValue(System.Type,System.String,System.String)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.PutPropertyValue(System.String,System.String,System.Object)" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.CaseInsensitiveName" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.ImplementationUnit" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.OQLName" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.Name" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.FullName" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.OQLFullName" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.Identity" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.ClientDependencies" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.SupplierDependencies" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.Namespace" />
        <element api="E:OOAdvantech.MetaDataRepository.MetaObject.Changed" />
        <element api="M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="cloneIdentity">
              <type api="T:System.Boolean" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.MarshalByRefObject" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.MarshalByRefObject" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.MarshalByRefObject.GetLifetimeService">
          <apidata name="GetLifetimeService" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.MarshalByRefObject" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Security.Permissions.SecurityPermissionAttribute" ref="true" />
              <argument>
                <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
                <enumValue>
                  <field name="LinkDemand" />
                </enumValue>
              </argument>
              <assignment name="Flags">
                <type api="T:System.Security.Permissions.SecurityPermissionFlag" ref="false" />
                <enumValue>
                  <field name="Infrastructure" />
                </enumValue>
              </assignment>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.MarshalByRefObject.InitializeLifetimeService">
          <apidata name="InitializeLifetimeService" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.MarshalByRefObject" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Security.Permissions.SecurityPermissionAttribute" ref="true" />
              <argument>
                <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
                <enumValue>
                  <field name="LinkDemand" />
                </enumValue>
              </argument>
              <assignment name="Flags">
                <type api="T:System.Security.Permissions.SecurityPermissionFlag" ref="false" />
                <enumValue>
                  <field name="Infrastructure" />
                </enumValue>
              </assignment>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.MarshalByRefObject.CreateObjRef(System.Type)">
          <apidata name="CreateObjRef" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="requestedType">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Runtime.Remoting.ObjRef" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.MarshalByRefObject" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Security.Permissions.SecurityPermissionAttribute" ref="true" />
              <argument>
                <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
                <enumValue>
                  <field name="LinkDemand" />
                </enumValue>
              </argument>
              <assignment name="Flags">
                <type api="T:System.Security.Permissions.SecurityPermissionFlag" ref="false" />
                <enumValue>
                  <field name="Infrastructure" />
                </enumValue>
              </assignment>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.Enumeration.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Enumeration" ref="true" />
      </containers>
    </api>
    <api id="T:OOAdvantech.MetaDataRepository.Feature">
      <apidata name="Feature" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:OOAdvantech.MetaDataRepository.MetaObject" ref="true" />
          <type api="T:System.MarshalByRefObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:OOAdvantech.MetaDataRepository.StructuralFeature" ref="true" />
          <type api="T:OOAdvantech.MetaDataRepository.AssociationEndRealization" ref="true" />
          <type api="T:OOAdvantech.MetaDataRepository.BehavioralFeature" ref="true" />
        </descendents>
      </family>
      <elements>
        <element api="F:OOAdvantech.MetaDataRepository.Feature._IsStatic" />
        <element api="F:OOAdvantech.MetaDataRepository.Feature._Owner" />
        <element api="M:OOAdvantech.MetaDataRepository.Feature.#ctor" />
        <element api="P:OOAdvantech.MetaDataRepository.Feature.IsStatic" />
        <element api="P:OOAdvantech.MetaDataRepository.Feature.Owner" />
        <element api="P:OOAdvantech.MetaDataRepository.Feature.ImplementationUnit" />
        <element api="P:OOAdvantech.MetaDataRepository.Feature.Namespace" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject._CaseInsensitiveName" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject._ImplementationUnit" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject.LockObject" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject.ReaderWriterLock" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject.Properties" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject._Name" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject.MetaObjectIDStream" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject._Identity" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject._ClientDependencies" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject._SupplierDependencies" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject._Namespace" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject.Visibility" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.MetaObjectChangeState" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.ShallowSynchronize(OOAdvantech.MetaDataRepository.MetaObject)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.AddDependency(System.String,OOAdvantech.MetaDataRepository.MetaObject)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.ErrorCheck(System.Collections.ArrayList@)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.GetDynamicPropertiesAsXmlString" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.SetIdentity(OOAdvantech.MetaDataRepository.MetaObjectID)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.Synchronize(OOAdvantech.MetaDataRepository.MetaObject)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.GetExtensionMetaObject(System.Type)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.GetExtensionMetaObjects" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.SetNamespace(OOAdvantech.MetaDataRepository.Namespace)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.GetPropertyValue``1(System.String,System.String)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.GetPropertyValue(System.Type,System.String,System.String)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.PutPropertyValue(System.String,System.String,System.Object)" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.CaseInsensitiveName" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.OQLName" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.Name" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.FullName" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.OQLFullName" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.Identity" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.ClientDependencies" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.SupplierDependencies" />
        <element api="E:OOAdvantech.MetaDataRepository.MetaObject.Changed" />
        <element api="M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="cloneIdentity">
              <type api="T:System.Boolean" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.MarshalByRefObject" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.MarshalByRefObject" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.MarshalByRefObject.GetLifetimeService">
          <apidata name="GetLifetimeService" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.MarshalByRefObject" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Security.Permissions.SecurityPermissionAttribute" ref="true" />
              <argument>
                <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
                <enumValue>
                  <field name="LinkDemand" />
                </enumValue>
              </argument>
              <assignment name="Flags">
                <type api="T:System.Security.Permissions.SecurityPermissionFlag" ref="false" />
                <enumValue>
                  <field name="Infrastructure" />
                </enumValue>
              </assignment>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.MarshalByRefObject.InitializeLifetimeService">
          <apidata name="InitializeLifetimeService" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.MarshalByRefObject" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Security.Permissions.SecurityPermissionAttribute" ref="true" />
              <argument>
                <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
                <enumValue>
                  <field name="LinkDemand" />
                </enumValue>
              </argument>
              <assignment name="Flags">
                <type api="T:System.Security.Permissions.SecurityPermissionFlag" ref="false" />
                <enumValue>
                  <field name="Infrastructure" />
                </enumValue>
              </assignment>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.MarshalByRefObject.CreateObjRef(System.Type)">
          <apidata name="CreateObjRef" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="requestedType">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Runtime.Remoting.ObjRef" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.MarshalByRefObject" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Security.Permissions.SecurityPermissionAttribute" ref="true" />
              <argument>
                <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
                <enumValue>
                  <field name="LinkDemand" />
                </enumValue>
              </argument>
              <assignment name="Flags">
                <type api="T:System.Security.Permissions.SecurityPermissionFlag" ref="false" />
                <enumValue>
                  <field name="Infrastructure" />
                </enumValue>
              </assignment>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.Persistent" ref="true" />
        </attribute>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.BackwardCompatibilityID" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>{E2632C55-8224-4D48-BFCD-40B5C83DC347}</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.Feature.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Feature" ref="true" />
      </containers>
    </api>
    <api id="F:OOAdvantech.MetaDataRepository.Feature._IsStatic">
      <apidata name="_IsStatic" group="member" subgroup="field" />
      <memberdata visibility="family" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Feature" ref="true" />
      </containers>
    </api>
    <api id="F:OOAdvantech.MetaDataRepository.Feature._Owner">
      <apidata name="_Owner" group="member" subgroup="field" />
      <memberdata visibility="family" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:OOAdvantech.MetaDataRepository.Classifier" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Feature" ref="true" />
      </containers>
    </api>
    <api id="P:OOAdvantech.MetaDataRepository.Feature.ImplementationUnit">
      <apidata name="ImplementationUnit" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:OOAdvantech.MetaDataRepository.MetaObject.ImplementationUnit">
          <type api="T:OOAdvantech.MetaDataRepository.MetaObject" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_ImplementationUnit" />
      <returns>
        <type api="T:OOAdvantech.MetaDataRepository.Component" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Feature" ref="true" />
      </containers>
    </api>
    <api id="P:OOAdvantech.MetaDataRepository.Feature.IsStatic">
      <apidata name="IsStatic" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_IsStatic" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Feature" ref="true" />
      </containers>
    </api>
    <api id="P:OOAdvantech.MetaDataRepository.Feature.Namespace">
      <apidata name="Namespace" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:OOAdvantech.MetaDataRepository.MetaObject.Namespace">
          <type api="T:OOAdvantech.MetaDataRepository.MetaObject" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_Namespace" />
      <returns>
        <type api="T:OOAdvantech.MetaDataRepository.Namespace" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Feature" ref="true" />
      </containers>
    </api>
    <api id="P:OOAdvantech.MetaDataRepository.Feature.Owner">
      <apidata name="Owner" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_Owner" />
      <returns>
        <type api="T:OOAdvantech.MetaDataRepository.Classifier" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Feature" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.AssociationAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>ClassifierMember</value>
          </argument>
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:OOAdvantech.MetaDataRepository.Classifier" ref="true" />
            </typeValue>
          </argument>
          <argument>
            <type api="T:OOAdvantech.MetaDataRepository.Roles" ref="false" />
            <enumValue>
              <field name="RoleB" />
            </enumValue>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>{38679851-A962-46C4-A940-20522E07D301}</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.AssociationEndBehavior" ref="true" />
          <argument>
            <type api="T:OOAdvantech.MetaDataRepository.PersistencyFlag" ref="false" />
            <enumValue>
              <field name="OnConstruction" />
            </enumValue>
          </argument>
        </attribute>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.RoleBMultiplicityRangeAttribute" ref="true" />
          <argument>
            <type api="T:System.UInt64" ref="false" />
            <value>1</value>
          </argument>
          <argument>
            <type api="T:System.UInt64" ref="false" />
            <value>1</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.PersistentMember" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>_Owner</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="T:OOAdvantech.MetaDataRepository.Generalization">
      <apidata name="Generalization" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:OOAdvantech.MetaDataRepository.Relationship" ref="true" />
          <type api="T:OOAdvantech.MetaDataRepository.MetaObject" ref="true" />
          <type api="T:System.MarshalByRefObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="F:OOAdvantech.MetaDataRepository.Generalization._Parent" />
        <element api="F:OOAdvantech.MetaDataRepository.Generalization._Child" />
        <element api="M:OOAdvantech.MetaDataRepository.Generalization.#ctor" />
        <element api="M:OOAdvantech.MetaDataRepository.Generalization.#ctor(System.String,OOAdvantech.MetaDataRepository.Classifier,OOAdvantech.MetaDataRepository.Classifier)" />
        <element api="M:OOAdvantech.MetaDataRepository.Generalization.Synchronize(OOAdvantech.MetaDataRepository.MetaObject)" />
        <element api="M:OOAdvantech.MetaDataRepository.Generalization.GetExtensionMetaObjects" />
        <element api="P:OOAdvantech.MetaDataRepository.Generalization.Identity" />
        <element api="P:OOAdvantech.MetaDataRepository.Generalization.Parent" />
        <element api="P:OOAdvantech.MetaDataRepository.Generalization.Child" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject._CaseInsensitiveName" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject._ImplementationUnit" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject.LockObject" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject.ReaderWriterLock" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject.Properties" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject._Name" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject.MetaObjectIDStream" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject._Identity" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject._ClientDependencies" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject._SupplierDependencies" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject._Namespace" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject.Visibility" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.MetaObjectChangeState" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.ShallowSynchronize(OOAdvantech.MetaDataRepository.MetaObject)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.AddDependency(System.String,OOAdvantech.MetaDataRepository.MetaObject)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.ErrorCheck(System.Collections.ArrayList@)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.GetDynamicPropertiesAsXmlString" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.SetIdentity(OOAdvantech.MetaDataRepository.MetaObjectID)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.GetExtensionMetaObject(System.Type)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.SetNamespace(OOAdvantech.MetaDataRepository.Namespace)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.GetPropertyValue``1(System.String,System.String)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.GetPropertyValue(System.Type,System.String,System.String)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.PutPropertyValue(System.String,System.String,System.Object)" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.CaseInsensitiveName" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.ImplementationUnit" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.OQLName" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.Name" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.FullName" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.OQLFullName" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.ClientDependencies" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.SupplierDependencies" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.Namespace" />
        <element api="E:OOAdvantech.MetaDataRepository.MetaObject.Changed" />
        <element api="M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="cloneIdentity">
              <type api="T:System.Boolean" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.MarshalByRefObject" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.MarshalByRefObject" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.MarshalByRefObject.GetLifetimeService">
          <apidata name="GetLifetimeService" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.MarshalByRefObject" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Security.Permissions.SecurityPermissionAttribute" ref="true" />
              <argument>
                <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
                <enumValue>
                  <field name="LinkDemand" />
                </enumValue>
              </argument>
              <assignment name="Flags">
                <type api="T:System.Security.Permissions.SecurityPermissionFlag" ref="false" />
                <enumValue>
                  <field name="Infrastructure" />
                </enumValue>
              </assignment>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.MarshalByRefObject.InitializeLifetimeService">
          <apidata name="InitializeLifetimeService" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.MarshalByRefObject" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Security.Permissions.SecurityPermissionAttribute" ref="true" />
              <argument>
                <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
                <enumValue>
                  <field name="LinkDemand" />
                </enumValue>
              </argument>
              <assignment name="Flags">
                <type api="T:System.Security.Permissions.SecurityPermissionFlag" ref="false" />
                <enumValue>
                  <field name="Infrastructure" />
                </enumValue>
              </assignment>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.MarshalByRefObject.CreateObjRef(System.Type)">
          <apidata name="CreateObjRef" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="requestedType">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Runtime.Remoting.ObjRef" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.MarshalByRefObject" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Security.Permissions.SecurityPermissionAttribute" ref="true" />
              <argument>
                <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
                <enumValue>
                  <field name="LinkDemand" />
                </enumValue>
              </argument>
              <assignment name="Flags">
                <type api="T:System.Security.Permissions.SecurityPermissionFlag" ref="false" />
                <enumValue>
                  <field name="Infrastructure" />
                </enumValue>
              </assignment>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.Persistent" ref="true" />
        </attribute>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.BackwardCompatibilityID" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>{B4945084-65EC-4A00-AF7D-54836A055F4A}</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.Generalization.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Generalization" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.Generalization.#ctor(System.String,OOAdvantech.MetaDataRepository.Classifier,OOAdvantech.MetaDataRepository.Classifier)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="parentClassifier">
          <type api="T:OOAdvantech.MetaDataRepository.Classifier" ref="true" />
        </parameter>
        <parameter name="childClassifier">
          <type api="T:OOAdvantech.MetaDataRepository.Classifier" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Generalization" ref="true" />
      </containers>
    </api>
    <api id="F:OOAdvantech.MetaDataRepository.Generalization._Child">
      <apidata name="_Child" group="member" subgroup="field" />
      <memberdata visibility="family" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:OOAdvantech.MetaDataRepository.Classifier" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Generalization" ref="true" />
      </containers>
    </api>
    <api id="F:OOAdvantech.MetaDataRepository.Generalization._Parent">
      <apidata name="_Parent" group="member" subgroup="field" />
      <memberdata visibility="family" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:OOAdvantech.MetaDataRepository.Classifier" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Generalization" ref="true" />
      </containers>
    </api>
    <api id="P:OOAdvantech.MetaDataRepository.Generalization.Child">
      <apidata name="Child" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Child" />
      <setter name="set_Child" />
      <returns>
        <type api="T:OOAdvantech.MetaDataRepository.Classifier" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Generalization" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.RoleAMultiplicityRangeAttribute" ref="true" />
          <argument>
            <type api="T:System.UInt64" ref="false" />
            <value>1</value>
          </argument>
          <argument>
            <type api="T:System.UInt64" ref="false" />
            <value>1</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.AssociationAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Generalization</value>
          </argument>
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:OOAdvantech.MetaDataRepository.Classifier" ref="true" />
            </typeValue>
          </argument>
          <argument>
            <type api="T:OOAdvantech.MetaDataRepository.Roles" ref="false" />
            <enumValue>
              <field name="RoleA" />
            </enumValue>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>{31EE00E4-640A-493C-8662-08326CE3D600}</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.PersistentMember" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>_Child</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.AssociationEndBehavior" ref="true" />
          <argument>
            <type api="T:OOAdvantech.MetaDataRepository.PersistencyFlag" ref="false" />
            <enumValue>
              <field name="OnConstruction" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.Generalization.GetExtensionMetaObjects">
      <apidata name="GetExtensionMetaObjects" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:OOAdvantech.MetaDataRepository.MetaObject.GetExtensionMetaObjects">
          <type api="T:OOAdvantech.MetaDataRepository.MetaObject" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Collections.ArrayList" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Generalization" ref="true" />
      </containers>
    </api>
    <api id="P:OOAdvantech.MetaDataRepository.Generalization.Identity">
      <apidata name="Identity" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:OOAdvantech.MetaDataRepository.MetaObject.Identity">
          <type api="T:OOAdvantech.MetaDataRepository.MetaObject" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_Identity" />
      <returns>
        <type api="T:OOAdvantech.MetaDataRepository.MetaObjectID" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Generalization" ref="true" />
      </containers>
    </api>
    <api id="P:OOAdvantech.MetaDataRepository.Generalization.Parent">
      <apidata name="Parent" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Parent" />
      <setter name="set_Parent" />
      <returns>
        <type api="T:OOAdvantech.MetaDataRepository.Classifier" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Generalization" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.PersistentMember" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>_Parent</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.RoleAMultiplicityRangeAttribute" ref="true" />
          <argument>
            <type api="T:System.UInt64" ref="false" />
            <value>1</value>
          </argument>
          <argument>
            <type api="T:System.UInt64" ref="false" />
            <value>1</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.AssociationAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Specialization</value>
          </argument>
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:OOAdvantech.MetaDataRepository.Classifier" ref="true" />
            </typeValue>
          </argument>
          <argument>
            <type api="T:OOAdvantech.MetaDataRepository.Roles" ref="false" />
            <enumValue>
              <field name="RoleA" />
            </enumValue>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>{E591FA9E-B3D8-4699-B6FC-3BD5BB2EA4AC}</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.AssociationEndBehavior" ref="true" />
          <argument>
            <type api="T:OOAdvantech.MetaDataRepository.PersistencyFlag" ref="false" />
            <enumValue>
              <field name="OnConstruction" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.Generalization.Synchronize(OOAdvantech.MetaDataRepository.MetaObject)">
      <apidata name="Synchronize" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:OOAdvantech.MetaDataRepository.MetaObject.Synchronize(OOAdvantech.MetaDataRepository.MetaObject)">
          <type api="T:OOAdvantech.MetaDataRepository.MetaObject" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="OriginMetaObject">
          <type api="T:OOAdvantech.MetaDataRepository.MetaObject" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Generalization" ref="true" />
      </containers>
    </api>
    <api id="T:OOAdvantech.MetaDataRepository.IdentityPart">
      <apidata name="IdentityPart" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:OOAdvantech.MetaDataRepository.IIdentityPart" ref="true" />
      </implements>
      <elements>
        <element api="M:OOAdvantech.MetaDataRepository.IdentityPart.#ctor(System.String,System.String,System.Type)" />
        <element api="M:OOAdvantech.MetaDataRepository.IdentityPart.#ctor(OOAdvantech.MetaDataRepository.IIdentityPart)" />
        <element api="P:OOAdvantech.MetaDataRepository.IdentityPart.Name" />
        <element api="P:OOAdvantech.MetaDataRepository.IdentityPart.TypeName" />
        <element api="P:OOAdvantech.MetaDataRepository.IdentityPart.Type" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.IdentityPart.#ctor(OOAdvantech.MetaDataRepository.IIdentityPart)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="copyIdentityPart">
          <type api="T:OOAdvantech.MetaDataRepository.IIdentityPart" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.IdentityPart" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.IdentityPart.#ctor(System.String,System.String,System.Type)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="typeName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.IdentityPart" ref="true" />
      </containers>
    </api>
    <api id="P:OOAdvantech.MetaDataRepository.IdentityPart.Name">
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_Name" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <implements>
        <member api="P:OOAdvantech.MetaDataRepository.IIdentityPart.Name">
          <type api="T:OOAdvantech.MetaDataRepository.IIdentityPart" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.IdentityPart" ref="true" />
      </containers>
    </api>
    <api id="P:OOAdvantech.MetaDataRepository.IdentityPart.Type">
      <apidata name="Type" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_Type" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <implements>
        <member api="P:OOAdvantech.MetaDataRepository.IIdentityPart.Type">
          <type api="T:OOAdvantech.MetaDataRepository.IIdentityPart" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.IdentityPart" ref="true" />
      </containers>
    </api>
    <api id="P:OOAdvantech.MetaDataRepository.IdentityPart.TypeName">
      <apidata name="TypeName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_TypeName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <implements>
        <member api="P:OOAdvantech.MetaDataRepository.IIdentityPart.TypeName">
          <type api="T:OOAdvantech.MetaDataRepository.IIdentityPart" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.IdentityPart" ref="true" />
      </containers>
    </api>
    <api id="T:OOAdvantech.MetaDataRepository.IErrorLog">
      <apidata name="IErrorLog" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:OOAdvantech.MetaDataRepository.IErrorLog.WriteError(System.String)" />
      </elements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.IErrorLog.WriteError(System.String)">
      <apidata name="WriteError" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="error">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.IErrorLog" ref="true" />
      </containers>
    </api>
    <api id="T:OOAdvantech.MetaDataRepository.IgnoreErrorCheckAttribute">
      <apidata name="IgnoreErrorCheckAttribute" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:OOAdvantech.MetaDataRepository.IgnoreErrorCheckAttribute.#ctor" />
        <element api="M:System.Attribute.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.Equals(System.Object)">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.GetHashCode">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.Match(System.Object)">
          <apidata name="Match" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.IsDefaultAttribute">
          <apidata name="IsDefaultAttribute" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)">
          <apidata name="GetTypeInfoCount" group="member" subgroup="method" />
          <memberdata visibility="private" />
          <proceduredata virtual="true" final="true" eii="true" />
          <parameters>
            <parameter name="pcTInfo" out="true">
              <referenceTo>
                <type api="T:System.UInt32" ref="false" />
              </referenceTo>
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Runtime.InteropServices._Attribute.GetTypeInfoCount(System.UInt32@)">
              <type api="T:System.Runtime.InteropServices._Attribute" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)">
          <apidata name="GetTypeInfo" group="member" subgroup="method" />
          <memberdata visibility="private" />
          <proceduredata virtual="true" final="true" eii="true" />
          <parameters>
            <parameter name="iTInfo">
              <type api="T:System.UInt32" ref="false" />
            </parameter>
            <parameter name="lcid">
              <type api="T:System.UInt32" ref="false" />
            </parameter>
            <parameter name="ppTInfo">
              <type api="T:System.IntPtr" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Runtime.InteropServices._Attribute.GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)">
              <type api="T:System.Runtime.InteropServices._Attribute" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)">
          <apidata name="GetIDsOfNames" group="member" subgroup="method" />
          <memberdata visibility="private" />
          <proceduredata virtual="true" final="true" eii="true" />
          <parameters>
            <parameter name="riid" in="true">
              <referenceTo>
                <type api="T:System.Guid" ref="false" />
              </referenceTo>
            </parameter>
            <parameter name="rgszNames">
              <type api="T:System.IntPtr" ref="false" />
            </parameter>
            <parameter name="cNames">
              <type api="T:System.UInt32" ref="false" />
            </parameter>
            <parameter name="lcid">
              <type api="T:System.UInt32" ref="false" />
            </parameter>
            <parameter name="rgDispId">
              <type api="T:System.IntPtr" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Runtime.InteropServices._Attribute.GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)">
              <type api="T:System.Runtime.InteropServices._Attribute" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)">
          <apidata name="Invoke" group="member" subgroup="method" />
          <memberdata visibility="private" />
          <proceduredata virtual="true" final="true" eii="true" />
          <parameters>
            <parameter name="dispIdMember">
              <type api="T:System.UInt32" ref="false" />
            </parameter>
            <parameter name="riid" in="true">
              <referenceTo>
                <type api="T:System.Guid" ref="false" />
              </referenceTo>
            </parameter>
            <parameter name="lcid">
              <type api="T:System.UInt32" ref="false" />
            </parameter>
            <parameter name="wFlags">
              <type api="T:System.Int16" ref="false" />
            </parameter>
            <parameter name="pDispParams">
              <type api="T:System.IntPtr" ref="false" />
            </parameter>
            <parameter name="pVarResult">
              <type api="T:System.IntPtr" ref="false" />
            </parameter>
            <parameter name="pExcepInfo">
              <type api="T:System.IntPtr" ref="false" />
            </parameter>
            <parameter name="puArgErr">
              <type api="T:System.IntPtr" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Runtime.InteropServices._Attribute.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)">
              <type api="T:System.Runtime.InteropServices._Attribute" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="P:System.Attribute.TypeId">
          <apidata name="TypeId" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_TypeId" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Property" />
              <field name="Field" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.IgnoreErrorCheckAttribute.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.IgnoreErrorCheckAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:OOAdvantech.MetaDataRepository.IIdentityPart">
      <apidata name="IIdentityPart" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <implementors>
        <type api="T:OOAdvantech.MetaDataRepository.IdentityPart" ref="true" />
      </implementors>
      <elements>
        <element api="P:OOAdvantech.MetaDataRepository.IIdentityPart.Name" />
        <element api="P:OOAdvantech.MetaDataRepository.IIdentityPart.TypeName" />
        <element api="P:OOAdvantech.MetaDataRepository.IIdentityPart.Type" />
      </elements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
      </containers>
    </api>
    <api id="P:OOAdvantech.MetaDataRepository.IIdentityPart.Name">
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_Name" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.IIdentityPart" ref="true" />
      </containers>
    </api>
    <api id="P:OOAdvantech.MetaDataRepository.IIdentityPart.Type">
      <apidata name="Type" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_Type" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.IIdentityPart" ref="true" />
      </containers>
    </api>
    <api id="P:OOAdvantech.MetaDataRepository.IIdentityPart.TypeName">
      <apidata name="TypeName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_TypeName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.IIdentityPart" ref="true" />
      </containers>
    </api>
    <api id="T:OOAdvantech.MetaDataRepository.Interface">
      <apidata name="Interface" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:OOAdvantech.MetaDataRepository.Classifier" ref="true" />
          <type api="T:OOAdvantech.MetaDataRepository.Namespace" ref="true" />
          <type api="T:OOAdvantech.MetaDataRepository.MetaObject" ref="true" />
          <type api="T:System.MarshalByRefObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="F:OOAdvantech.MetaDataRepository.Interface._Realizations" />
        <element api="M:OOAdvantech.MetaDataRepository.Interface.GetAllSpecializeClasifiers" />
        <element api="M:OOAdvantech.MetaDataRepository.Interface.#ctor" />
        <element api="P:OOAdvantech.MetaDataRepository.Interface.StorageCellsOfThisType" />
        <element api="P:OOAdvantech.MetaDataRepository.Interface.ClassHierarchyLinkAssociation" />
        <element api="P:OOAdvantech.MetaDataRepository.Interface.Realizations" />
        <element api="F:OOAdvantech.MetaDataRepository.Classifier._TemplateBinding" />
        <element api="F:OOAdvantech.MetaDataRepository.Classifier._LinkAssociation" />
        <element api="F:OOAdvantech.MetaDataRepository.Classifier.ClassifierHierarchyClassifiers" />
        <element api="F:OOAdvantech.MetaDataRepository.Classifier._Generalizations" />
        <element api="F:OOAdvantech.MetaDataRepository.Classifier._OwnedTemplateSignature" />
        <element api="F:OOAdvantech.MetaDataRepository.Classifier.ClassHierarchyAssociateRoles" />
        <element api="F:OOAdvantech.MetaDataRepository.Classifier.ClassHierarchyRoles" />
        <element api="F:OOAdvantech.MetaDataRepository.Classifier.ClassHierarchyAttributes" />
        <element api="F:OOAdvantech.MetaDataRepository.Classifier._Specializations" />
        <element api="F:OOAdvantech.MetaDataRepository.Classifier._Roles" />
        <element api="F:OOAdvantech.MetaDataRepository.Classifier._Features" />
        <element api="M:OOAdvantech.MetaDataRepository.Classifier.GetExtensionMetaObject(System.Type)" />
        <element api="M:OOAdvantech.MetaDataRepository.Classifier.ToString" />
        <element api="M:OOAdvantech.MetaDataRepository.Classifier.BuildCaseInsensitiveNames" />
        <element api="M:OOAdvantech.MetaDataRepository.Classifier.ErrorCheck(System.Collections.ArrayList@)" />
        <element api="M:OOAdvantech.MetaDataRepository.Classifier.IsA(OOAdvantech.MetaDataRepository.Classifier)" />
        <element api="M:OOAdvantech.MetaDataRepository.Classifier.Synchronize(OOAdvantech.MetaDataRepository.MetaObject)" />
        <element api="M:OOAdvantech.MetaDataRepository.Classifier.RemoveAssociation(OOAdvantech.MetaDataRepository.Association)" />
        <element api="M:OOAdvantech.MetaDataRepository.Classifier.GetGeneralClasifiers" />
        <element api="M:OOAdvantech.MetaDataRepository.Classifier.RefreshClassHierarchyCollections" />
        <element api="M:OOAdvantech.MetaDataRepository.Classifier.RemoveAttribute(OOAdvantech.MetaDataRepository.Attribute)" />
        <element api="M:OOAdvantech.MetaDataRepository.Classifier.GetAllGeneralClasifiers" />
        <element api="M:OOAdvantech.MetaDataRepository.Classifier.RemoveOperation(OOAdvantech.MetaDataRepository.Operation)" />
        <element api="M:OOAdvantech.MetaDataRepository.Classifier.GetAssignedComponents" />
        <element api="M:OOAdvantech.MetaDataRepository.Classifier.GetSpecializedClasifiers" />
        <element api="M:OOAdvantech.MetaDataRepository.Classifier.AddAssociation(System.String,OOAdvantech.MetaDataRepository.Roles,OOAdvantech.MetaDataRepository.Classifier,System.String)" />
        <element api="M:OOAdvantech.MetaDataRepository.Classifier.AddAttribute(System.String,OOAdvantech.MetaDataRepository.Classifier,System.String)" />
        <element api="M:OOAdvantech.MetaDataRepository.Classifier.AddOperation(System.String,OOAdvantech.MetaDataRepository.Classifier)" />
        <element api="M:OOAdvantech.MetaDataRepository.Classifier.GetAssociateRoles(System.Boolean)" />
        <element api="M:OOAdvantech.MetaDataRepository.Classifier.RemoveGeneralization(OOAdvantech.MetaDataRepository.Generalization)" />
        <element api="M:OOAdvantech.MetaDataRepository.Classifier.AddGeneralization(System.String,OOAdvantech.MetaDataRepository.Classifier)" />
        <element api="M:OOAdvantech.MetaDataRepository.Classifier.AddRole(OOAdvantech.MetaDataRepository.AssociationEnd)" />
        <element api="M:OOAdvantech.MetaDataRepository.Classifier.RemoveRole(OOAdvantech.MetaDataRepository.AssociationEnd)" />
        <element api="M:OOAdvantech.MetaDataRepository.Classifier.GetOperations(System.Boolean)" />
        <element api="M:OOAdvantech.MetaDataRepository.Classifier.GetOperations(System.String)" />
        <element api="M:OOAdvantech.MetaDataRepository.Classifier.GetOperations(System.String,System.Boolean)" />
        <element api="M:OOAdvantech.MetaDataRepository.Classifier.GetRoles(System.Boolean)" />
        <element api="M:OOAdvantech.MetaDataRepository.Classifier.GetRealizedAttributes" />
        <element api="M:OOAdvantech.MetaDataRepository.Classifier.GetAttributes(System.Boolean)" />
        <element api="M:OOAdvantech.MetaDataRepository.Classifier.GetOperation(System.String,System.String[],System.Boolean)" />
        <element api="M:OOAdvantech.MetaDataRepository.Classifier.GetRole(System.String)" />
        <element api="M:OOAdvantech.MetaDataRepository.Classifier.GetFeature(System.String,System.Boolean)" />
        <element api="P:OOAdvantech.MetaDataRepository.Classifier.IsTemplate" />
        <element api="P:OOAdvantech.MetaDataRepository.Classifier.IsTemplateInstantiation" />
        <element api="P:OOAdvantech.MetaDataRepository.Classifier.Constractors" />
        <element api="P:OOAdvantech.MetaDataRepository.Classifier.TemplateBinding" />
        <element api="P:OOAdvantech.MetaDataRepository.Classifier.LinkAssociation" />
        <element api="P:OOAdvantech.MetaDataRepository.Classifier.Generalizations" />
        <element api="P:OOAdvantech.MetaDataRepository.Classifier.IsBindedClassifier" />
        <element api="P:OOAdvantech.MetaDataRepository.Classifier.ContainsTemplateParameter" />
        <element api="P:OOAdvantech.MetaDataRepository.Classifier.OwnedTemplateSignature" />
        <element api="P:OOAdvantech.MetaDataRepository.Classifier.Specializations" />
        <element api="P:OOAdvantech.MetaDataRepository.Classifier.Roles" />
        <element api="P:OOAdvantech.MetaDataRepository.Classifier.Features" />
        <element api="F:OOAdvantech.MetaDataRepository.Namespace._OwnedElements" />
        <element api="M:OOAdvantech.MetaDataRepository.Namespace.MakeNameUnaryInNamesapce(OOAdvantech.MetaDataRepository.MetaObject)" />
        <element api="M:OOAdvantech.MetaDataRepository.Namespace.GetExtensionMetaObjects" />
        <element api="M:OOAdvantech.MetaDataRepository.Namespace.AddOwnedElement(OOAdvantech.MetaDataRepository.MetaObject)" />
        <element api="M:OOAdvantech.MetaDataRepository.Namespace.RemoveOwnedElement(OOAdvantech.MetaDataRepository.MetaObject)" />
        <element api="P:OOAdvantech.MetaDataRepository.Namespace.OwnedElements" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject._CaseInsensitiveName" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject._ImplementationUnit" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject.LockObject" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject.ReaderWriterLock" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject.Properties" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject._Name" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject.MetaObjectIDStream" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject._Identity" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject._ClientDependencies" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject._SupplierDependencies" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject._Namespace" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject.Visibility" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.MetaObjectChangeState" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.ShallowSynchronize(OOAdvantech.MetaDataRepository.MetaObject)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.AddDependency(System.String,OOAdvantech.MetaDataRepository.MetaObject)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.GetDynamicPropertiesAsXmlString" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.SetIdentity(OOAdvantech.MetaDataRepository.MetaObjectID)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.SetNamespace(OOAdvantech.MetaDataRepository.Namespace)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.GetPropertyValue``1(System.String,System.String)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.GetPropertyValue(System.Type,System.String,System.String)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.PutPropertyValue(System.String,System.String,System.Object)" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.CaseInsensitiveName" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.ImplementationUnit" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.OQLName" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.Name" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.FullName" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.OQLFullName" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.Identity" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.ClientDependencies" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.SupplierDependencies" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.Namespace" />
        <element api="E:OOAdvantech.MetaDataRepository.MetaObject.Changed" />
        <element api="M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="cloneIdentity">
              <type api="T:System.Boolean" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.MarshalByRefObject" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.MarshalByRefObject" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.MarshalByRefObject.GetLifetimeService">
          <apidata name="GetLifetimeService" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.MarshalByRefObject" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Security.Permissions.SecurityPermissionAttribute" ref="true" />
              <argument>
                <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
                <enumValue>
                  <field name="LinkDemand" />
                </enumValue>
              </argument>
              <assignment name="Flags">
                <type api="T:System.Security.Permissions.SecurityPermissionFlag" ref="false" />
                <enumValue>
                  <field name="Infrastructure" />
                </enumValue>
              </assignment>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.MarshalByRefObject.InitializeLifetimeService">
          <apidata name="InitializeLifetimeService" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.MarshalByRefObject" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Security.Permissions.SecurityPermissionAttribute" ref="true" />
              <argument>
                <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
                <enumValue>
                  <field name="LinkDemand" />
                </enumValue>
              </argument>
              <assignment name="Flags">
                <type api="T:System.Security.Permissions.SecurityPermissionFlag" ref="false" />
                <enumValue>
                  <field name="Infrastructure" />
                </enumValue>
              </assignment>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.MarshalByRefObject.CreateObjRef(System.Type)">
          <apidata name="CreateObjRef" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="requestedType">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Runtime.Remoting.ObjRef" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.MarshalByRefObject" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Security.Permissions.SecurityPermissionAttribute" ref="true" />
              <argument>
                <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
                <enumValue>
                  <field name="LinkDemand" />
                </enumValue>
              </argument>
              <assignment name="Flags">
                <type api="T:System.Security.Permissions.SecurityPermissionFlag" ref="false" />
                <enumValue>
                  <field name="Infrastructure" />
                </enumValue>
              </assignment>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.BackwardCompatibilityID" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>{8B4322B6-2FA2-4E9B-A08B-1DA72864A727}</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.Persistent" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.Interface.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Interface" ref="true" />
      </containers>
    </api>
    <api id="F:OOAdvantech.MetaDataRepository.Interface._Realizations">
      <apidata name="_Realizations" group="member" subgroup="field" />
      <memberdata visibility="family" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:OOAdvantech.Collections.Generic.Set`1" ref="true">
          <specialization>
            <type api="T:OOAdvantech.MetaDataRepository.Realization" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Interface" ref="true" />
      </containers>
    </api>
    <api id="P:OOAdvantech.MetaDataRepository.Interface.ClassHierarchyLinkAssociation">
      <apidata name="ClassHierarchyLinkAssociation" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:OOAdvantech.MetaDataRepository.Classifier.ClassHierarchyLinkAssociation">
          <type api="T:OOAdvantech.MetaDataRepository.Classifier" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_ClassHierarchyLinkAssociation" />
      <returns>
        <type api="T:OOAdvantech.MetaDataRepository.Association" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Interface" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.Interface.GetAllSpecializeClasifiers">
      <apidata name="GetAllSpecializeClasifiers" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:OOAdvantech.MetaDataRepository.Classifier.GetAllSpecializeClasifiers">
          <type api="T:OOAdvantech.MetaDataRepository.Classifier" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:OOAdvantech.Collections.Generic.Set`1" ref="true">
          <specialization>
            <type api="T:OOAdvantech.MetaDataRepository.Classifier" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Interface" ref="true" />
      </containers>
    </api>
    <api id="P:OOAdvantech.MetaDataRepository.Interface.Realizations">
      <apidata name="Realizations" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_Realizations" />
      <returns>
        <type api="T:OOAdvantech.Collections.Generic.Set`1" ref="true">
          <specialization>
            <type api="T:OOAdvantech.MetaDataRepository.Realization" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Interface" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.PersistentMember" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>_Realizations</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.RoleBMultiplicityRangeAttribute" ref="true" />
          <argument>
            <type api="T:System.UInt64" ref="false" />
            <value>0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.AssociationAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>AbstarctPart</value>
          </argument>
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:OOAdvantech.MetaDataRepository.Realization" ref="true" />
            </typeValue>
          </argument>
          <argument>
            <type api="T:OOAdvantech.MetaDataRepository.Roles" ref="false" />
            <enumValue>
              <field name="RoleB" />
            </enumValue>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>{B378BE2A-2470-4C56-B2FB-4CF3776BE55F}</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:OOAdvantech.MetaDataRepository.Interface.StorageCellsOfThisType">
      <apidata name="StorageCellsOfThisType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:OOAdvantech.MetaDataRepository.Classifier.StorageCellsOfThisType">
          <type api="T:OOAdvantech.MetaDataRepository.Classifier" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_StorageCellsOfThisType" />
      <returns>
        <type api="T:OOAdvantech.Collections.Generic.Set`1" ref="true">
          <specialization>
            <type api="T:OOAdvantech.MetaDataRepository.StorageCell" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Interface" ref="true" />
      </containers>
    </api>
    <api id="T:OOAdvantech.MetaDataRepository.InterfaceImplementor">
      <apidata name="InterfaceImplementor" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <implementors>
        <type api="T:OOAdvantech.MetaDataRepository.Class" ref="true" />
        <type api="T:OOAdvantech.MetaDataRepository.Structure" ref="true" />
      </implementors>
      <elements>
        <element api="M:OOAdvantech.MetaDataRepository.InterfaceImplementor.AddMethod(OOAdvantech.MetaDataRepository.Operation)" />
        <element api="M:OOAdvantech.MetaDataRepository.InterfaceImplementor.AddAttributeRealization(OOAdvantech.MetaDataRepository.Attribute)" />
        <element api="M:OOAdvantech.MetaDataRepository.InterfaceImplementor.AddAssociationEndRealization(OOAdvantech.MetaDataRepository.AssociationEnd)" />
        <element api="M:OOAdvantech.MetaDataRepository.InterfaceImplementor.RemoveMethod(OOAdvantech.MetaDataRepository.Method)" />
        <element api="M:OOAdvantech.MetaDataRepository.InterfaceImplementor.RemoveAttributeRealization(OOAdvantech.MetaDataRepository.AttributeRealization)" />
        <element api="M:OOAdvantech.MetaDataRepository.InterfaceImplementor.RemoveAssociationEndRealization(OOAdvantech.MetaDataRepository.AssociationEndRealization)" />
        <element api="M:OOAdvantech.MetaDataRepository.InterfaceImplementor.GetAllInterfaces" />
        <element api="M:OOAdvantech.MetaDataRepository.InterfaceImplementor.GetInterfaces" />
        <element api="P:OOAdvantech.MetaDataRepository.InterfaceImplementor.Realizations" />
      </elements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.InterfaceImplementor.AddAssociationEndRealization(OOAdvantech.MetaDataRepository.AssociationEnd)">
      <apidata name="AddAssociationEndRealization" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="specification">
          <type api="T:OOAdvantech.MetaDataRepository.AssociationEnd" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:OOAdvantech.MetaDataRepository.AssociationEndRealization" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.InterfaceImplementor" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.InterfaceImplementor.AddAttributeRealization(OOAdvantech.MetaDataRepository.Attribute)">
      <apidata name="AddAttributeRealization" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="specification">
          <type api="T:OOAdvantech.MetaDataRepository.Attribute" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:OOAdvantech.MetaDataRepository.AttributeRealization" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.InterfaceImplementor" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.InterfaceImplementor.AddMethod(OOAdvantech.MetaDataRepository.Operation)">
      <apidata name="AddMethod" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="specification">
          <type api="T:OOAdvantech.MetaDataRepository.Operation" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:OOAdvantech.MetaDataRepository.Method" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.InterfaceImplementor" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.InterfaceImplementor.GetAllInterfaces">
      <apidata name="GetAllInterfaces" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:OOAdvantech.Collections.Generic.Set`1" ref="true">
          <specialization>
            <type api="T:OOAdvantech.MetaDataRepository.Interface" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.InterfaceImplementor" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.InterfaceImplementor.GetInterfaces">
      <apidata name="GetInterfaces" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:OOAdvantech.Collections.Generic.Set`1" ref="true">
          <specialization>
            <type api="T:OOAdvantech.MetaDataRepository.Interface" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.InterfaceImplementor" ref="true" />
      </containers>
    </api>
    <api id="P:OOAdvantech.MetaDataRepository.InterfaceImplementor.Realizations">
      <apidata name="Realizations" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_Realizations" />
      <returns>
        <type api="T:OOAdvantech.Collections.Generic.Set`1" ref="true">
          <specialization>
            <type api="T:OOAdvantech.MetaDataRepository.Realization" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.InterfaceImplementor" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.AssociationAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>ImplementorPart</value>
          </argument>
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:OOAdvantech.MetaDataRepository.Realization" ref="true" />
            </typeValue>
          </argument>
          <argument>
            <type api="T:OOAdvantech.MetaDataRepository.Roles" ref="false" />
            <enumValue>
              <field name="RoleB" />
            </enumValue>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>{B7175039-FF22-434D-93BA-94065C932934}</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.RoleBMultiplicityRangeAttribute" ref="true" />
          <argument>
            <type api="T:System.UInt64" ref="false" />
            <value>0</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.InterfaceImplementor.RemoveAssociationEndRealization(OOAdvantech.MetaDataRepository.AssociationEndRealization)">
      <apidata name="RemoveAssociationEndRealization" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="associationEndRealization">
          <type api="T:OOAdvantech.MetaDataRepository.AssociationEndRealization" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.InterfaceImplementor" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.InterfaceImplementor.RemoveAttributeRealization(OOAdvantech.MetaDataRepository.AttributeRealization)">
      <apidata name="RemoveAttributeRealization" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="attributeRealization">
          <type api="T:OOAdvantech.MetaDataRepository.AttributeRealization" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.InterfaceImplementor" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.InterfaceImplementor.RemoveMethod(OOAdvantech.MetaDataRepository.Method)">
      <apidata name="RemoveMethod" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="method">
          <type api="T:OOAdvantech.MetaDataRepository.Method" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.InterfaceImplementor" ref="true" />
      </containers>
    </api>
    <api id="T:OOAdvantech.MetaDataRepository.IParameterableElement">
      <apidata name="IParameterableElement" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <implementors>
        <type api="T:OOAdvantech.MetaDataRepository.TemplateParameter" ref="true" />
        <type api="T:OOAdvantech.MetaDataRepository.Classifier" ref="true" />
      </implementors>
      <elements>
        <element api="P:OOAdvantech.MetaDataRepository.IParameterableElement.Name" />
        <element api="P:OOAdvantech.MetaDataRepository.IParameterableElement.FullName" />
      </elements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
      </containers>
    </api>
    <api id="P:OOAdvantech.MetaDataRepository.IParameterableElement.FullName">
      <apidata name="FullName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_FullName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.IParameterableElement" ref="true" />
      </containers>
    </api>
    <api id="P:OOAdvantech.MetaDataRepository.IParameterableElement.Name">
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_Name" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.IParameterableElement" ref="true" />
      </containers>
    </api>
    <api id="T:OOAdvantech.MetaDataRepository.ITemplateable">
      <apidata name="ITemplateable" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <implementors>
        <type api="T:OOAdvantech.MetaDataRepository.Classifier" ref="true" />
      </implementors>
      <elements>
        <element api="P:OOAdvantech.MetaDataRepository.ITemplateable.TemplateBinding" />
        <element api="P:OOAdvantech.MetaDataRepository.ITemplateable.OwnedTemplateSignature" />
      </elements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
      </containers>
    </api>
    <api id="P:OOAdvantech.MetaDataRepository.ITemplateable.OwnedTemplateSignature">
      <apidata name="OwnedTemplateSignature" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_OwnedTemplateSignature" />
      <setter name="set_OwnedTemplateSignature" />
      <returns>
        <type api="T:OOAdvantech.MetaDataRepository.TemplateSignature" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.ITemplateable" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.AssociationAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>TamplateDefinition</value>
          </argument>
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:OOAdvantech.MetaDataRepository.TemplateSignature" ref="true" />
            </typeValue>
          </argument>
          <argument>
            <type api="T:OOAdvantech.MetaDataRepository.Roles" ref="false" />
            <enumValue>
              <field name="RoleA" />
            </enumValue>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>{660B2569-F0CD-4CA2-8241-CFD1DDBB02F0}</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.RoleAMultiplicityRangeAttribute" ref="true" />
          <argument>
            <type api="T:System.UInt64" ref="false" />
            <value>0</value>
          </argument>
          <argument>
            <type api="T:System.UInt64" ref="false" />
            <value>1</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:OOAdvantech.MetaDataRepository.ITemplateable.TemplateBinding">
      <apidata name="TemplateBinding" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_TemplateBinding" />
      <setter name="set_TemplateBinding" />
      <returns>
        <type api="T:OOAdvantech.MetaDataRepository.TemplateBinding" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.ITemplateable" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.RoleBMultiplicityRangeAttribute" ref="true" />
          <argument>
            <type api="T:System.UInt64" ref="false" />
            <value>0</value>
          </argument>
          <argument>
            <type api="T:System.UInt64" ref="false" />
            <value>1</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.AssociationAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>BindTamplate</value>
          </argument>
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:OOAdvantech.MetaDataRepository.TemplateBinding" ref="true" />
            </typeValue>
          </argument>
          <argument>
            <type api="T:OOAdvantech.MetaDataRepository.Roles" ref="false" />
            <enumValue>
              <field name="RoleB" />
            </enumValue>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>{0C4399F4-36AF-45E4-AF09-41C6A7CA4EFB}</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="T:OOAdvantech.MetaDataRepository.MetaDataException">
      <apidata name="MetaDataException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="F:OOAdvantech.MetaDataRepository.MetaDataException.MetaDataError" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaDataException.#ctor(OOAdvantech.MetaDataRepository.MetaObject.MetaDataError,System.Exception)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaDataException.#ctor(OOAdvantech.MetaDataRepository.MetaObject.MetaDataError)" />
        <element api="M:System.Exception.GetBaseException">
          <apidata name="GetBaseException" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.GetBaseException">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.ToString">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.ToString">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <apidata name="GetObjectData" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="info">
              <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
            </parameter>
            <parameter name="context">
              <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
              <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
            </member>
            <member api="M:System.Runtime.InteropServices._Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Security.Permissions.SecurityPermissionAttribute" ref="true" />
              <argument>
                <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
                <enumValue>
                  <field name="LinkDemand" />
                </enumValue>
              </argument>
              <assignment name="Flags">
                <type api="T:System.Security.Permissions.SecurityPermissionFlag" ref="false" />
                <enumValue>
                  <field name="SerializationFormatter" />
                </enumValue>
              </assignment>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Exception.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.GetType">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Message">
          <apidata name="Message" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_Message" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.Message">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Data">
          <apidata name="Data" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_Data" />
          <returns>
            <type api="T:System.Collections.IDictionary" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.InnerException">
          <apidata name="InnerException" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_InnerException" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.InnerException">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.TargetSite">
          <apidata name="TargetSite" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_TargetSite" />
          <returns>
            <type api="T:System.Reflection.MethodBase" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.TargetSite">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.StackTrace">
          <apidata name="StackTrace" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_StackTrace" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.StackTrace">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.HelpLink">
          <apidata name="HelpLink" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_HelpLink" />
          <setter name="set_HelpLink" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.HelpLink">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Source">
          <apidata name="Source" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Source" />
          <setter name="set_Source" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.Source">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.HResult">
          <apidata name="HResult" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_HResult" />
          <setter name="set_HResult" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.MetaDataException.#ctor(OOAdvantech.MetaDataRepository.MetaObject.MetaDataError)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="metaDataError">
          <type api="T:OOAdvantech.MetaDataRepository.MetaObject.MetaDataError" ref="false">
            <type api="T:OOAdvantech.MetaDataRepository.MetaObject" ref="true" />
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.MetaDataException" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.MetaDataException.#ctor(OOAdvantech.MetaDataRepository.MetaObject.MetaDataError,System.Exception)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="metaDataError">
          <type api="T:OOAdvantech.MetaDataRepository.MetaObject.MetaDataError" ref="false">
            <type api="T:OOAdvantech.MetaDataRepository.MetaObject" ref="true" />
          </type>
        </parameter>
        <parameter name="innerException">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.MetaDataException" ref="true" />
      </containers>
    </api>
    <api id="F:OOAdvantech.MetaDataRepository.MetaDataException.MetaDataError">
      <apidata name="MetaDataError" group="member" subgroup="field" />
      <memberdata visibility="public" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:OOAdvantech.MetaDataRepository.MetaObject.MetaDataError" ref="false">
          <type api="T:OOAdvantech.MetaDataRepository.MetaObject" ref="true" />
        </type>
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.MetaDataException" ref="true" />
      </containers>
    </api>
    <api id="T:OOAdvantech.MetaDataRepository.MetaObject">
      <apidata name="MetaObject" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.MarshalByRefObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:OOAdvantech.MetaDataRepository.Namespace" ref="true" />
          <type api="T:OOAdvantech.MetaDataRepository.StorageCell" ref="true" />
          <type api="T:OOAdvantech.MetaDataRepository.Feature" ref="true" />
          <type api="T:OOAdvantech.MetaDataRepository.TemplateParameter" ref="true" />
          <type api="T:OOAdvantech.MetaDataRepository.Relationship" ref="true" />
          <type api="T:OOAdvantech.MetaDataRepository.StorageCellsLink" ref="true" />
          <type api="T:OOAdvantech.MetaDataRepository.AssociationEnd" ref="true" />
          <type api="T:OOAdvantech.MetaDataRepository.TemplateSignature" ref="true" />
          <type api="T:OOAdvantech.MetaDataRepository.TemplateParameterSubstitution" ref="true" />
          <type api="T:OOAdvantech.MetaDataRepository.Parameter" ref="true" />
        </descendents>
      </family>
      <implements>
        <type api="T:OOAdvantech.Remoting.IExtMarshalByRefObject" ref="true" />
      </implements>
      <elements>
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject._CaseInsensitiveName" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject._ImplementationUnit" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject.LockObject" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject.ReaderWriterLock" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject.Properties" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject._Name" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject.MetaObjectIDStream" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject._Identity" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject._ClientDependencies" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject._SupplierDependencies" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject._Namespace" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject.Visibility" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.MetaObjectChangeState" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.ShallowSynchronize(OOAdvantech.MetaDataRepository.MetaObject)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.AddDependency(System.String,OOAdvantech.MetaDataRepository.MetaObject)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.ErrorCheck(System.Collections.ArrayList@)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.GetDynamicPropertiesAsXmlString" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.SetIdentity(OOAdvantech.MetaDataRepository.MetaObjectID)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.Synchronize(OOAdvantech.MetaDataRepository.MetaObject)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.GetExtensionMetaObject(System.Type)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.GetExtensionMetaObjects" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.SetNamespace(OOAdvantech.MetaDataRepository.Namespace)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.GetPropertyValue``1(System.String,System.String)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.GetPropertyValue(System.Type,System.String,System.String)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.PutPropertyValue(System.String,System.String,System.Object)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.#ctor" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.CaseInsensitiveName" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.ImplementationUnit" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.OQLName" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.Name" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.FullName" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.OQLFullName" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.Identity" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.ClientDependencies" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.SupplierDependencies" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.Namespace" />
        <element api="E:OOAdvantech.MetaDataRepository.MetaObject.Changed" />
        <element api="M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="cloneIdentity">
              <type api="T:System.Boolean" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.MarshalByRefObject" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.MarshalByRefObject" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.MarshalByRefObject.GetLifetimeService">
          <apidata name="GetLifetimeService" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.MarshalByRefObject" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Security.Permissions.SecurityPermissionAttribute" ref="true" />
              <argument>
                <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
                <enumValue>
                  <field name="LinkDemand" />
                </enumValue>
              </argument>
              <assignment name="Flags">
                <type api="T:System.Security.Permissions.SecurityPermissionFlag" ref="false" />
                <enumValue>
                  <field name="Infrastructure" />
                </enumValue>
              </assignment>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.MarshalByRefObject.InitializeLifetimeService">
          <apidata name="InitializeLifetimeService" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.MarshalByRefObject" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Security.Permissions.SecurityPermissionAttribute" ref="true" />
              <argument>
                <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
                <enumValue>
                  <field name="LinkDemand" />
                </enumValue>
              </argument>
              <assignment name="Flags">
                <type api="T:System.Security.Permissions.SecurityPermissionFlag" ref="false" />
                <enumValue>
                  <field name="Infrastructure" />
                </enumValue>
              </assignment>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.MarshalByRefObject.CreateObjRef(System.Type)">
          <apidata name="CreateObjRef" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="requestedType">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Runtime.Remoting.ObjRef" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.MarshalByRefObject" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Security.Permissions.SecurityPermissionAttribute" ref="true" />
              <argument>
                <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
                <enumValue>
                  <field name="LinkDemand" />
                </enumValue>
              </argument>
              <assignment name="Flags">
                <type api="T:System.Security.Permissions.SecurityPermissionFlag" ref="false" />
                <enumValue>
                  <field name="Infrastructure" />
                </enumValue>
              </assignment>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.BackwardCompatibilityID" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>{697EFC48-3DCD-4675-9B4E-87C8917D80DF}</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.Persistent" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.MetaObject.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.MetaObject" ref="true" />
      </containers>
    </api>
    <api id="F:OOAdvantech.MetaDataRepository.MetaObject._CaseInsensitiveName">
      <apidata name="_CaseInsensitiveName" group="member" subgroup="field" />
      <memberdata visibility="family" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.MetaObject" ref="true" />
      </containers>
    </api>
    <api id="F:OOAdvantech.MetaDataRepository.MetaObject._ClientDependencies">
      <apidata name="_ClientDependencies" group="member" subgroup="field" />
      <memberdata visibility="family" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:OOAdvantech.Collections.Generic.Set`1" ref="true">
          <specialization>
            <type api="T:OOAdvantech.MetaDataRepository.Dependency" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.MetaObject" ref="true" />
      </containers>
    </api>
    <api id="F:OOAdvantech.MetaDataRepository.MetaObject._Identity">
      <apidata name="_Identity" group="member" subgroup="field" />
      <memberdata visibility="family" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:OOAdvantech.MetaDataRepository.MetaObjectID" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.MetaObject" ref="true" />
      </containers>
    </api>
    <api id="F:OOAdvantech.MetaDataRepository.MetaObject._ImplementationUnit">
      <apidata name="_ImplementationUnit" group="member" subgroup="field" />
      <memberdata visibility="family" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:OOAdvantech.MetaDataRepository.Component" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.MetaObject" ref="true" />
      </containers>
    </api>
    <api id="F:OOAdvantech.MetaDataRepository.MetaObject._Name">
      <apidata name="_Name" group="member" subgroup="field" />
      <memberdata visibility="family" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.MetaObject" ref="true" />
      </containers>
    </api>
    <api id="F:OOAdvantech.MetaDataRepository.MetaObject._Namespace">
      <apidata name="_Namespace" group="member" subgroup="field" />
      <memberdata visibility="family" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:OOAdvantech.MetaDataRepository.Namespace" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.MetaObject" ref="true" />
      </containers>
    </api>
    <api id="F:OOAdvantech.MetaDataRepository.MetaObject._SupplierDependencies">
      <apidata name="_SupplierDependencies" group="member" subgroup="field" />
      <memberdata visibility="family" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:OOAdvantech.Collections.Generic.Set`1" ref="true">
          <specialization>
            <type api="T:OOAdvantech.MetaDataRepository.Dependency" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.MetaObject" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.MetaObject.AddDependency(System.String,OOAdvantech.MetaDataRepository.MetaObject)">
      <apidata name="AddDependency" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="dependencyName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="supplier">
          <type api="T:OOAdvantech.MetaDataRepository.MetaObject" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:OOAdvantech.MetaDataRepository.Dependency" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.MetaObject" ref="true" />
      </containers>
    </api>
    <api id="P:OOAdvantech.MetaDataRepository.MetaObject.CaseInsensitiveName">
      <apidata name="CaseInsensitiveName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_CaseInsensitiveName" />
      <setter name="set_CaseInsensitiveName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.MetaObject" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.PersistentMember" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>_CaseInsensitiveName</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.BackwardCompatibilityID" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>+49</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="E:OOAdvantech.MetaDataRepository.MetaObject.Changed">
      <apidata name="Changed" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_Changed" />
      <remover name="remove_Changed" />
      <eventhandler>
        <type api="T:OOAdvantech.MetaDataRepository.MetaObjectChangedEventHandler" ref="true" />
      </eventhandler>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.MetaObject" ref="true" />
      </containers>
    </api>
    <api id="P:OOAdvantech.MetaDataRepository.MetaObject.ClientDependencies">
      <apidata name="ClientDependencies" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_ClientDependencies" />
      <returns>
        <type api="T:OOAdvantech.Collections.Generic.Set`1" ref="true">
          <specialization>
            <type api="T:OOAdvantech.MetaDataRepository.Dependency" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.MetaObject" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.PersistentMember" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>_ClientDependencies</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.RoleBMultiplicityRangeAttribute" ref="true" />
          <argument>
            <type api="T:System.UInt64" ref="false" />
            <value>0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.AssociationEndBehavior" ref="true" />
          <argument>
            <type api="T:OOAdvantech.MetaDataRepository.PersistencyFlag" ref="false" />
            <enumValue>
              <field name="OnConstruction" />
            </enumValue>
          </argument>
        </attribute>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.AssociationAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>ClientDependency</value>
          </argument>
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:OOAdvantech.MetaDataRepository.Dependency" ref="true" />
            </typeValue>
          </argument>
          <argument>
            <type api="T:OOAdvantech.MetaDataRepository.Roles" ref="false" />
            <enumValue>
              <field name="RoleB" />
            </enumValue>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>{54E7CCBA-6C18-4E9A-A69B-7C26B1ACFF41}</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.MetaObject.ErrorCheck(System.Collections.ArrayList@)">
      <apidata name="ErrorCheck" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="errors">
          <referenceTo>
            <type api="T:System.Collections.ArrayList" ref="true" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.MetaObject" ref="true" />
      </containers>
    </api>
    <api id="P:OOAdvantech.MetaDataRepository.MetaObject.FullName">
      <apidata name="FullName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_FullName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.MetaObject" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.MetaObject.GetDynamicPropertiesAsXmlString">
      <apidata name="GetDynamicPropertiesAsXmlString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.MetaObject" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.MetaObject.GetExtensionMetaObject(System.Type)">
      <apidata name="GetExtensionMetaObject" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="MetaObjectType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.MetaObject" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.MetaObject.GetExtensionMetaObjects">
      <apidata name="GetExtensionMetaObjects" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:System.Collections.ArrayList" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.MetaObject" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.MetaObject.GetPropertyValue``1(System.String,System.String)">
      <apidata name="GetPropertyValue" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="propertyNamespace">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="propertyName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="M:OOAdvantech.MetaDataRepository.MetaObject.GetPropertyValue``1(System.String,System.String)" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.MetaObject" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.MetaObject.GetPropertyValue(System.Type,System.String,System.String)">
      <apidata name="GetPropertyValue" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="propertyType">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="propertyNamespace">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="propertyName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.MetaObject" ref="true" />
      </containers>
    </api>
    <api id="P:OOAdvantech.MetaDataRepository.MetaObject.Identity">
      <apidata name="Identity" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_Identity" />
      <returns>
        <type api="T:OOAdvantech.MetaDataRepository.MetaObjectID" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.MetaObject" ref="true" />
      </containers>
    </api>
    <api id="P:OOAdvantech.MetaDataRepository.MetaObject.ImplementationUnit">
      <apidata name="ImplementationUnit" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_ImplementationUnit" />
      <returns>
        <type api="T:OOAdvantech.MetaDataRepository.Component" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.MetaObject" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.AssociationAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Implementation</value>
          </argument>
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:OOAdvantech.MetaDataRepository.Component" ref="true" />
            </typeValue>
          </argument>
          <argument>
            <type api="T:OOAdvantech.MetaDataRepository.Roles" ref="false" />
            <enumValue>
              <field name="RoleB" />
            </enumValue>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>{8FAF0E7A-D1F5-42A0-9887-25790C5913BB}</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.AssociationEndBehavior" ref="true" />
          <argument>
            <type api="T:OOAdvantech.MetaDataRepository.PersistencyFlag" ref="false" />
            <enumValue>
              <field name="OnConstruction" />
            </enumValue>
          </argument>
        </attribute>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.RoleBMultiplicityRangeAttribute" ref="true" />
          <argument>
            <type api="T:System.UInt64" ref="false" />
            <value>0</value>
          </argument>
          <argument>
            <type api="T:System.UInt64" ref="false" />
            <value>1</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.PersistentMember" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>_ImplementationUnit</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="F:OOAdvantech.MetaDataRepository.MetaObject.LockObject">
      <apidata name="LockObject" group="member" subgroup="field" />
      <memberdata visibility="family" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.MetaObject" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.MetaObject.MetaObjectChangeState">
      <apidata name="MetaObjectChangeState" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.MetaObject" ref="true" />
      </containers>
    </api>
    <api id="F:OOAdvantech.MetaDataRepository.MetaObject.MetaObjectIDStream">
      <apidata name="MetaObjectIDStream" group="member" subgroup="field" />
      <memberdata visibility="family" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.MetaObject" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.PersistentMember" ref="true" />
        </attribute>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.BackwardCompatibilityID" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>+23</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:OOAdvantech.MetaDataRepository.MetaObject.Name">
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Name" />
      <setter name="set_Name" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.MetaObject" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.BackwardCompatibilityID" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>+3</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.PersistentMember" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>_Name</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:OOAdvantech.MetaDataRepository.MetaObject.Namespace">
      <apidata name="Namespace" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_Namespace" />
      <returns>
        <type api="T:OOAdvantech.MetaDataRepository.Namespace" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.MetaObject" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.AssociationEndBehavior" ref="true" />
          <argument>
            <type api="T:OOAdvantech.MetaDataRepository.PersistencyFlag" ref="false" />
            <enumValue>
              <field name="OnConstruction" />
            </enumValue>
          </argument>
        </attribute>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.RoleBMultiplicityRangeAttribute" ref="true" />
          <argument>
            <type api="T:System.UInt64" ref="false" />
            <value>0</value>
          </argument>
          <argument>
            <type api="T:System.UInt64" ref="false" />
            <value>1</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.AssociationAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>NamespaceMember</value>
          </argument>
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:OOAdvantech.MetaDataRepository.Namespace" ref="true" />
            </typeValue>
          </argument>
          <argument>
            <type api="T:OOAdvantech.MetaDataRepository.Roles" ref="false" />
            <enumValue>
              <field name="RoleB" />
            </enumValue>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>{A70335FA-743A-40DF-B6CB-FF0F4481484C}</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.PersistentMember" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>_Namespace</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:OOAdvantech.MetaDataRepository.MetaObject.OQLFullName">
      <apidata name="OQLFullName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_OQLFullName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.MetaObject" ref="true" />
      </containers>
    </api>
    <api id="P:OOAdvantech.MetaDataRepository.MetaObject.OQLName">
      <apidata name="OQLName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_OQLName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.MetaObject" ref="true" />
      </containers>
    </api>
    <api id="F:OOAdvantech.MetaDataRepository.MetaObject.Properties">
      <apidata name="Properties" group="member" subgroup="field" />
      <memberdata visibility="public" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:OOAdvantech.ExtensionProperties" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.MetaObject" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.MetaObject.PutPropertyValue(System.String,System.String,System.Object)">
      <apidata name="PutPropertyValue" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="PropertyNamespace">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="PropertyName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="PropertyValue">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.MetaObject" ref="true" />
      </containers>
    </api>
    <api id="F:OOAdvantech.MetaDataRepository.MetaObject.ReaderWriterLock">
      <apidata name="ReaderWriterLock" group="member" subgroup="field" />
      <memberdata visibility="family" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:OOAdvantech.Synchronization.ReaderWriterLock" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.MetaObject" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.MetaObject.SetIdentity(OOAdvantech.MetaDataRepository.MetaObjectID)">
      <apidata name="SetIdentity" group="member" subgroup="method" />
      <memberdata visibility="family or assembly" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="theIdentity">
          <type api="T:OOAdvantech.MetaDataRepository.MetaObjectID" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.MetaObject" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.MetaObject.SetNamespace(OOAdvantech.MetaDataRepository.Namespace)">
      <apidata name="SetNamespace" group="member" subgroup="method" />
      <memberdata visibility="family or assembly" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="mNamespace">
          <type api="T:OOAdvantech.MetaDataRepository.Namespace" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.MetaObject" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.MetaObject.ShallowSynchronize(OOAdvantech.MetaDataRepository.MetaObject)">
      <apidata name="ShallowSynchronize" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="originClassifier">
          <type api="T:OOAdvantech.MetaDataRepository.MetaObject" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.MetaObject" ref="true" />
      </containers>
    </api>
    <api id="P:OOAdvantech.MetaDataRepository.MetaObject.SupplierDependencies">
      <apidata name="SupplierDependencies" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_SupplierDependencies" />
      <returns>
        <type api="T:OOAdvantech.Collections.Generic.Set`1" ref="true">
          <specialization>
            <type api="T:OOAdvantech.MetaDataRepository.Dependency" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.MetaObject" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.RoleBMultiplicityRangeAttribute" ref="true" />
          <argument>
            <type api="T:System.UInt64" ref="false" />
            <value>0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.AssociationAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>SupplierDependency</value>
          </argument>
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:OOAdvantech.MetaDataRepository.Dependency" ref="true" />
            </typeValue>
          </argument>
          <argument>
            <type api="T:OOAdvantech.MetaDataRepository.Roles" ref="false" />
            <enumValue>
              <field name="RoleB" />
            </enumValue>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>{945370AF-442A-490A-A336-9EE77D07F621}</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.AssociationEndBehavior" ref="true" />
          <argument>
            <type api="T:OOAdvantech.MetaDataRepository.PersistencyFlag" ref="false" />
            <enumValue>
              <field name="OnConstruction" />
            </enumValue>
          </argument>
        </attribute>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.PersistentMember" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>_SupplierDependencies</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.MetaObject.Synchronize(OOAdvantech.MetaDataRepository.MetaObject)">
      <apidata name="Synchronize" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="originMetaObject">
          <type api="T:OOAdvantech.MetaDataRepository.MetaObject" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.MetaObject" ref="true" />
      </containers>
    </api>
    <api id="F:OOAdvantech.MetaDataRepository.MetaObject.Visibility">
      <apidata name="Visibility" group="member" subgroup="field" />
      <memberdata visibility="public" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:OOAdvantech.MetaDataRepository.VisibilityKind" ref="false" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.MetaObject" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.BackwardCompatibilityID" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>+2</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.PersistentMember" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="T:OOAdvantech.MetaDataRepository.MetaObject.MetaDataError">
      <apidata name="MetaDataError" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" layout="sequential" format="ansi" />
      <elements>
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject.MetaDataError.ErrorMessage" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject.MetaDataError.ErrorPath" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.MetaDataError.#ctor(System.String,System.String)" />
        <element api="M:System.ValueType.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.Equals(System.Object)">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.ValueType" ref="true" />
          </containers>
        </element>
        <element api="M:System.ValueType.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.GetHashCode">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.ValueType" ref="true" />
          </containers>
        </element>
        <element api="M:System.ValueType.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.ToString">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.ValueType" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.MetaObject" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.MetaObject.MetaDataError.#ctor(System.String,System.String)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="errorMessage">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="errorPath">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.MetaObject.MetaDataError" ref="false">
          <type api="T:OOAdvantech.MetaDataRepository.MetaObject" ref="true" />
        </type>
      </containers>
    </api>
    <api id="F:OOAdvantech.MetaDataRepository.MetaObject.MetaDataError.ErrorMessage">
      <apidata name="ErrorMessage" group="member" subgroup="field" />
      <memberdata visibility="public" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.MetaObject.MetaDataError" ref="false">
          <type api="T:OOAdvantech.MetaDataRepository.MetaObject" ref="true" />
        </type>
      </containers>
    </api>
    <api id="F:OOAdvantech.MetaDataRepository.MetaObject.MetaDataError.ErrorPath">
      <apidata name="ErrorPath" group="member" subgroup="field" />
      <memberdata visibility="public" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.MetaObject.MetaDataError" ref="false">
          <type api="T:OOAdvantech.MetaDataRepository.MetaObject" ref="true" />
        </type>
      </containers>
    </api>
    <api id="T:OOAdvantech.MetaDataRepository.MetaObjectChangedEventHandler">
      <apidata name="MetaObjectChangedEventHandler" group="type" subgroup="delegate" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
      </containers>
    </api>
    <api id="T:OOAdvantech.MetaDataRepository.MetaObjectCollectionA">
      <apidata name="MetaObjectCollectionA" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:OOAdvantech.PersistenceLayer.ObjectContainer" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:OOAdvantech.Transactions.ITransactionalObject" ref="true" />
        <type api="T:System.Collections.ICollection" ref="true" />
        <type api="T:System.Collections.IEnumerable" ref="true" />
      </implements>
      <elements>
        <element api="M:OOAdvantech.MetaDataRepository.MetaObjectCollectionA.GetObjectEnumerator" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObjectCollectionA.MarkChanges(OOAdvantech.Transactions.Transaction)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObjectCollectionA.MarkChanges(OOAdvantech.Transactions.Transaction,System.Reflection.FieldInfo[])" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObjectCollectionA.MergeChanges(OOAdvantech.Transactions.Transaction,OOAdvantech.Transactions.Transaction)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObjectCollectionA.UndoChanges(OOAdvantech.Transactions.Transaction)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObjectCollectionA.CommitChanges(OOAdvantech.Transactions.Transaction)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObjectCollectionA.#ctor(OOAdvantech.MetaDataRepository.MetaObjectCollectionA,OOAdvantech.MetaDataRepository.MetaObjectCollectionA.AccessType)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObjectCollectionA.#ctor" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObjectCollectionA.#ctor(OOAdvantech.MetaDataRepository.MetaObjectCollectionA)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObjectCollectionA.#ctor(System.Collections.ICollection)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObjectCollectionA.RemoveAll" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObjectCollectionA.Contains(OOAdvantech.MetaDataRepository.MetaObject)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObjectCollectionA.AddCollection(System.Collections.ICollection)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObjectCollectionA.AddCollection(OOAdvantech.MetaDataRepository.MetaObjectCollectionA)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObjectCollectionA.Remove(OOAdvantech.MetaDataRepository.MetaObject)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObjectCollectionA.Add(OOAdvantech.MetaDataRepository.MetaObject)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObjectCollectionA.GetEnumerator" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObjectCollectionA.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObjectCollectionA.System#Collections#IEnumerable#GetEnumerator" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObjectCollectionA.Count" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObjectCollectionA.System#Collections#ICollection#Count" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObjectCollectionA.System#Collections#ICollection#IsSynchronized" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObjectCollectionA.System#Collections#ICollection#SyncRoot" />
        <element api="F:OOAdvantech.PersistenceLayer.ObjectContainer._theObjects" />
        <element api="M:OOAdvantech.PersistenceLayer.ObjectContainer.Init(System.Collections.ICollection)" />
        <element api="P:OOAdvantech.PersistenceLayer.ObjectContainer.theObjects" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:OOAdvantech.Transactions.ContainByValue" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.MetaObjectCollectionA.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.MetaObjectCollectionA" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.MetaObjectCollectionA.#ctor(OOAdvantech.MetaDataRepository.MetaObjectCollectionA)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="CopyCollection">
          <type api="T:OOAdvantech.MetaDataRepository.MetaObjectCollectionA" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.MetaObjectCollectionA" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.MetaObjectCollectionA.#ctor(OOAdvantech.MetaDataRepository.MetaObjectCollectionA,OOAdvantech.MetaDataRepository.MetaObjectCollectionA.AccessType)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="assignedCollection">
          <type api="T:OOAdvantech.MetaDataRepository.MetaObjectCollectionA" ref="true" />
        </parameter>
        <parameter name="accessType">
          <type api="T:OOAdvantech.MetaDataRepository.MetaObjectCollectionA.AccessType" ref="false">
            <type api="T:OOAdvantech.MetaDataRepository.MetaObjectCollectionA" ref="true" />
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.MetaObjectCollectionA" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.MetaObjectCollectionA.#ctor(System.Collections.ICollection)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="copyCollection">
          <type api="T:System.Collections.ICollection" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.MetaObjectCollectionA" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.MetaObjectCollectionA.Add(OOAdvantech.MetaDataRepository.MetaObject)">
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="theObject">
          <type api="T:OOAdvantech.MetaDataRepository.MetaObject" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.MetaObjectCollectionA" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.MetaObjectCollectionA.AddCollection(OOAdvantech.MetaDataRepository.MetaObjectCollectionA)">
      <apidata name="AddCollection" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="theObjectCollection">
          <type api="T:OOAdvantech.MetaDataRepository.MetaObjectCollectionA" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.MetaObjectCollectionA" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.MetaObjectCollectionA.AddCollection(System.Collections.ICollection)">
      <apidata name="AddCollection" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="copyCollection">
          <type api="T:System.Collections.ICollection" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.MetaObjectCollectionA" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.MetaObjectCollectionA.CommitChanges(OOAdvantech.Transactions.Transaction)">
      <apidata name="CommitChanges" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="transaction">
          <type api="T:OOAdvantech.Transactions.Transaction" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:OOAdvantech.Transactions.ITransactionalObject.CommitChanges(OOAdvantech.Transactions.Transaction)">
          <type api="T:OOAdvantech.Transactions.ITransactionalObject" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.MetaObjectCollectionA" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.MetaObjectCollectionA.Contains(OOAdvantech.MetaDataRepository.MetaObject)">
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="theMetaObject">
          <type api="T:OOAdvantech.MetaDataRepository.MetaObject" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.MetaObjectCollectionA" ref="true" />
      </containers>
    </api>
    <api id="P:OOAdvantech.MetaDataRepository.MetaObjectCollectionA.Count">
      <apidata name="Count" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Count" />
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.MetaObjectCollectionA" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.MetaObjectCollectionA.GetEnumerator">
      <apidata name="GetEnumerator" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:OOAdvantech.MetaDataRepository.MetaObjectCollectionA.MetaObjectEnumerator" ref="true">
          <type api="T:OOAdvantech.MetaDataRepository.MetaObjectCollectionA" ref="true" />
        </type>
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.MetaObjectCollectionA" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.MetaObjectCollectionA.GetObjectEnumerator">
      <apidata name="GetObjectEnumerator" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:OOAdvantech.PersistenceLayer.ObjectContainer.GetObjectEnumerator">
          <type api="T:OOAdvantech.PersistenceLayer.ObjectContainer" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Collections.IEnumerator" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.MetaObjectCollectionA" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.MetaObjectCollectionA.MarkChanges(OOAdvantech.Transactions.Transaction)">
      <apidata name="MarkChanges" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="transaction">
          <type api="T:OOAdvantech.Transactions.Transaction" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:OOAdvantech.Transactions.ITransactionalObject.MarkChanges(OOAdvantech.Transactions.Transaction)">
          <type api="T:OOAdvantech.Transactions.ITransactionalObject" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.MetaObjectCollectionA" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.MetaObjectCollectionA.MarkChanges(OOAdvantech.Transactions.Transaction,System.Reflection.FieldInfo[])">
      <apidata name="MarkChanges" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="transaction">
          <type api="T:OOAdvantech.Transactions.Transaction" ref="true" />
        </parameter>
        <parameter name="fields">
          <arrayOf rank="1">
            <type api="T:System.Reflection.FieldInfo" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <implements>
        <member api="M:OOAdvantech.Transactions.ITransactionalObject.MarkChanges(OOAdvantech.Transactions.Transaction,System.Reflection.FieldInfo[])">
          <type api="T:OOAdvantech.Transactions.ITransactionalObject" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.MetaObjectCollectionA" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.MetaObjectCollectionA.MergeChanges(OOAdvantech.Transactions.Transaction,OOAdvantech.Transactions.Transaction)">
      <apidata name="MergeChanges" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="mergeInTransaction">
          <type api="T:OOAdvantech.Transactions.Transaction" ref="true" />
        </parameter>
        <parameter name="mergedTransaction">
          <type api="T:OOAdvantech.Transactions.Transaction" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:OOAdvantech.Transactions.ITransactionalObject.MergeChanges(OOAdvantech.Transactions.Transaction,OOAdvantech.Transactions.Transaction)">
          <type api="T:OOAdvantech.Transactions.ITransactionalObject" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.MetaObjectCollectionA" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.MetaObjectCollectionA.Remove(OOAdvantech.MetaDataRepository.MetaObject)">
      <apidata name="Remove" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="theObject">
          <type api="T:OOAdvantech.MetaDataRepository.MetaObject" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.MetaObjectCollectionA" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.MetaObjectCollectionA.RemoveAll">
      <apidata name="RemoveAll" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.MetaObjectCollectionA" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.MetaObjectCollectionA.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="array">
          <type api="T:System.Array" ref="true" />
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)">
          <type api="T:System.Collections.ICollection" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.MetaObjectCollectionA" ref="true" />
      </containers>
    </api>
    <api id="P:OOAdvantech.MetaDataRepository.MetaObjectCollectionA.System#Collections#ICollection#Count">
      <apidata name="Count" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.Collections.ICollection.Count" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Collections.ICollection.Count">
          <type api="T:System.Collections.ICollection" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.MetaObjectCollectionA" ref="true" />
      </containers>
    </api>
    <api id="P:OOAdvantech.MetaDataRepository.MetaObjectCollectionA.System#Collections#ICollection#IsSynchronized">
      <apidata name="IsSynchronized" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.Collections.ICollection.IsSynchronized" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Collections.ICollection.IsSynchronized">
          <type api="T:System.Collections.ICollection" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.MetaObjectCollectionA" ref="true" />
      </containers>
    </api>
    <api id="P:OOAdvantech.MetaDataRepository.MetaObjectCollectionA.System#Collections#ICollection#SyncRoot">
      <apidata name="SyncRoot" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.Collections.ICollection.SyncRoot" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="P:System.Collections.ICollection.SyncRoot">
          <type api="T:System.Collections.ICollection" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.MetaObjectCollectionA" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.MetaObjectCollectionA.System#Collections#IEnumerable#GetEnumerator">
      <apidata name="GetEnumerator" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <returns>
        <type api="T:System.Collections.IEnumerator" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Collections.IEnumerable.GetEnumerator">
          <type api="T:System.Collections.IEnumerable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.MetaObjectCollectionA" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.MetaObjectCollectionA.UndoChanges(OOAdvantech.Transactions.Transaction)">
      <apidata name="UndoChanges" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="transaction">
          <type api="T:OOAdvantech.Transactions.Transaction" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:OOAdvantech.Transactions.ITransactionalObject.UndoChanges(OOAdvantech.Transactions.Transaction)">
          <type api="T:OOAdvantech.Transactions.ITransactionalObject" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.MetaObjectCollectionA" ref="true" />
      </containers>
    </api>
    <api id="T:OOAdvantech.MetaDataRepository.MetaObjectCollectionA.AccessType">
      <apidata name="AccessType" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="F:OOAdvantech.MetaDataRepository.MetaObjectCollectionA.AccessType.ReadOnly" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObjectCollectionA.AccessType.ReadWrite" />
      </elements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.MetaObjectCollectionA" ref="true" />
      </containers>
    </api>
    <api id="F:OOAdvantech.MetaDataRepository.MetaObjectCollectionA.AccessType.ReadOnly">
      <apidata name="ReadOnly" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:OOAdvantech.MetaDataRepository.MetaObjectCollectionA.AccessType" ref="false">
          <type api="T:OOAdvantech.MetaDataRepository.MetaObjectCollectionA" ref="true" />
        </type>
      </returns>
      <value>0</value>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.MetaObjectCollectionA.AccessType" ref="false">
          <type api="T:OOAdvantech.MetaDataRepository.MetaObjectCollectionA" ref="true" />
        </type>
      </containers>
    </api>
    <api id="F:OOAdvantech.MetaDataRepository.MetaObjectCollectionA.AccessType.ReadWrite">
      <apidata name="ReadWrite" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:OOAdvantech.MetaDataRepository.MetaObjectCollectionA.AccessType" ref="false">
          <type api="T:OOAdvantech.MetaDataRepository.MetaObjectCollectionA" ref="true" />
        </type>
      </returns>
      <value>1</value>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.MetaObjectCollectionA.AccessType" ref="false">
          <type api="T:OOAdvantech.MetaDataRepository.MetaObjectCollectionA" ref="true" />
        </type>
      </containers>
    </api>
    <api id="T:OOAdvantech.MetaDataRepository.MetaObjectCollectionA.MetaObjectEnumerator">
      <apidata name="MetaObjectEnumerator" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Collections.IEnumerator" ref="true" />
      </implements>
      <elements>
        <element api="M:OOAdvantech.MetaDataRepository.MetaObjectCollectionA.MetaObjectEnumerator.MoveNext" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObjectCollectionA.MetaObjectEnumerator.System#Collections#IEnumerator#MoveNext" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObjectCollectionA.MetaObjectEnumerator.System#Collections#IEnumerator#Reset" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObjectCollectionA.MetaObjectEnumerator.Current" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObjectCollectionA.MetaObjectEnumerator.System#Collections#IEnumerator#Current" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.MetaObjectCollectionA" ref="true" />
      </containers>
    </api>
    <api id="P:OOAdvantech.MetaDataRepository.MetaObjectCollectionA.MetaObjectEnumerator.Current">
      <apidata name="Current" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Current" />
      <returns>
        <type api="T:OOAdvantech.MetaDataRepository.MetaObject" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.MetaObjectCollectionA.MetaObjectEnumerator" ref="true">
          <type api="T:OOAdvantech.MetaDataRepository.MetaObjectCollectionA" ref="true" />
        </type>
      </containers>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.MetaObjectCollectionA.MetaObjectEnumerator.MoveNext">
      <apidata name="MoveNext" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.MetaObjectCollectionA.MetaObjectEnumerator" ref="true">
          <type api="T:OOAdvantech.MetaDataRepository.MetaObjectCollectionA" ref="true" />
        </type>
      </containers>
    </api>
    <api id="P:OOAdvantech.MetaDataRepository.MetaObjectCollectionA.MetaObjectEnumerator.System#Collections#IEnumerator#Current">
      <apidata name="Current" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.Collections.IEnumerator.Current" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="P:System.Collections.IEnumerator.Current">
          <type api="T:System.Collections.IEnumerator" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.MetaObjectCollectionA.MetaObjectEnumerator" ref="true">
          <type api="T:OOAdvantech.MetaDataRepository.MetaObjectCollectionA" ref="true" />
        </type>
      </containers>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.MetaObjectCollectionA.MetaObjectEnumerator.System#Collections#IEnumerator#MoveNext">
      <apidata name="MoveNext" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Collections.IEnumerator.MoveNext">
          <type api="T:System.Collections.IEnumerator" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.MetaObjectCollectionA.MetaObjectEnumerator" ref="true">
          <type api="T:OOAdvantech.MetaDataRepository.MetaObjectCollectionA" ref="true" />
        </type>
      </containers>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.MetaObjectCollectionA.MetaObjectEnumerator.System#Collections#IEnumerator#Reset">
      <apidata name="Reset" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <implements>
        <member api="M:System.Collections.IEnumerator.Reset">
          <type api="T:System.Collections.IEnumerator" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.MetaObjectCollectionA.MetaObjectEnumerator" ref="true">
          <type api="T:OOAdvantech.MetaDataRepository.MetaObjectCollectionA" ref="true" />
        </type>
      </containers>
    </api>
    <api id="T:OOAdvantech.MetaDataRepository.MetaObjectID">
      <apidata name="MetaObjectID" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:OOAdvantech.MetaDataRepository.MetaObjectID.#ctor(System.String)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObjectID.ToString" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObjectID.op_Equality(OOAdvantech.MetaDataRepository.MetaObjectID,OOAdvantech.MetaDataRepository.MetaObjectID)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObjectID.op_Inequality(OOAdvantech.MetaDataRepository.MetaObjectID,OOAdvantech.MetaDataRepository.MetaObjectID)" />
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.MetaObjectID.#ctor(System.String)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="theID">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.MetaObjectID" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.MetaObjectID.op_Equality(OOAdvantech.MetaDataRepository.MetaObjectID,OOAdvantech.MetaDataRepository.MetaObjectID)">
      <apidata name="Equality" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="Left">
          <type api="T:OOAdvantech.MetaDataRepository.MetaObjectID" ref="true" />
        </parameter>
        <parameter name="Right">
          <type api="T:OOAdvantech.MetaDataRepository.MetaObjectID" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.MetaObjectID" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.MetaObjectID.op_Inequality(OOAdvantech.MetaDataRepository.MetaObjectID,OOAdvantech.MetaDataRepository.MetaObjectID)">
      <apidata name="Inequality" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="Left">
          <type api="T:OOAdvantech.MetaDataRepository.MetaObjectID" ref="true" />
        </parameter>
        <parameter name="Right">
          <type api="T:OOAdvantech.MetaDataRepository.MetaObjectID" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.MetaObjectID" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.MetaObjectID.ToString">
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.ToString">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.MetaObjectID" ref="true" />
      </containers>
    </api>
    <api id="T:OOAdvantech.MetaDataRepository.MetaObjectsStack">
      <apidata name="MetaObjectsStack" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="F:OOAdvantech.MetaDataRepository.MetaObjectsStack._CurrentMetaObjectCreator" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObjectsStack.GetIdentity(OOAdvantech.MetaDataRepository.MetaObject)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObjectsStack.FindMetaObjectInPLace(OOAdvantech.MetaDataRepository.MetaObject,OOAdvantech.MetaDataRepository.MetaObject)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObjectsStack.FindMetaObjectInPLace(System.String,OOAdvantech.MetaDataRepository.MetaObject)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObjectsStack.InitializeMetaObject(OOAdvantech.MetaDataRepository.MetaObject,OOAdvantech.MetaDataRepository.MetaObject)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObjectsStack.CreateMetaObjectInPlace(OOAdvantech.MetaDataRepository.MetaObject,OOAdvantech.MetaDataRepository.MetaObject)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObjectsStack.#ctor" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObjectsStack.CurrentMetaObjectCreator" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.MetaObjectsStack.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.MetaObjectsStack" ref="true" />
      </containers>
    </api>
    <api id="F:OOAdvantech.MetaDataRepository.MetaObjectsStack._CurrentMetaObjectCreator">
      <apidata name="_CurrentMetaObjectCreator" group="member" subgroup="field" />
      <memberdata visibility="family" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:OOAdvantech.MetaDataRepository.MetaObjectsStack" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.MetaObjectsStack" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.MetaObjectsStack.CreateMetaObjectInPlace(OOAdvantech.MetaDataRepository.MetaObject,OOAdvantech.MetaDataRepository.MetaObject)">
      <apidata name="CreateMetaObjectInPlace" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="originMetaObject">
          <type api="T:OOAdvantech.MetaDataRepository.MetaObject" ref="true" />
        </parameter>
        <parameter name="placeIdentifier">
          <type api="T:OOAdvantech.MetaDataRepository.MetaObject" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:OOAdvantech.MetaDataRepository.MetaObject" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.MetaObjectsStack" ref="true" />
      </containers>
    </api>
    <api id="P:OOAdvantech.MetaDataRepository.MetaObjectsStack.CurrentMetaObjectCreator">
      <apidata name="CurrentMetaObjectCreator" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_CurrentMetaObjectCreator" />
      <setter name="set_CurrentMetaObjectCreator" />
      <returns>
        <type api="T:OOAdvantech.MetaDataRepository.MetaObjectsStack" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.MetaObjectsStack" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.MetaObjectsStack.FindMetaObjectInPLace(OOAdvantech.MetaDataRepository.MetaObject,OOAdvantech.MetaDataRepository.MetaObject)">
      <apidata name="FindMetaObjectInPLace" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="OriginMetaObject">
          <type api="T:OOAdvantech.MetaDataRepository.MetaObject" ref="true" />
        </parameter>
        <parameter name="placeIdentifier">
          <type api="T:OOAdvantech.MetaDataRepository.MetaObject" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:OOAdvantech.MetaDataRepository.MetaObject" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.MetaObjectsStack" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.MetaObjectsStack.FindMetaObjectInPLace(System.String,OOAdvantech.MetaDataRepository.MetaObject)">
      <apidata name="FindMetaObjectInPLace" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="MetaObjectID">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="placeIdentifier">
          <type api="T:OOAdvantech.MetaDataRepository.MetaObject" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:OOAdvantech.MetaDataRepository.MetaObject" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.MetaObjectsStack" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.MetaObjectsStack.GetIdentity(OOAdvantech.MetaDataRepository.MetaObject)">
      <apidata name="GetIdentity" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="metaObject">
          <type api="T:OOAdvantech.MetaDataRepository.MetaObject" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:OOAdvantech.MetaDataRepository.MetaObjectID" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.MetaObjectsStack" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.MetaObjectsStack.InitializeMetaObject(OOAdvantech.MetaDataRepository.MetaObject,OOAdvantech.MetaDataRepository.MetaObject)">
      <apidata name="InitializeMetaObject" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="OriginMetaObject">
          <type api="T:OOAdvantech.MetaDataRepository.MetaObject" ref="true" />
        </parameter>
        <parameter name="NewMetaObject">
          <type api="T:OOAdvantech.MetaDataRepository.MetaObject" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.MetaObjectsStack" ref="true" />
      </containers>
    </api>
    <api id="T:OOAdvantech.MetaDataRepository.Method">
      <apidata name="Method" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:OOAdvantech.MetaDataRepository.BehavioralFeature" ref="true" />
          <type api="T:OOAdvantech.MetaDataRepository.Feature" ref="true" />
          <type api="T:OOAdvantech.MetaDataRepository.MetaObject" ref="true" />
          <type api="T:System.MarshalByRefObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="F:OOAdvantech.MetaDataRepository.Method._Specification" />
        <element api="M:OOAdvantech.MetaDataRepository.Method.#ctor" />
        <element api="M:OOAdvantech.MetaDataRepository.Method.#ctor(OOAdvantech.MetaDataRepository.Operation)" />
        <element api="M:OOAdvantech.MetaDataRepository.Method.GetExtensionMetaObjects" />
        <element api="P:OOAdvantech.MetaDataRepository.Method.Specification" />
        <element api="F:OOAdvantech.MetaDataRepository.Feature._IsStatic" />
        <element api="F:OOAdvantech.MetaDataRepository.Feature._Owner" />
        <element api="P:OOAdvantech.MetaDataRepository.Feature.IsStatic" />
        <element api="P:OOAdvantech.MetaDataRepository.Feature.Owner" />
        <element api="P:OOAdvantech.MetaDataRepository.Feature.ImplementationUnit" />
        <element api="P:OOAdvantech.MetaDataRepository.Feature.Namespace" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject._CaseInsensitiveName" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject._ImplementationUnit" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject.LockObject" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject.ReaderWriterLock" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject.Properties" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject._Name" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject.MetaObjectIDStream" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject._Identity" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject._ClientDependencies" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject._SupplierDependencies" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject._Namespace" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject.Visibility" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.MetaObjectChangeState" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.ShallowSynchronize(OOAdvantech.MetaDataRepository.MetaObject)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.AddDependency(System.String,OOAdvantech.MetaDataRepository.MetaObject)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.ErrorCheck(System.Collections.ArrayList@)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.GetDynamicPropertiesAsXmlString" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.SetIdentity(OOAdvantech.MetaDataRepository.MetaObjectID)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.Synchronize(OOAdvantech.MetaDataRepository.MetaObject)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.GetExtensionMetaObject(System.Type)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.SetNamespace(OOAdvantech.MetaDataRepository.Namespace)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.GetPropertyValue``1(System.String,System.String)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.GetPropertyValue(System.Type,System.String,System.String)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.PutPropertyValue(System.String,System.String,System.Object)" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.CaseInsensitiveName" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.OQLName" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.Name" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.FullName" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.OQLFullName" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.Identity" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.ClientDependencies" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.SupplierDependencies" />
        <element api="E:OOAdvantech.MetaDataRepository.MetaObject.Changed" />
        <element api="M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="cloneIdentity">
              <type api="T:System.Boolean" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.MarshalByRefObject" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.MarshalByRefObject" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.MarshalByRefObject.GetLifetimeService">
          <apidata name="GetLifetimeService" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.MarshalByRefObject" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Security.Permissions.SecurityPermissionAttribute" ref="true" />
              <argument>
                <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
                <enumValue>
                  <field name="LinkDemand" />
                </enumValue>
              </argument>
              <assignment name="Flags">
                <type api="T:System.Security.Permissions.SecurityPermissionFlag" ref="false" />
                <enumValue>
                  <field name="Infrastructure" />
                </enumValue>
              </assignment>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.MarshalByRefObject.InitializeLifetimeService">
          <apidata name="InitializeLifetimeService" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.MarshalByRefObject" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Security.Permissions.SecurityPermissionAttribute" ref="true" />
              <argument>
                <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
                <enumValue>
                  <field name="LinkDemand" />
                </enumValue>
              </argument>
              <assignment name="Flags">
                <type api="T:System.Security.Permissions.SecurityPermissionFlag" ref="false" />
                <enumValue>
                  <field name="Infrastructure" />
                </enumValue>
              </assignment>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.MarshalByRefObject.CreateObjRef(System.Type)">
          <apidata name="CreateObjRef" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="requestedType">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Runtime.Remoting.ObjRef" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.MarshalByRefObject" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Security.Permissions.SecurityPermissionAttribute" ref="true" />
              <argument>
                <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
                <enumValue>
                  <field name="LinkDemand" />
                </enumValue>
              </argument>
              <assignment name="Flags">
                <type api="T:System.Security.Permissions.SecurityPermissionFlag" ref="false" />
                <enumValue>
                  <field name="Infrastructure" />
                </enumValue>
              </assignment>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.BackwardCompatibilityID" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>{B363B99A-8B38-4F3F-A4D4-E8660E2B5E14}</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.Persistent" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.Method.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Method" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.Method.#ctor(OOAdvantech.MetaDataRepository.Operation)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="operation">
          <type api="T:OOAdvantech.MetaDataRepository.Operation" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Method" ref="true" />
      </containers>
    </api>
    <api id="F:OOAdvantech.MetaDataRepository.Method._Specification">
      <apidata name="_Specification" group="member" subgroup="field" />
      <memberdata visibility="family" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:OOAdvantech.MetaDataRepository.Operation" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Method" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.Method.GetExtensionMetaObjects">
      <apidata name="GetExtensionMetaObjects" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:OOAdvantech.MetaDataRepository.MetaObject.GetExtensionMetaObjects">
          <type api="T:OOAdvantech.MetaDataRepository.MetaObject" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Collections.ArrayList" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Method" ref="true" />
      </containers>
    </api>
    <api id="P:OOAdvantech.MetaDataRepository.Method.Specification">
      <apidata name="Specification" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_Specification" />
      <returns>
        <type api="T:OOAdvantech.MetaDataRepository.Operation" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Method" ref="true" />
      </containers>
    </api>
    <api id="T:OOAdvantech.MetaDataRepository.Model">
      <apidata name="Model" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:OOAdvantech.MetaDataRepository.Package" ref="true" />
          <type api="T:OOAdvantech.MetaDataRepository.Namespace" ref="true" />
          <type api="T:OOAdvantech.MetaDataRepository.MetaObject" ref="true" />
          <type api="T:System.MarshalByRefObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:OOAdvantech.MetaDataRepository.Model.#ctor" />
        <element api="M:OOAdvantech.MetaDataRepository.Package.Synchronize(OOAdvantech.MetaDataRepository.MetaObject)" />
        <element api="F:OOAdvantech.MetaDataRepository.Namespace._OwnedElements" />
        <element api="M:OOAdvantech.MetaDataRepository.Namespace.BuildCaseInsensitiveNames" />
        <element api="M:OOAdvantech.MetaDataRepository.Namespace.MakeNameUnaryInNamesapce(OOAdvantech.MetaDataRepository.MetaObject)" />
        <element api="M:OOAdvantech.MetaDataRepository.Namespace.GetExtensionMetaObjects" />
        <element api="M:OOAdvantech.MetaDataRepository.Namespace.AddOwnedElement(OOAdvantech.MetaDataRepository.MetaObject)" />
        <element api="M:OOAdvantech.MetaDataRepository.Namespace.RemoveOwnedElement(OOAdvantech.MetaDataRepository.MetaObject)" />
        <element api="M:OOAdvantech.MetaDataRepository.Namespace.ErrorCheck(System.Collections.ArrayList@)" />
        <element api="P:OOAdvantech.MetaDataRepository.Namespace.OwnedElements" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject._CaseInsensitiveName" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject._ImplementationUnit" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject.LockObject" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject.ReaderWriterLock" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject.Properties" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject._Name" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject.MetaObjectIDStream" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject._Identity" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject._ClientDependencies" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject._SupplierDependencies" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject._Namespace" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject.Visibility" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.MetaObjectChangeState" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.ShallowSynchronize(OOAdvantech.MetaDataRepository.MetaObject)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.AddDependency(System.String,OOAdvantech.MetaDataRepository.MetaObject)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.GetDynamicPropertiesAsXmlString" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.SetIdentity(OOAdvantech.MetaDataRepository.MetaObjectID)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.GetExtensionMetaObject(System.Type)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.SetNamespace(OOAdvantech.MetaDataRepository.Namespace)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.GetPropertyValue``1(System.String,System.String)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.GetPropertyValue(System.Type,System.String,System.String)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.PutPropertyValue(System.String,System.String,System.Object)" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.CaseInsensitiveName" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.ImplementationUnit" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.OQLName" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.Name" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.FullName" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.OQLFullName" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.Identity" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.ClientDependencies" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.SupplierDependencies" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.Namespace" />
        <element api="E:OOAdvantech.MetaDataRepository.MetaObject.Changed" />
        <element api="M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="cloneIdentity">
              <type api="T:System.Boolean" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.MarshalByRefObject" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.MarshalByRefObject" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.MarshalByRefObject.GetLifetimeService">
          <apidata name="GetLifetimeService" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.MarshalByRefObject" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Security.Permissions.SecurityPermissionAttribute" ref="true" />
              <argument>
                <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
                <enumValue>
                  <field name="LinkDemand" />
                </enumValue>
              </argument>
              <assignment name="Flags">
                <type api="T:System.Security.Permissions.SecurityPermissionFlag" ref="false" />
                <enumValue>
                  <field name="Infrastructure" />
                </enumValue>
              </assignment>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.MarshalByRefObject.InitializeLifetimeService">
          <apidata name="InitializeLifetimeService" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.MarshalByRefObject" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Security.Permissions.SecurityPermissionAttribute" ref="true" />
              <argument>
                <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
                <enumValue>
                  <field name="LinkDemand" />
                </enumValue>
              </argument>
              <assignment name="Flags">
                <type api="T:System.Security.Permissions.SecurityPermissionFlag" ref="false" />
                <enumValue>
                  <field name="Infrastructure" />
                </enumValue>
              </assignment>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.MarshalByRefObject.CreateObjRef(System.Type)">
          <apidata name="CreateObjRef" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="requestedType">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Runtime.Remoting.ObjRef" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.MarshalByRefObject" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Security.Permissions.SecurityPermissionAttribute" ref="true" />
              <argument>
                <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
                <enumValue>
                  <field name="LinkDemand" />
                </enumValue>
              </argument>
              <assignment name="Flags">
                <type api="T:System.Security.Permissions.SecurityPermissionFlag" ref="false" />
                <enumValue>
                  <field name="Infrastructure" />
                </enumValue>
              </assignment>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.BackwardCompatibilityID" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>{76ABF67D-FA1A-4784-BDF4-E0299B21E1FA}</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.Persistent" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.Model.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Model" ref="true" />
      </containers>
    </api>
    <api id="T:OOAdvantech.MetaDataRepository.MultiplicityRange">
      <apidata name="MultiplicityRange" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.MarshalByRefObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="F:OOAdvantech.MetaDataRepository.MultiplicityRange.LowLimit" />
        <element api="F:OOAdvantech.MetaDataRepository.MultiplicityRange.HighLimit" />
        <element api="F:OOAdvantech.MetaDataRepository.MultiplicityRange.NoHighLimit" />
        <element api="F:OOAdvantech.MetaDataRepository.MultiplicityRange.Unspecified" />
        <element api="M:OOAdvantech.MetaDataRepository.MultiplicityRange.#ctor(System.UInt64)" />
        <element api="M:OOAdvantech.MetaDataRepository.MultiplicityRange.#ctor(System.UInt64,System.UInt64)" />
        <element api="M:OOAdvantech.MetaDataRepository.MultiplicityRange.#ctor" />
        <element api="M:OOAdvantech.MetaDataRepository.MultiplicityRange.#ctor(System.UInt64,System.UInt64,System.Boolean,System.Boolean)" />
        <element api="M:OOAdvantech.MetaDataRepository.MultiplicityRange.#ctor(OOAdvantech.MetaDataRepository.MultiplicityRange)" />
        <element api="P:OOAdvantech.MetaDataRepository.MultiplicityRange.IsMany" />
        <element api="M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="cloneIdentity">
              <type api="T:System.Boolean" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.MarshalByRefObject" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.MarshalByRefObject" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.MarshalByRefObject.GetLifetimeService">
          <apidata name="GetLifetimeService" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.MarshalByRefObject" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Security.Permissions.SecurityPermissionAttribute" ref="true" />
              <argument>
                <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
                <enumValue>
                  <field name="LinkDemand" />
                </enumValue>
              </argument>
              <assignment name="Flags">
                <type api="T:System.Security.Permissions.SecurityPermissionFlag" ref="false" />
                <enumValue>
                  <field name="Infrastructure" />
                </enumValue>
              </assignment>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.MarshalByRefObject.InitializeLifetimeService">
          <apidata name="InitializeLifetimeService" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.MarshalByRefObject" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Security.Permissions.SecurityPermissionAttribute" ref="true" />
              <argument>
                <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
                <enumValue>
                  <field name="LinkDemand" />
                </enumValue>
              </argument>
              <assignment name="Flags">
                <type api="T:System.Security.Permissions.SecurityPermissionFlag" ref="false" />
                <enumValue>
                  <field name="Infrastructure" />
                </enumValue>
              </assignment>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.MarshalByRefObject.CreateObjRef(System.Type)">
          <apidata name="CreateObjRef" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="requestedType">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Runtime.Remoting.ObjRef" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.MarshalByRefObject" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Security.Permissions.SecurityPermissionAttribute" ref="true" />
              <argument>
                <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
                <enumValue>
                  <field name="LinkDemand" />
                </enumValue>
              </argument>
              <assignment name="Flags">
                <type api="T:System.Security.Permissions.SecurityPermissionFlag" ref="false" />
                <enumValue>
                  <field name="Infrastructure" />
                </enumValue>
              </assignment>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.Persistent" ref="true" />
        </attribute>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.BackwardCompatibilityID" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>{89FDC9E5-534B-40A2-AC45-062ECDEAC33B}</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.MultiplicityRange.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.MultiplicityRange" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.MultiplicityRange.#ctor(OOAdvantech.MetaDataRepository.MultiplicityRange)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="CopiedMultiplicityRange">
          <type api="T:OOAdvantech.MetaDataRepository.MultiplicityRange" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.MultiplicityRange" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.MultiplicityRange.#ctor(System.UInt64)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="lowLimit">
          <type api="T:System.UInt64" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.MultiplicityRange" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.MultiplicityRange.#ctor(System.UInt64,System.UInt64)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="lowLimit">
          <type api="T:System.UInt64" ref="false" />
        </parameter>
        <parameter name="highLimit">
          <type api="T:System.UInt64" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.MultiplicityRange" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.MultiplicityRange.#ctor(System.UInt64,System.UInt64,System.Boolean,System.Boolean)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="lowLimit">
          <type api="T:System.UInt64" ref="false" />
        </parameter>
        <parameter name="highLimit">
          <type api="T:System.UInt64" ref="false" />
        </parameter>
        <parameter name="InitNoHighLimit">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="InitUnspecified">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.MultiplicityRange" ref="true" />
      </containers>
    </api>
    <api id="F:OOAdvantech.MetaDataRepository.MultiplicityRange.HighLimit">
      <apidata name="HighLimit" group="member" subgroup="field" />
      <memberdata visibility="public" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.UInt64" ref="false" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.MultiplicityRange" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.PersistentMember" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="P:OOAdvantech.MetaDataRepository.MultiplicityRange.IsMany">
      <apidata name="IsMany" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsMany" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.MultiplicityRange" ref="true" />
      </containers>
    </api>
    <api id="F:OOAdvantech.MetaDataRepository.MultiplicityRange.LowLimit">
      <apidata name="LowLimit" group="member" subgroup="field" />
      <memberdata visibility="public" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.UInt64" ref="false" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.MultiplicityRange" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.PersistentMember" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="F:OOAdvantech.MetaDataRepository.MultiplicityRange.NoHighLimit">
      <apidata name="NoHighLimit" group="member" subgroup="field" />
      <memberdata visibility="public" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.MultiplicityRange" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.PersistentMember" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="F:OOAdvantech.MetaDataRepository.MultiplicityRange.Unspecified">
      <apidata name="Unspecified" group="member" subgroup="field" />
      <memberdata visibility="public" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.MultiplicityRange" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.PersistentMember" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="T:OOAdvantech.MetaDataRepository.Namespace">
      <apidata name="Namespace" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:OOAdvantech.MetaDataRepository.MetaObject" ref="true" />
          <type api="T:System.MarshalByRefObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:OOAdvantech.MetaDataRepository.Classifier" ref="true" />
          <type api="T:OOAdvantech.MetaDataRepository.Package" ref="true" />
          <type api="T:OOAdvantech.MetaDataRepository.Storage" ref="true" />
        </descendents>
      </family>
      <elements>
        <element api="F:OOAdvantech.MetaDataRepository.Namespace._OwnedElements" />
        <element api="M:OOAdvantech.MetaDataRepository.Namespace.BuildCaseInsensitiveNames" />
        <element api="M:OOAdvantech.MetaDataRepository.Namespace.MakeNameUnaryInNamesapce(OOAdvantech.MetaDataRepository.MetaObject)" />
        <element api="M:OOAdvantech.MetaDataRepository.Namespace.Synchronize(OOAdvantech.MetaDataRepository.MetaObject)" />
        <element api="M:OOAdvantech.MetaDataRepository.Namespace.GetExtensionMetaObjects" />
        <element api="M:OOAdvantech.MetaDataRepository.Namespace.AddOwnedElement(OOAdvantech.MetaDataRepository.MetaObject)" />
        <element api="M:OOAdvantech.MetaDataRepository.Namespace.RemoveOwnedElement(OOAdvantech.MetaDataRepository.MetaObject)" />
        <element api="M:OOAdvantech.MetaDataRepository.Namespace.ErrorCheck(System.Collections.ArrayList@)" />
        <element api="M:OOAdvantech.MetaDataRepository.Namespace.#ctor" />
        <element api="P:OOAdvantech.MetaDataRepository.Namespace.OwnedElements" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject._CaseInsensitiveName" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject._ImplementationUnit" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject.LockObject" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject.ReaderWriterLock" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject.Properties" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject._Name" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject.MetaObjectIDStream" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject._Identity" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject._ClientDependencies" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject._SupplierDependencies" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject._Namespace" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject.Visibility" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.MetaObjectChangeState" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.ShallowSynchronize(OOAdvantech.MetaDataRepository.MetaObject)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.AddDependency(System.String,OOAdvantech.MetaDataRepository.MetaObject)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.GetDynamicPropertiesAsXmlString" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.SetIdentity(OOAdvantech.MetaDataRepository.MetaObjectID)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.GetExtensionMetaObject(System.Type)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.SetNamespace(OOAdvantech.MetaDataRepository.Namespace)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.GetPropertyValue``1(System.String,System.String)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.GetPropertyValue(System.Type,System.String,System.String)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.PutPropertyValue(System.String,System.String,System.Object)" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.CaseInsensitiveName" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.ImplementationUnit" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.OQLName" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.Name" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.FullName" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.OQLFullName" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.Identity" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.ClientDependencies" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.SupplierDependencies" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.Namespace" />
        <element api="E:OOAdvantech.MetaDataRepository.MetaObject.Changed" />
        <element api="M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="cloneIdentity">
              <type api="T:System.Boolean" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.MarshalByRefObject" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.MarshalByRefObject" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.MarshalByRefObject.GetLifetimeService">
          <apidata name="GetLifetimeService" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.MarshalByRefObject" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Security.Permissions.SecurityPermissionAttribute" ref="true" />
              <argument>
                <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
                <enumValue>
                  <field name="LinkDemand" />
                </enumValue>
              </argument>
              <assignment name="Flags">
                <type api="T:System.Security.Permissions.SecurityPermissionFlag" ref="false" />
                <enumValue>
                  <field name="Infrastructure" />
                </enumValue>
              </assignment>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.MarshalByRefObject.InitializeLifetimeService">
          <apidata name="InitializeLifetimeService" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.MarshalByRefObject" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Security.Permissions.SecurityPermissionAttribute" ref="true" />
              <argument>
                <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
                <enumValue>
                  <field name="LinkDemand" />
                </enumValue>
              </argument>
              <assignment name="Flags">
                <type api="T:System.Security.Permissions.SecurityPermissionFlag" ref="false" />
                <enumValue>
                  <field name="Infrastructure" />
                </enumValue>
              </assignment>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.MarshalByRefObject.CreateObjRef(System.Type)">
          <apidata name="CreateObjRef" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="requestedType">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Runtime.Remoting.ObjRef" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.MarshalByRefObject" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Security.Permissions.SecurityPermissionAttribute" ref="true" />
              <argument>
                <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
                <enumValue>
                  <field name="LinkDemand" />
                </enumValue>
              </argument>
              <assignment name="Flags">
                <type api="T:System.Security.Permissions.SecurityPermissionFlag" ref="false" />
                <enumValue>
                  <field name="Infrastructure" />
                </enumValue>
              </assignment>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.BackwardCompatibilityID" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>{1BE03660-E41F-4512-A7C8-935810AD28E2}</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.Persistent" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.Namespace.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Namespace" ref="true" />
      </containers>
    </api>
    <api id="F:OOAdvantech.MetaDataRepository.Namespace._OwnedElements">
      <apidata name="_OwnedElements" group="member" subgroup="field" />
      <memberdata visibility="family" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:OOAdvantech.Collections.Generic.Set`1" ref="true">
          <specialization>
            <type api="T:OOAdvantech.MetaDataRepository.MetaObject" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Namespace" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.Namespace.AddOwnedElement(OOAdvantech.MetaDataRepository.MetaObject)">
      <apidata name="AddOwnedElement" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="ownedElement">
          <type api="T:OOAdvantech.MetaDataRepository.MetaObject" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Namespace" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.Namespace.BuildCaseInsensitiveNames">
      <apidata name="BuildCaseInsensitiveNames" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Namespace" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.Namespace.ErrorCheck(System.Collections.ArrayList@)">
      <apidata name="ErrorCheck" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:OOAdvantech.MetaDataRepository.MetaObject.ErrorCheck(System.Collections.ArrayList@)">
          <type api="T:OOAdvantech.MetaDataRepository.MetaObject" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="errors">
          <referenceTo>
            <type api="T:System.Collections.ArrayList" ref="true" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Namespace" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.Namespace.GetExtensionMetaObjects">
      <apidata name="GetExtensionMetaObjects" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:OOAdvantech.MetaDataRepository.MetaObject.GetExtensionMetaObjects">
          <type api="T:OOAdvantech.MetaDataRepository.MetaObject" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Collections.ArrayList" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Namespace" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.Namespace.MakeNameUnaryInNamesapce(OOAdvantech.MetaDataRepository.MetaObject)">
      <apidata name="MakeNameUnaryInNamesapce" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="metaObject">
          <type api="T:OOAdvantech.MetaDataRepository.MetaObject" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Namespace" ref="true" />
      </containers>
    </api>
    <api id="P:OOAdvantech.MetaDataRepository.Namespace.OwnedElements">
      <apidata name="OwnedElements" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_OwnedElements" />
      <returns>
        <type api="T:OOAdvantech.Collections.Generic.Set`1" ref="true">
          <specialization>
            <type api="T:OOAdvantech.MetaDataRepository.MetaObject" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Namespace" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.RoleAMultiplicityRangeAttribute" ref="true" />
          <argument>
            <type api="T:System.UInt64" ref="false" />
            <value>0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.PersistentMember" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>_OwnedElements</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.AssociationAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>NamespaceMember</value>
          </argument>
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:OOAdvantech.MetaDataRepository.MetaObject" ref="true" />
            </typeValue>
          </argument>
          <argument>
            <type api="T:OOAdvantech.MetaDataRepository.Roles" ref="false" />
            <enumValue>
              <field name="RoleA" />
            </enumValue>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>{A70335FA-743A-40DF-B6CB-FF0F4481484C}</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.AssociationEndBehavior" ref="true" />
          <argument>
            <type api="T:OOAdvantech.MetaDataRepository.PersistencyFlag" ref="false" />
            <enumValue>
              <field name="Default" />
              <field name="OnConstruction" />
              <field name="ReferentialIntegrity" />
              <field name="CascadeDelete" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.Namespace.RemoveOwnedElement(OOAdvantech.MetaDataRepository.MetaObject)">
      <apidata name="RemoveOwnedElement" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="ownedElement">
          <type api="T:OOAdvantech.MetaDataRepository.MetaObject" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Namespace" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.Namespace.Synchronize(OOAdvantech.MetaDataRepository.MetaObject)">
      <apidata name="Synchronize" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:OOAdvantech.MetaDataRepository.MetaObject.Synchronize(OOAdvantech.MetaDataRepository.MetaObject)">
          <type api="T:OOAdvantech.MetaDataRepository.MetaObject" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="originMetaObject">
          <type api="T:OOAdvantech.MetaDataRepository.MetaObject" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Namespace" ref="true" />
      </containers>
    </api>
    <api id="T:OOAdvantech.MetaDataRepository.ObjectActivationCall">
      <apidata name="ObjectActivationCall" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:OOAdvantech.MetaDataRepository.ObjectActivationCall.#ctor" />
        <element api="M:System.Attribute.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.Equals(System.Object)">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.GetHashCode">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.Match(System.Object)">
          <apidata name="Match" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.IsDefaultAttribute">
          <apidata name="IsDefaultAttribute" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)">
          <apidata name="GetTypeInfoCount" group="member" subgroup="method" />
          <memberdata visibility="private" />
          <proceduredata virtual="true" final="true" eii="true" />
          <parameters>
            <parameter name="pcTInfo" out="true">
              <referenceTo>
                <type api="T:System.UInt32" ref="false" />
              </referenceTo>
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Runtime.InteropServices._Attribute.GetTypeInfoCount(System.UInt32@)">
              <type api="T:System.Runtime.InteropServices._Attribute" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)">
          <apidata name="GetTypeInfo" group="member" subgroup="method" />
          <memberdata visibility="private" />
          <proceduredata virtual="true" final="true" eii="true" />
          <parameters>
            <parameter name="iTInfo">
              <type api="T:System.UInt32" ref="false" />
            </parameter>
            <parameter name="lcid">
              <type api="T:System.UInt32" ref="false" />
            </parameter>
            <parameter name="ppTInfo">
              <type api="T:System.IntPtr" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Runtime.InteropServices._Attribute.GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)">
              <type api="T:System.Runtime.InteropServices._Attribute" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)">
          <apidata name="GetIDsOfNames" group="member" subgroup="method" />
          <memberdata visibility="private" />
          <proceduredata virtual="true" final="true" eii="true" />
          <parameters>
            <parameter name="riid" in="true">
              <referenceTo>
                <type api="T:System.Guid" ref="false" />
              </referenceTo>
            </parameter>
            <parameter name="rgszNames">
              <type api="T:System.IntPtr" ref="false" />
            </parameter>
            <parameter name="cNames">
              <type api="T:System.UInt32" ref="false" />
            </parameter>
            <parameter name="lcid">
              <type api="T:System.UInt32" ref="false" />
            </parameter>
            <parameter name="rgDispId">
              <type api="T:System.IntPtr" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Runtime.InteropServices._Attribute.GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)">
              <type api="T:System.Runtime.InteropServices._Attribute" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)">
          <apidata name="Invoke" group="member" subgroup="method" />
          <memberdata visibility="private" />
          <proceduredata virtual="true" final="true" eii="true" />
          <parameters>
            <parameter name="dispIdMember">
              <type api="T:System.UInt32" ref="false" />
            </parameter>
            <parameter name="riid" in="true">
              <referenceTo>
                <type api="T:System.Guid" ref="false" />
              </referenceTo>
            </parameter>
            <parameter name="lcid">
              <type api="T:System.UInt32" ref="false" />
            </parameter>
            <parameter name="wFlags">
              <type api="T:System.Int16" ref="false" />
            </parameter>
            <parameter name="pDispParams">
              <type api="T:System.IntPtr" ref="false" />
            </parameter>
            <parameter name="pVarResult">
              <type api="T:System.IntPtr" ref="false" />
            </parameter>
            <parameter name="pExcepInfo">
              <type api="T:System.IntPtr" ref="false" />
            </parameter>
            <parameter name="puArgErr">
              <type api="T:System.IntPtr" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Runtime.InteropServices._Attribute.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)">
              <type api="T:System.Runtime.InteropServices._Attribute" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="P:System.Attribute.TypeId">
          <apidata name="TypeId" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_TypeId" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Method" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.ObjectActivationCall.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.ObjectActivationCall" ref="true" />
      </containers>
    </api>
    <api id="T:OOAdvantech.MetaDataRepository.ObjectIdentityType">
      <apidata name="ObjectIdentityType" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="true" layout="sequential" format="ansi" />
      <elements>
        <element api="F:OOAdvantech.MetaDataRepository.ObjectIdentityType.Parts" />
        <element api="M:OOAdvantech.MetaDataRepository.ObjectIdentityType.#ctor(System.Collections.Generic.List{OOAdvantech.MetaDataRepository.IIdentityPart})" />
        <element api="M:OOAdvantech.MetaDataRepository.ObjectIdentityType.GetHashCode" />
        <element api="M:OOAdvantech.MetaDataRepository.ObjectIdentityType.op_Equality(OOAdvantech.MetaDataRepository.ObjectIdentityType,OOAdvantech.MetaDataRepository.ObjectIdentityType)" />
        <element api="M:OOAdvantech.MetaDataRepository.ObjectIdentityType.op_Inequality(OOAdvantech.MetaDataRepository.ObjectIdentityType,OOAdvantech.MetaDataRepository.ObjectIdentityType)" />
        <element api="M:OOAdvantech.MetaDataRepository.ObjectIdentityType.Equals(System.Object)" />
        <element api="M:System.ValueType.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.ToString">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.ValueType" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.ObjectIdentityType.#ctor(System.Collections.Generic.List{OOAdvantech.MetaDataRepository.IIdentityPart})">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="parts">
          <type api="T:System.Collections.Generic.List`1" ref="true">
            <specialization>
              <type api="T:OOAdvantech.MetaDataRepository.IIdentityPart" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.ObjectIdentityType" ref="false" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.ObjectIdentityType.Equals(System.Object)">
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ValueType.Equals(System.Object)">
          <type api="T:System.ValueType" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="obj">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.ObjectIdentityType" ref="false" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.ObjectIdentityType.GetHashCode">
      <apidata name="GetHashCode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ValueType.GetHashCode">
          <type api="T:System.ValueType" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.ObjectIdentityType" ref="false" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.ObjectIdentityType.op_Equality(OOAdvantech.MetaDataRepository.ObjectIdentityType,OOAdvantech.MetaDataRepository.ObjectIdentityType)">
      <apidata name="Equality" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="left">
          <type api="T:OOAdvantech.MetaDataRepository.ObjectIdentityType" ref="false" />
        </parameter>
        <parameter name="right">
          <type api="T:OOAdvantech.MetaDataRepository.ObjectIdentityType" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.ObjectIdentityType" ref="false" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.ObjectIdentityType.op_Inequality(OOAdvantech.MetaDataRepository.ObjectIdentityType,OOAdvantech.MetaDataRepository.ObjectIdentityType)">
      <apidata name="Inequality" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="left">
          <type api="T:OOAdvantech.MetaDataRepository.ObjectIdentityType" ref="false" />
        </parameter>
        <parameter name="right">
          <type api="T:OOAdvantech.MetaDataRepository.ObjectIdentityType" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.ObjectIdentityType" ref="false" />
      </containers>
    </api>
    <api id="F:OOAdvantech.MetaDataRepository.ObjectIdentityType.Parts">
      <apidata name="Parts" group="member" subgroup="field" />
      <memberdata visibility="public" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Collections.Generic.List`1" ref="true">
          <specialization>
            <type api="T:OOAdvantech.MetaDataRepository.IIdentityPart" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.ObjectIdentityType" ref="false" />
      </containers>
    </api>
    <api id="T:OOAdvantech.MetaDataRepository.Operation">
      <apidata name="Operation" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:OOAdvantech.MetaDataRepository.BehavioralFeature" ref="true" />
          <type api="T:OOAdvantech.MetaDataRepository.Feature" ref="true" />
          <type api="T:OOAdvantech.MetaDataRepository.MetaObject" ref="true" />
          <type api="T:System.MarshalByRefObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="F:OOAdvantech.MetaDataRepository.Operation._ParameterizedReturnType" />
        <element api="F:OOAdvantech.MetaDataRepository.Operation.Implementetions" />
        <element api="F:OOAdvantech.MetaDataRepository.Operation._ReturnType" />
        <element api="F:OOAdvantech.MetaDataRepository.Operation._Parameters" />
        <element api="M:OOAdvantech.MetaDataRepository.Operation.Synchronize(OOAdvantech.MetaDataRepository.MetaObject)" />
        <element api="M:OOAdvantech.MetaDataRepository.Operation.GetParameterAt(System.Int32)" />
        <element api="M:OOAdvantech.MetaDataRepository.Operation.#ctor" />
        <element api="M:OOAdvantech.MetaDataRepository.Operation.#ctor(System.String,OOAdvantech.MetaDataRepository.Classifier)" />
        <element api="M:OOAdvantech.MetaDataRepository.Operation.IsGeneric(OOAdvantech.MetaDataRepository.Operation)" />
        <element api="M:OOAdvantech.MetaDataRepository.Operation.GetExtensionMetaObjects" />
        <element api="M:OOAdvantech.MetaDataRepository.Operation.DeleteParameter(OOAdvantech.MetaDataRepository.Parameter)" />
        <element api="M:OOAdvantech.MetaDataRepository.Operation.SetParameter(System.String,OOAdvantech.MetaDataRepository.Classifier,System.String,System.Int32)" />
        <element api="M:OOAdvantech.MetaDataRepository.Operation.AddParameter(System.String,OOAdvantech.MetaDataRepository.Classifier,System.String)" />
        <element api="M:OOAdvantech.MetaDataRepository.Operation.AddParameter(System.String,OOAdvantech.MetaDataRepository.Classifier,System.String,OOAdvantech.MetaDataRepository.Parameter)" />
        <element api="M:OOAdvantech.MetaDataRepository.Operation.AddOperationImplementation(OOAdvantech.MetaDataRepository.Method)" />
        <element api="M:OOAdvantech.MetaDataRepository.Operation.RemoveOperationImplementation(OOAdvantech.MetaDataRepository.Method)" />
        <element api="P:OOAdvantech.MetaDataRepository.Operation.ParameterizedReturnType" />
        <element api="P:OOAdvantech.MetaDataRepository.Operation.ReturnType" />
        <element api="P:OOAdvantech.MetaDataRepository.Operation.Parameters" />
        <element api="F:OOAdvantech.MetaDataRepository.Feature._IsStatic" />
        <element api="F:OOAdvantech.MetaDataRepository.Feature._Owner" />
        <element api="P:OOAdvantech.MetaDataRepository.Feature.IsStatic" />
        <element api="P:OOAdvantech.MetaDataRepository.Feature.Owner" />
        <element api="P:OOAdvantech.MetaDataRepository.Feature.ImplementationUnit" />
        <element api="P:OOAdvantech.MetaDataRepository.Feature.Namespace" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject._CaseInsensitiveName" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject._ImplementationUnit" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject.LockObject" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject.ReaderWriterLock" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject.Properties" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject._Name" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject.MetaObjectIDStream" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject._Identity" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject._ClientDependencies" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject._SupplierDependencies" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject._Namespace" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject.Visibility" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.MetaObjectChangeState" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.ShallowSynchronize(OOAdvantech.MetaDataRepository.MetaObject)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.AddDependency(System.String,OOAdvantech.MetaDataRepository.MetaObject)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.ErrorCheck(System.Collections.ArrayList@)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.GetDynamicPropertiesAsXmlString" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.SetIdentity(OOAdvantech.MetaDataRepository.MetaObjectID)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.GetExtensionMetaObject(System.Type)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.SetNamespace(OOAdvantech.MetaDataRepository.Namespace)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.GetPropertyValue``1(System.String,System.String)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.GetPropertyValue(System.Type,System.String,System.String)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.PutPropertyValue(System.String,System.String,System.Object)" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.CaseInsensitiveName" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.OQLName" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.Name" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.FullName" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.OQLFullName" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.Identity" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.ClientDependencies" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.SupplierDependencies" />
        <element api="E:OOAdvantech.MetaDataRepository.MetaObject.Changed" />
        <element api="M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="cloneIdentity">
              <type api="T:System.Boolean" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.MarshalByRefObject" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.MarshalByRefObject" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.MarshalByRefObject.GetLifetimeService">
          <apidata name="GetLifetimeService" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.MarshalByRefObject" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Security.Permissions.SecurityPermissionAttribute" ref="true" />
              <argument>
                <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
                <enumValue>
                  <field name="LinkDemand" />
                </enumValue>
              </argument>
              <assignment name="Flags">
                <type api="T:System.Security.Permissions.SecurityPermissionFlag" ref="false" />
                <enumValue>
                  <field name="Infrastructure" />
                </enumValue>
              </assignment>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.MarshalByRefObject.InitializeLifetimeService">
          <apidata name="InitializeLifetimeService" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.MarshalByRefObject" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Security.Permissions.SecurityPermissionAttribute" ref="true" />
              <argument>
                <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
                <enumValue>
                  <field name="LinkDemand" />
                </enumValue>
              </argument>
              <assignment name="Flags">
                <type api="T:System.Security.Permissions.SecurityPermissionFlag" ref="false" />
                <enumValue>
                  <field name="Infrastructure" />
                </enumValue>
              </assignment>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.MarshalByRefObject.CreateObjRef(System.Type)">
          <apidata name="CreateObjRef" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="requestedType">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Runtime.Remoting.ObjRef" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.MarshalByRefObject" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Security.Permissions.SecurityPermissionAttribute" ref="true" />
              <argument>
                <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
                <enumValue>
                  <field name="LinkDemand" />
                </enumValue>
              </argument>
              <assignment name="Flags">
                <type api="T:System.Security.Permissions.SecurityPermissionFlag" ref="false" />
                <enumValue>
                  <field name="Infrastructure" />
                </enumValue>
              </assignment>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.BackwardCompatibilityID" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>{8C7BC8EA-FFC0-4391-88A6-241941D18354}</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.Persistent" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.Operation.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Operation" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.Operation.#ctor(System.String,OOAdvantech.MetaDataRepository.Classifier)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="returnType">
          <type api="T:OOAdvantech.MetaDataRepository.Classifier" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Operation" ref="true" />
      </containers>
    </api>
    <api id="F:OOAdvantech.MetaDataRepository.Operation._ParameterizedReturnType">
      <apidata name="_ParameterizedReturnType" group="member" subgroup="field" />
      <memberdata visibility="family" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:OOAdvantech.MetaDataRepository.TemplateParameter" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Operation" ref="true" />
      </containers>
    </api>
    <api id="F:OOAdvantech.MetaDataRepository.Operation._Parameters">
      <apidata name="_Parameters" group="member" subgroup="field" />
      <memberdata visibility="family" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:OOAdvantech.Collections.Generic.Set`1" ref="true">
          <specialization>
            <type api="T:OOAdvantech.MetaDataRepository.Parameter" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Operation" ref="true" />
      </containers>
    </api>
    <api id="F:OOAdvantech.MetaDataRepository.Operation._ReturnType">
      <apidata name="_ReturnType" group="member" subgroup="field" />
      <memberdata visibility="family" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:OOAdvantech.MetaDataRepository.Classifier" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Operation" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.Operation.AddOperationImplementation(OOAdvantech.MetaDataRepository.Method)">
      <apidata name="AddOperationImplementation" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="method">
          <type api="T:OOAdvantech.MetaDataRepository.Method" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Operation" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.Operation.AddParameter(System.String,OOAdvantech.MetaDataRepository.Classifier,System.String)">
      <apidata name="AddParameter" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="ParameterName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="ParameterType">
          <type api="T:OOAdvantech.MetaDataRepository.Classifier" ref="true" />
        </parameter>
        <parameter name="InitValue">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:OOAdvantech.MetaDataRepository.Parameter" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Operation" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.Operation.AddParameter(System.String,OOAdvantech.MetaDataRepository.Classifier,System.String,OOAdvantech.MetaDataRepository.Parameter)">
      <apidata name="AddParameter" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="ParameterName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="ParameterType">
          <type api="T:OOAdvantech.MetaDataRepository.Classifier" ref="true" />
        </parameter>
        <parameter name="InitValue">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="afterThatParameter">
          <type api="T:OOAdvantech.MetaDataRepository.Parameter" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:OOAdvantech.MetaDataRepository.Parameter" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Operation" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.Operation.DeleteParameter(OOAdvantech.MetaDataRepository.Parameter)">
      <apidata name="DeleteParameter" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="theParameter">
          <type api="T:OOAdvantech.MetaDataRepository.Parameter" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Operation" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.Operation.GetExtensionMetaObjects">
      <apidata name="GetExtensionMetaObjects" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:OOAdvantech.MetaDataRepository.MetaObject.GetExtensionMetaObjects">
          <type api="T:OOAdvantech.MetaDataRepository.MetaObject" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Collections.ArrayList" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Operation" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.Operation.GetParameterAt(System.Int32)">
      <apidata name="GetParameterAt" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="Position">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:OOAdvantech.MetaDataRepository.Parameter" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Operation" ref="true" />
      </containers>
    </api>
    <api id="F:OOAdvantech.MetaDataRepository.Operation.Implementetions">
      <apidata name="Implementetions" group="member" subgroup="field" />
      <memberdata visibility="public" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:OOAdvantech.Collections.Generic.Set`1" ref="true">
          <specialization>
            <type api="T:OOAdvantech.MetaDataRepository.Method" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Operation" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.RoleBMultiplicityRangeAttribute" ref="true" />
          <argument>
            <type api="T:System.UInt64" ref="false" />
            <value>0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.AssociationAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>OperationImplementation</value>
          </argument>
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:OOAdvantech.MetaDataRepository.Method" ref="true" />
            </typeValue>
          </argument>
          <argument>
            <type api="T:OOAdvantech.MetaDataRepository.Roles" ref="false" />
            <enumValue>
              <field name="RoleB" />
            </enumValue>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>{CAB0AA5F-C40F-436B-8965-652AF4D98C87}</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.Operation.IsGeneric(OOAdvantech.MetaDataRepository.Operation)">
      <apidata name="IsGeneric" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="operation">
          <type api="T:OOAdvantech.MetaDataRepository.Operation" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Operation" ref="true" />
      </containers>
    </api>
    <api id="P:OOAdvantech.MetaDataRepository.Operation.ParameterizedReturnType">
      <apidata name="ParameterizedReturnType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_ParameterizedReturnType" />
      <setter name="set_ParameterizedReturnType" />
      <returns>
        <type api="T:OOAdvantech.MetaDataRepository.TemplateParameter" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Operation" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.RoleBMultiplicityRangeAttribute" ref="true" />
          <argument>
            <type api="T:System.UInt64" ref="false" />
            <value>0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.RoleAMultiplicityRangeAttribute" ref="true" />
          <argument>
            <type api="T:System.UInt64" ref="false" />
            <value>0</value>
          </argument>
          <argument>
            <type api="T:System.UInt64" ref="false" />
            <value>1</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.AssociationAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>ParameterizedReturnType</value>
          </argument>
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:OOAdvantech.MetaDataRepository.TemplateParameter" ref="true" />
            </typeValue>
          </argument>
          <argument>
            <type api="T:OOAdvantech.MetaDataRepository.Roles" ref="false" />
            <enumValue>
              <field name="RoleA" />
            </enumValue>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>{3B18135D-3C5F-425A-9E2E-A66C8C2C233B}</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:OOAdvantech.MetaDataRepository.Operation.Parameters">
      <apidata name="Parameters" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_Parameters" />
      <returns>
        <type api="T:OOAdvantech.Collections.Generic.Set`1" ref="true">
          <specialization>
            <type api="T:OOAdvantech.MetaDataRepository.Parameter" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Operation" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.AssociationEndBehavior" ref="true" />
          <argument>
            <type api="T:OOAdvantech.MetaDataRepository.PersistencyFlag" ref="false" />
            <enumValue>
              <field name="Default" />
              <field name="OnConstruction" />
              <field name="ReferentialIntegrity" />
              <field name="CascadeDelete" />
            </enumValue>
          </argument>
        </attribute>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.RoleBMultiplicityRangeAttribute" ref="true" />
          <argument>
            <type api="T:System.UInt64" ref="false" />
            <value>0</value>
          </argument>
          <argument>
            <type api="T:System.UInt64" ref="false" />
            <value>1</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.PersistentMember" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>_Parameters</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.AssociationAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>OperationParameter</value>
          </argument>
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:OOAdvantech.MetaDataRepository.Parameter" ref="true" />
            </typeValue>
          </argument>
          <argument>
            <type api="T:OOAdvantech.MetaDataRepository.Roles" ref="false" />
            <enumValue>
              <field name="RoleA" />
            </enumValue>
          </argument>
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>{10D160FA-46E4-4EA3-8A81-8C2EC6F128EF}</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.RoleAMultiplicityRangeAttribute" ref="true" />
          <argument>
            <type api="T:System.UInt64" ref="false" />
            <value>0</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.Operation.RemoveOperationImplementation(OOAdvantech.MetaDataRepository.Method)">
      <apidata name="RemoveOperationImplementation" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="method">
          <type api="T:OOAdvantech.MetaDataRepository.Method" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Operation" ref="true" />
      </containers>
    </api>
    <api id="P:OOAdvantech.MetaDataRepository.Operation.ReturnType">
      <apidata name="ReturnType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_ReturnType" />
      <setter name="set_ReturnType" />
      <returns>
        <type api="T:OOAdvantech.MetaDataRepository.Classifier" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Operation" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.RoleAMultiplicityRangeAttribute" ref="true" />
          <argument>
            <type api="T:System.UInt64" ref="false" />
            <value>0</value>
          </argument>
          <argument>
            <type api="T:System.UInt64" ref="false" />
            <value>1</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.RoleBMultiplicityRangeAttribute" ref="true" />
          <argument>
            <type api="T:System.UInt64" ref="false" />
            <value>0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.AssociationAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>ReturnType</value>
          </argument>
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:OOAdvantech.MetaDataRepository.Classifier" ref="true" />
            </typeValue>
          </argument>
          <argument>
            <type api="T:OOAdvantech.MetaDataRepository.Roles" ref="false" />
            <enumValue>
              <field name="RoleA" />
            </enumValue>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>{6174532F-191A-437A-8EDC-B73747C614B2}</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.PersistentMember" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>_ReturnType</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.AssociationEndBehavior" ref="true" />
          <argument>
            <type api="T:OOAdvantech.MetaDataRepository.PersistencyFlag" ref="false" />
            <enumValue>
              <field name="OnConstruction" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.Operation.SetParameter(System.String,OOAdvantech.MetaDataRepository.Classifier,System.String,System.Int32)">
      <apidata name="SetParameter" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="parameterName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="parameterType">
          <type api="T:OOAdvantech.MetaDataRepository.Classifier" ref="true" />
        </parameter>
        <parameter name="initValue">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="position">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:OOAdvantech.MetaDataRepository.Parameter" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Operation" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.Operation.Synchronize(OOAdvantech.MetaDataRepository.MetaObject)">
      <apidata name="Synchronize" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:OOAdvantech.MetaDataRepository.MetaObject.Synchronize(OOAdvantech.MetaDataRepository.MetaObject)">
          <type api="T:OOAdvantech.MetaDataRepository.MetaObject" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="originMetaObject">
          <type api="T:OOAdvantech.MetaDataRepository.MetaObject" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Operation" ref="true" />
      </containers>
    </api>
    <api id="T:OOAdvantech.MetaDataRepository.Package">
      <apidata name="Package" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:OOAdvantech.MetaDataRepository.Namespace" ref="true" />
          <type api="T:OOAdvantech.MetaDataRepository.MetaObject" ref="true" />
          <type api="T:System.MarshalByRefObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:OOAdvantech.MetaDataRepository.Model" ref="true" />
        </descendents>
      </family>
      <elements>
        <element api="M:OOAdvantech.MetaDataRepository.Package.Synchronize(OOAdvantech.MetaDataRepository.MetaObject)" />
        <element api="M:OOAdvantech.MetaDataRepository.Package.#ctor" />
        <element api="F:OOAdvantech.MetaDataRepository.Namespace._OwnedElements" />
        <element api="M:OOAdvantech.MetaDataRepository.Namespace.BuildCaseInsensitiveNames" />
        <element api="M:OOAdvantech.MetaDataRepository.Namespace.MakeNameUnaryInNamesapce(OOAdvantech.MetaDataRepository.MetaObject)" />
        <element api="M:OOAdvantech.MetaDataRepository.Namespace.GetExtensionMetaObjects" />
        <element api="M:OOAdvantech.MetaDataRepository.Namespace.AddOwnedElement(OOAdvantech.MetaDataRepository.MetaObject)" />
        <element api="M:OOAdvantech.MetaDataRepository.Namespace.RemoveOwnedElement(OOAdvantech.MetaDataRepository.MetaObject)" />
        <element api="M:OOAdvantech.MetaDataRepository.Namespace.ErrorCheck(System.Collections.ArrayList@)" />
        <element api="P:OOAdvantech.MetaDataRepository.Namespace.OwnedElements" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject._CaseInsensitiveName" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject._ImplementationUnit" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject.LockObject" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject.ReaderWriterLock" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject.Properties" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject._Name" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject.MetaObjectIDStream" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject._Identity" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject._ClientDependencies" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject._SupplierDependencies" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject._Namespace" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject.Visibility" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.MetaObjectChangeState" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.ShallowSynchronize(OOAdvantech.MetaDataRepository.MetaObject)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.AddDependency(System.String,OOAdvantech.MetaDataRepository.MetaObject)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.GetDynamicPropertiesAsXmlString" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.SetIdentity(OOAdvantech.MetaDataRepository.MetaObjectID)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.GetExtensionMetaObject(System.Type)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.SetNamespace(OOAdvantech.MetaDataRepository.Namespace)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.GetPropertyValue``1(System.String,System.String)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.GetPropertyValue(System.Type,System.String,System.String)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.PutPropertyValue(System.String,System.String,System.Object)" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.CaseInsensitiveName" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.ImplementationUnit" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.OQLName" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.Name" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.FullName" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.OQLFullName" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.Identity" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.ClientDependencies" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.SupplierDependencies" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.Namespace" />
        <element api="E:OOAdvantech.MetaDataRepository.MetaObject.Changed" />
        <element api="M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="cloneIdentity">
              <type api="T:System.Boolean" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.MarshalByRefObject" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.MarshalByRefObject" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.MarshalByRefObject.GetLifetimeService">
          <apidata name="GetLifetimeService" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.MarshalByRefObject" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Security.Permissions.SecurityPermissionAttribute" ref="true" />
              <argument>
                <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
                <enumValue>
                  <field name="LinkDemand" />
                </enumValue>
              </argument>
              <assignment name="Flags">
                <type api="T:System.Security.Permissions.SecurityPermissionFlag" ref="false" />
                <enumValue>
                  <field name="Infrastructure" />
                </enumValue>
              </assignment>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.MarshalByRefObject.InitializeLifetimeService">
          <apidata name="InitializeLifetimeService" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.MarshalByRefObject" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Security.Permissions.SecurityPermissionAttribute" ref="true" />
              <argument>
                <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
                <enumValue>
                  <field name="LinkDemand" />
                </enumValue>
              </argument>
              <assignment name="Flags">
                <type api="T:System.Security.Permissions.SecurityPermissionFlag" ref="false" />
                <enumValue>
                  <field name="Infrastructure" />
                </enumValue>
              </assignment>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.MarshalByRefObject.CreateObjRef(System.Type)">
          <apidata name="CreateObjRef" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="requestedType">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Runtime.Remoting.ObjRef" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.MarshalByRefObject" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Security.Permissions.SecurityPermissionAttribute" ref="true" />
              <argument>
                <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
                <enumValue>
                  <field name="LinkDemand" />
                </enumValue>
              </argument>
              <assignment name="Flags">
                <type api="T:System.Security.Permissions.SecurityPermissionFlag" ref="false" />
                <enumValue>
                  <field name="Infrastructure" />
                </enumValue>
              </assignment>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.BackwardCompatibilityID" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>{BA6D6CDC-81FF-406B-9AB7-7C13CE176E20}</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.Persistent" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.Package.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Package" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.Package.Synchronize(OOAdvantech.MetaDataRepository.MetaObject)">
      <apidata name="Synchronize" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:OOAdvantech.MetaDataRepository.Namespace.Synchronize(OOAdvantech.MetaDataRepository.MetaObject)">
          <type api="T:OOAdvantech.MetaDataRepository.Namespace" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="OriginMetaObject">
          <type api="T:OOAdvantech.MetaDataRepository.MetaObject" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Package" ref="true" />
      </containers>
    </api>
    <api id="T:OOAdvantech.MetaDataRepository.Parameter">
      <apidata name="Parameter" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:OOAdvantech.MetaDataRepository.MetaObject" ref="true" />
          <type api="T:System.MarshalByRefObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="F:OOAdvantech.MetaDataRepository.Parameter._ParameterizedType" />
        <element api="F:OOAdvantech.MetaDataRepository.Parameter._Type" />
        <element api="M:OOAdvantech.MetaDataRepository.Parameter.Synchronize(OOAdvantech.MetaDataRepository.MetaObject)" />
        <element api="M:OOAdvantech.MetaDataRepository.Parameter.#ctor" />
        <element api="M:OOAdvantech.MetaDataRepository.Parameter.#ctor(System.String,OOAdvantech.MetaDataRepository.Classifier)" />
        <element api="M:OOAdvantech.MetaDataRepository.Parameter.#ctor(System.String,OOAdvantech.MetaDataRepository.TemplateParameter)" />
        <element api="M:OOAdvantech.MetaDataRepository.Parameter.GetExtensionMetaObjects" />
        <element api="P:OOAdvantech.MetaDataRepository.Parameter.Identity" />
        <element api="P:OOAdvantech.MetaDataRepository.Parameter.ParameterizedType" />
        <element api="P:OOAdvantech.MetaDataRepository.Parameter.Direction" />
        <element api="P:OOAdvantech.MetaDataRepository.Parameter.Type" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject._CaseInsensitiveName" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject._ImplementationUnit" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject.LockObject" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject.ReaderWriterLock" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject.Properties" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject._Name" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject.MetaObjectIDStream" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject._Identity" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject._ClientDependencies" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject._SupplierDependencies" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject._Namespace" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject.Visibility" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.MetaObjectChangeState" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.ShallowSynchronize(OOAdvantech.MetaDataRepository.MetaObject)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.AddDependency(System.String,OOAdvantech.MetaDataRepository.MetaObject)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.ErrorCheck(System.Collections.ArrayList@)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.GetDynamicPropertiesAsXmlString" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.SetIdentity(OOAdvantech.MetaDataRepository.MetaObjectID)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.GetExtensionMetaObject(System.Type)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.SetNamespace(OOAdvantech.MetaDataRepository.Namespace)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.GetPropertyValue``1(System.String,System.String)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.GetPropertyValue(System.Type,System.String,System.String)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.PutPropertyValue(System.String,System.String,System.Object)" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.CaseInsensitiveName" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.ImplementationUnit" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.OQLName" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.Name" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.FullName" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.OQLFullName" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.ClientDependencies" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.SupplierDependencies" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.Namespace" />
        <element api="E:OOAdvantech.MetaDataRepository.MetaObject.Changed" />
        <element api="M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="cloneIdentity">
              <type api="T:System.Boolean" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.MarshalByRefObject" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.MarshalByRefObject" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.MarshalByRefObject.GetLifetimeService">
          <apidata name="GetLifetimeService" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.MarshalByRefObject" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Security.Permissions.SecurityPermissionAttribute" ref="true" />
              <argument>
                <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
                <enumValue>
                  <field name="LinkDemand" />
                </enumValue>
              </argument>
              <assignment name="Flags">
                <type api="T:System.Security.Permissions.SecurityPermissionFlag" ref="false" />
                <enumValue>
                  <field name="Infrastructure" />
                </enumValue>
              </assignment>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.MarshalByRefObject.InitializeLifetimeService">
          <apidata name="InitializeLifetimeService" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.MarshalByRefObject" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Security.Permissions.SecurityPermissionAttribute" ref="true" />
              <argument>
                <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
                <enumValue>
                  <field name="LinkDemand" />
                </enumValue>
              </argument>
              <assignment name="Flags">
                <type api="T:System.Security.Permissions.SecurityPermissionFlag" ref="false" />
                <enumValue>
                  <field name="Infrastructure" />
                </enumValue>
              </assignment>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.MarshalByRefObject.CreateObjRef(System.Type)">
          <apidata name="CreateObjRef" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="requestedType">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Runtime.Remoting.ObjRef" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.MarshalByRefObject" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Security.Permissions.SecurityPermissionAttribute" ref="true" />
              <argument>
                <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
                <enumValue>
                  <field name="LinkDemand" />
                </enumValue>
              </argument>
              <assignment name="Flags">
                <type api="T:System.Security.Permissions.SecurityPermissionFlag" ref="false" />
                <enumValue>
                  <field name="Infrastructure" />
                </enumValue>
              </assignment>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.Persistent" ref="true" />
        </attribute>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.BackwardCompatibilityID" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>{CC6D7440-2F80-49B2-A3C5-9190F97E691C}</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.Parameter.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Parameter" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.Parameter.#ctor(System.String,OOAdvantech.MetaDataRepository.Classifier)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="parameterType">
          <type api="T:OOAdvantech.MetaDataRepository.Classifier" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Parameter" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.Parameter.#ctor(System.String,OOAdvantech.MetaDataRepository.TemplateParameter)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="parameterType">
          <type api="T:OOAdvantech.MetaDataRepository.TemplateParameter" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Parameter" ref="true" />
      </containers>
    </api>
    <api id="F:OOAdvantech.MetaDataRepository.Parameter._ParameterizedType">
      <apidata name="_ParameterizedType" group="member" subgroup="field" />
      <memberdata visibility="family" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:OOAdvantech.MetaDataRepository.TemplateParameter" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Parameter" ref="true" />
      </containers>
    </api>
    <api id="F:OOAdvantech.MetaDataRepository.Parameter._Type">
      <apidata name="_Type" group="member" subgroup="field" />
      <memberdata visibility="family" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:OOAdvantech.MetaDataRepository.Classifier" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Parameter" ref="true" />
      </containers>
    </api>
    <api id="P:OOAdvantech.MetaDataRepository.Parameter.Direction">
      <apidata name="Direction" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Direction" />
      <setter name="set_Direction" />
      <returns>
        <type api="T:OOAdvantech.MetaDataRepository.Parameter.DirectionType" ref="false">
          <type api="T:OOAdvantech.MetaDataRepository.Parameter" ref="true" />
        </type>
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Parameter" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.PersistentMember" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>_Direction</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.BackwardCompatibilityID" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>+6</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.Parameter.GetExtensionMetaObjects">
      <apidata name="GetExtensionMetaObjects" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:OOAdvantech.MetaDataRepository.MetaObject.GetExtensionMetaObjects">
          <type api="T:OOAdvantech.MetaDataRepository.MetaObject" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Collections.ArrayList" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Parameter" ref="true" />
      </containers>
    </api>
    <api id="P:OOAdvantech.MetaDataRepository.Parameter.Identity">
      <apidata name="Identity" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:OOAdvantech.MetaDataRepository.MetaObject.Identity">
          <type api="T:OOAdvantech.MetaDataRepository.MetaObject" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_Identity" />
      <returns>
        <type api="T:OOAdvantech.MetaDataRepository.MetaObjectID" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Parameter" ref="true" />
      </containers>
    </api>
    <api id="P:OOAdvantech.MetaDataRepository.Parameter.ParameterizedType">
      <apidata name="ParameterizedType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_ParameterizedType" />
      <setter name="set_ParameterizedType" />
      <returns>
        <type api="T:OOAdvantech.MetaDataRepository.TemplateParameter" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Parameter" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.RoleAMultiplicityRangeAttribute" ref="true" />
          <argument>
            <type api="T:System.UInt64" ref="false" />
            <value>0</value>
          </argument>
          <argument>
            <type api="T:System.UInt64" ref="false" />
            <value>1</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.AssociationAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Parameter ParameterizedType</value>
          </argument>
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:OOAdvantech.MetaDataRepository.TemplateParameter" ref="true" />
            </typeValue>
          </argument>
          <argument>
            <type api="T:OOAdvantech.MetaDataRepository.Roles" ref="false" />
            <enumValue>
              <field name="RoleA" />
            </enumValue>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>{6C2942E4-259C-4282-83D0-FAE94096F134}</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.RoleBMultiplicityRangeAttribute" ref="true" />
          <argument>
            <type api="T:System.UInt64" ref="false" />
            <value>0</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.Parameter.Synchronize(OOAdvantech.MetaDataRepository.MetaObject)">
      <apidata name="Synchronize" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:OOAdvantech.MetaDataRepository.MetaObject.Synchronize(OOAdvantech.MetaDataRepository.MetaObject)">
          <type api="T:OOAdvantech.MetaDataRepository.MetaObject" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="OriginMetaObject">
          <type api="T:OOAdvantech.MetaDataRepository.MetaObject" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Parameter" ref="true" />
      </containers>
    </api>
    <api id="P:OOAdvantech.MetaDataRepository.Parameter.Type">
      <apidata name="Type" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Type" />
      <setter name="set_Type" />
      <returns>
        <type api="T:OOAdvantech.MetaDataRepository.Classifier" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Parameter" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.RoleAMultiplicityRangeAttribute" ref="true" />
          <argument>
            <type api="T:System.UInt64" ref="false" />
            <value>0</value>
          </argument>
          <argument>
            <type api="T:System.UInt64" ref="false" />
            <value>1</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.AssociationAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>ParameterType</value>
          </argument>
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:OOAdvantech.MetaDataRepository.Classifier" ref="true" />
            </typeValue>
          </argument>
          <argument>
            <type api="T:OOAdvantech.MetaDataRepository.Roles" ref="false" />
            <enumValue>
              <field name="RoleA" />
            </enumValue>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>{589C0490-F5C0-4784-982C-61740B0F5ABD}</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.PersistentMember" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>_Type</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.RoleBMultiplicityRangeAttribute" ref="true" />
          <argument>
            <type api="T:System.UInt64" ref="false" />
            <value>0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.AssociationEndBehavior" ref="true" />
          <argument>
            <type api="T:OOAdvantech.MetaDataRepository.PersistencyFlag" ref="false" />
            <enumValue>
              <field name="OnConstruction" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="T:OOAdvantech.MetaDataRepository.Parameter.DirectionType">
      <apidata name="DirectionType" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="F:OOAdvantech.MetaDataRepository.Parameter.DirectionType.In" />
        <element api="F:OOAdvantech.MetaDataRepository.Parameter.DirectionType.Out" />
        <element api="F:OOAdvantech.MetaDataRepository.Parameter.DirectionType.InOut" />
      </elements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Parameter" ref="true" />
      </containers>
    </api>
    <api id="F:OOAdvantech.MetaDataRepository.Parameter.DirectionType.In">
      <apidata name="In" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:OOAdvantech.MetaDataRepository.Parameter.DirectionType" ref="false">
          <type api="T:OOAdvantech.MetaDataRepository.Parameter" ref="true" />
        </type>
      </returns>
      <value>0</value>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Parameter.DirectionType" ref="false">
          <type api="T:OOAdvantech.MetaDataRepository.Parameter" ref="true" />
        </type>
      </containers>
    </api>
    <api id="F:OOAdvantech.MetaDataRepository.Parameter.DirectionType.InOut">
      <apidata name="InOut" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:OOAdvantech.MetaDataRepository.Parameter.DirectionType" ref="false">
          <type api="T:OOAdvantech.MetaDataRepository.Parameter" ref="true" />
        </type>
      </returns>
      <value>2</value>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Parameter.DirectionType" ref="false">
          <type api="T:OOAdvantech.MetaDataRepository.Parameter" ref="true" />
        </type>
      </containers>
    </api>
    <api id="F:OOAdvantech.MetaDataRepository.Parameter.DirectionType.Out">
      <apidata name="Out" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:OOAdvantech.MetaDataRepository.Parameter.DirectionType" ref="false">
          <type api="T:OOAdvantech.MetaDataRepository.Parameter" ref="true" />
        </type>
      </returns>
      <value>1</value>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Parameter.DirectionType" ref="false">
          <type api="T:OOAdvantech.MetaDataRepository.Parameter" ref="true" />
        </type>
      </containers>
    </api>
    <api id="T:OOAdvantech.MetaDataRepository.PersistencyFlag">
      <apidata name="PersistencyFlag" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="F:OOAdvantech.MetaDataRepository.PersistencyFlag.Default" />
        <element api="F:OOAdvantech.MetaDataRepository.PersistencyFlag.OnConstruction" />
        <element api="F:OOAdvantech.MetaDataRepository.PersistencyFlag.LazyFetching" />
        <element api="F:OOAdvantech.MetaDataRepository.PersistencyFlag.ReferentialIntegrity" />
        <element api="F:OOAdvantech.MetaDataRepository.PersistencyFlag.CascadeDelete" />
      </elements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
      </containers>
    </api>
    <api id="F:OOAdvantech.MetaDataRepository.PersistencyFlag.CascadeDelete">
      <apidata name="CascadeDelete" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:OOAdvantech.MetaDataRepository.PersistencyFlag" ref="false" />
      </returns>
      <value>8</value>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.PersistencyFlag" ref="false" />
      </containers>
    </api>
    <api id="F:OOAdvantech.MetaDataRepository.PersistencyFlag.Default">
      <apidata name="Default" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:OOAdvantech.MetaDataRepository.PersistencyFlag" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.PersistencyFlag" ref="false" />
      </containers>
    </api>
    <api id="F:OOAdvantech.MetaDataRepository.PersistencyFlag.LazyFetching">
      <apidata name="LazyFetching" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:OOAdvantech.MetaDataRepository.PersistencyFlag" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.PersistencyFlag" ref="false" />
      </containers>
    </api>
    <api id="F:OOAdvantech.MetaDataRepository.PersistencyFlag.OnConstruction">
      <apidata name="OnConstruction" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:OOAdvantech.MetaDataRepository.PersistencyFlag" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.PersistencyFlag" ref="false" />
      </containers>
    </api>
    <api id="F:OOAdvantech.MetaDataRepository.PersistencyFlag.ReferentialIntegrity">
      <apidata name="ReferentialIntegrity" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:OOAdvantech.MetaDataRepository.PersistencyFlag" ref="false" />
      </returns>
      <value>4</value>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.PersistencyFlag" ref="false" />
      </containers>
    </api>
    <api id="T:OOAdvantech.MetaDataRepository.PersistencyType">
      <apidata name="PersistencyType" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="F:OOAdvantech.MetaDataRepository.PersistencyType.NormaClass" />
        <element api="F:OOAdvantech.MetaDataRepository.PersistencyType.historyClass" />
      </elements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
      </containers>
    </api>
    <api id="F:OOAdvantech.MetaDataRepository.PersistencyType.historyClass">
      <apidata name="historyClass" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:OOAdvantech.MetaDataRepository.PersistencyType" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.PersistencyType" ref="false" />
      </containers>
    </api>
    <api id="F:OOAdvantech.MetaDataRepository.PersistencyType.NormaClass">
      <apidata name="NormaClass" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:OOAdvantech.MetaDataRepository.PersistencyType" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.PersistencyType" ref="false" />
      </containers>
    </api>
    <api id="T:OOAdvantech.MetaDataRepository.Persistent">
      <apidata name="Persistent" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:OOAdvantech.Transactions.TransactionalAttribute" ref="true" />
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="F:OOAdvantech.MetaDataRepository.Persistent.PersistencyType" />
        <element api="F:OOAdvantech.MetaDataRepository.Persistent.NumberOfObject" />
        <element api="F:OOAdvantech.MetaDataRepository.Persistent.ExtMetaData" />
        <element api="M:OOAdvantech.MetaDataRepository.Persistent.#ctor" />
        <element api="M:OOAdvantech.MetaDataRepository.Persistent.#ctor(System.String)" />
        <element api="M:OOAdvantech.MetaDataRepository.Persistent.#ctor(OOAdvantech.MetaDataRepository.PersistencyType,System.Int32)" />
        <element api="M:OOAdvantech.MetaDataRepository.Persistent.#ctor(System.String,OOAdvantech.MetaDataRepository.PersistencyType,System.Int32)" />
        <element api="M:System.Attribute.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.Equals(System.Object)">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.GetHashCode">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.Match(System.Object)">
          <apidata name="Match" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.IsDefaultAttribute">
          <apidata name="IsDefaultAttribute" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)">
          <apidata name="GetTypeInfoCount" group="member" subgroup="method" />
          <memberdata visibility="private" />
          <proceduredata virtual="true" final="true" eii="true" />
          <parameters>
            <parameter name="pcTInfo" out="true">
              <referenceTo>
                <type api="T:System.UInt32" ref="false" />
              </referenceTo>
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Runtime.InteropServices._Attribute.GetTypeInfoCount(System.UInt32@)">
              <type api="T:System.Runtime.InteropServices._Attribute" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)">
          <apidata name="GetTypeInfo" group="member" subgroup="method" />
          <memberdata visibility="private" />
          <proceduredata virtual="true" final="true" eii="true" />
          <parameters>
            <parameter name="iTInfo">
              <type api="T:System.UInt32" ref="false" />
            </parameter>
            <parameter name="lcid">
              <type api="T:System.UInt32" ref="false" />
            </parameter>
            <parameter name="ppTInfo">
              <type api="T:System.IntPtr" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Runtime.InteropServices._Attribute.GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)">
              <type api="T:System.Runtime.InteropServices._Attribute" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)">
          <apidata name="GetIDsOfNames" group="member" subgroup="method" />
          <memberdata visibility="private" />
          <proceduredata virtual="true" final="true" eii="true" />
          <parameters>
            <parameter name="riid" in="true">
              <referenceTo>
                <type api="T:System.Guid" ref="false" />
              </referenceTo>
            </parameter>
            <parameter name="rgszNames">
              <type api="T:System.IntPtr" ref="false" />
            </parameter>
            <parameter name="cNames">
              <type api="T:System.UInt32" ref="false" />
            </parameter>
            <parameter name="lcid">
              <type api="T:System.UInt32" ref="false" />
            </parameter>
            <parameter name="rgDispId">
              <type api="T:System.IntPtr" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Runtime.InteropServices._Attribute.GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)">
              <type api="T:System.Runtime.InteropServices._Attribute" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)">
          <apidata name="Invoke" group="member" subgroup="method" />
          <memberdata visibility="private" />
          <proceduredata virtual="true" final="true" eii="true" />
          <parameters>
            <parameter name="dispIdMember">
              <type api="T:System.UInt32" ref="false" />
            </parameter>
            <parameter name="riid" in="true">
              <referenceTo>
                <type api="T:System.Guid" ref="false" />
              </referenceTo>
            </parameter>
            <parameter name="lcid">
              <type api="T:System.UInt32" ref="false" />
            </parameter>
            <parameter name="wFlags">
              <type api="T:System.Int16" ref="false" />
            </parameter>
            <parameter name="pDispParams">
              <type api="T:System.IntPtr" ref="false" />
            </parameter>
            <parameter name="pVarResult">
              <type api="T:System.IntPtr" ref="false" />
            </parameter>
            <parameter name="pExcepInfo">
              <type api="T:System.IntPtr" ref="false" />
            </parameter>
            <parameter name="puArgErr">
              <type api="T:System.IntPtr" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Runtime.InteropServices._Attribute.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)">
              <type api="T:System.Runtime.InteropServices._Attribute" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="P:System.Attribute.TypeId">
          <apidata name="TypeId" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_TypeId" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="All" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.Persistent.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Persistent" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.Persistent.#ctor(OOAdvantech.MetaDataRepository.PersistencyType,System.Int32)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="persistencyType">
          <type api="T:OOAdvantech.MetaDataRepository.PersistencyType" ref="false" />
        </parameter>
        <parameter name="numberOfObject">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Persistent" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.Persistent.#ctor(System.String)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="Settings">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Persistent" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.Persistent.#ctor(System.String,OOAdvantech.MetaDataRepository.PersistencyType,System.Int32)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="Settings">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="persistencyType">
          <type api="T:OOAdvantech.MetaDataRepository.PersistencyType" ref="false" />
        </parameter>
        <parameter name="numberOfObject">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Persistent" ref="true" />
      </containers>
    </api>
    <api id="F:OOAdvantech.MetaDataRepository.Persistent.ExtMetaData">
      <apidata name="ExtMetaData" group="member" subgroup="field" />
      <memberdata visibility="public" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Persistent" ref="true" />
      </containers>
    </api>
    <api id="F:OOAdvantech.MetaDataRepository.Persistent.NumberOfObject">
      <apidata name="NumberOfObject" group="member" subgroup="field" />
      <memberdata visibility="public" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Persistent" ref="true" />
      </containers>
    </api>
    <api id="F:OOAdvantech.MetaDataRepository.Persistent.PersistencyType">
      <apidata name="PersistencyType" group="member" subgroup="field" />
      <memberdata visibility="public" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:OOAdvantech.MetaDataRepository.PersistencyType" ref="false" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Persistent" ref="true" />
      </containers>
    </api>
    <api id="T:OOAdvantech.MetaDataRepository.PersistentMember">
      <apidata name="PersistentMember" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="F:OOAdvantech.MetaDataRepository.PersistentMember.Length" />
        <element api="F:OOAdvantech.MetaDataRepository.PersistentMember.ImplementationFieldName" />
        <element api="F:OOAdvantech.MetaDataRepository.PersistentMember.PersistencyFlag" />
        <element api="M:OOAdvantech.MetaDataRepository.PersistentMember.#ctor" />
        <element api="M:OOAdvantech.MetaDataRepository.PersistentMember.#ctor(System.String)" />
        <element api="M:OOAdvantech.MetaDataRepository.PersistentMember.#ctor(OOAdvantech.MetaDataRepository.PersistencyFlag)" />
        <element api="M:OOAdvantech.MetaDataRepository.PersistentMember.#ctor(OOAdvantech.MetaDataRepository.PersistencyFlag,System.String)" />
        <element api="M:OOAdvantech.MetaDataRepository.PersistentMember.#ctor(System.Int32,System.String)" />
        <element api="M:OOAdvantech.MetaDataRepository.PersistentMember.#ctor(System.Int32)" />
        <element api="M:OOAdvantech.MetaDataRepository.PersistentMember.#ctor(System.Int32,OOAdvantech.MetaDataRepository.PersistencyFlag,System.String)" />
        <element api="M:System.Attribute.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.Equals(System.Object)">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.GetHashCode">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.Match(System.Object)">
          <apidata name="Match" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.IsDefaultAttribute">
          <apidata name="IsDefaultAttribute" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)">
          <apidata name="GetTypeInfoCount" group="member" subgroup="method" />
          <memberdata visibility="private" />
          <proceduredata virtual="true" final="true" eii="true" />
          <parameters>
            <parameter name="pcTInfo" out="true">
              <referenceTo>
                <type api="T:System.UInt32" ref="false" />
              </referenceTo>
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Runtime.InteropServices._Attribute.GetTypeInfoCount(System.UInt32@)">
              <type api="T:System.Runtime.InteropServices._Attribute" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)">
          <apidata name="GetTypeInfo" group="member" subgroup="method" />
          <memberdata visibility="private" />
          <proceduredata virtual="true" final="true" eii="true" />
          <parameters>
            <parameter name="iTInfo">
              <type api="T:System.UInt32" ref="false" />
            </parameter>
            <parameter name="lcid">
              <type api="T:System.UInt32" ref="false" />
            </parameter>
            <parameter name="ppTInfo">
              <type api="T:System.IntPtr" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Runtime.InteropServices._Attribute.GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)">
              <type api="T:System.Runtime.InteropServices._Attribute" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)">
          <apidata name="GetIDsOfNames" group="member" subgroup="method" />
          <memberdata visibility="private" />
          <proceduredata virtual="true" final="true" eii="true" />
          <parameters>
            <parameter name="riid" in="true">
              <referenceTo>
                <type api="T:System.Guid" ref="false" />
              </referenceTo>
            </parameter>
            <parameter name="rgszNames">
              <type api="T:System.IntPtr" ref="false" />
            </parameter>
            <parameter name="cNames">
              <type api="T:System.UInt32" ref="false" />
            </parameter>
            <parameter name="lcid">
              <type api="T:System.UInt32" ref="false" />
            </parameter>
            <parameter name="rgDispId">
              <type api="T:System.IntPtr" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Runtime.InteropServices._Attribute.GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)">
              <type api="T:System.Runtime.InteropServices._Attribute" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)">
          <apidata name="Invoke" group="member" subgroup="method" />
          <memberdata visibility="private" />
          <proceduredata virtual="true" final="true" eii="true" />
          <parameters>
            <parameter name="dispIdMember">
              <type api="T:System.UInt32" ref="false" />
            </parameter>
            <parameter name="riid" in="true">
              <referenceTo>
                <type api="T:System.Guid" ref="false" />
              </referenceTo>
            </parameter>
            <parameter name="lcid">
              <type api="T:System.UInt32" ref="false" />
            </parameter>
            <parameter name="wFlags">
              <type api="T:System.Int16" ref="false" />
            </parameter>
            <parameter name="pDispParams">
              <type api="T:System.IntPtr" ref="false" />
            </parameter>
            <parameter name="pVarResult">
              <type api="T:System.IntPtr" ref="false" />
            </parameter>
            <parameter name="pExcepInfo">
              <type api="T:System.IntPtr" ref="false" />
            </parameter>
            <parameter name="puArgErr">
              <type api="T:System.IntPtr" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Runtime.InteropServices._Attribute.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)">
              <type api="T:System.Runtime.InteropServices._Attribute" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="P:System.Attribute.TypeId">
          <apidata name="TypeId" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_TypeId" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Property" />
              <field name="Field" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.PersistentMember.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.PersistentMember" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.PersistentMember.#ctor(OOAdvantech.MetaDataRepository.PersistencyFlag)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="mPersistencyFlag">
          <type api="T:OOAdvantech.MetaDataRepository.PersistencyFlag" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.PersistentMember" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.PersistentMember.#ctor(OOAdvantech.MetaDataRepository.PersistencyFlag,System.String)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="mPersistencyFlag">
          <type api="T:OOAdvantech.MetaDataRepository.PersistencyFlag" ref="false" />
        </parameter>
        <parameter name="theImplentationField">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.PersistentMember" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.PersistentMember.#ctor(System.Int32)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="theLength">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.PersistentMember" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.PersistentMember.#ctor(System.Int32,OOAdvantech.MetaDataRepository.PersistencyFlag,System.String)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="theLength">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="mPersistencyFlag">
          <type api="T:OOAdvantech.MetaDataRepository.PersistencyFlag" ref="false" />
        </parameter>
        <parameter name="theImplentationField">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.PersistentMember" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.PersistentMember.#ctor(System.Int32,System.String)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="theLength">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="theImplentationField">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.PersistentMember" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.PersistentMember.#ctor(System.String)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="theImplentationField">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.PersistentMember" ref="true" />
      </containers>
    </api>
    <api id="F:OOAdvantech.MetaDataRepository.PersistentMember.ImplementationFieldName">
      <apidata name="ImplementationFieldName" group="member" subgroup="field" />
      <memberdata visibility="public" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.PersistentMember" ref="true" />
      </containers>
    </api>
    <api id="F:OOAdvantech.MetaDataRepository.PersistentMember.Length">
      <apidata name="Length" group="member" subgroup="field" />
      <memberdata visibility="public" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.PersistentMember" ref="true" />
      </containers>
    </api>
    <api id="F:OOAdvantech.MetaDataRepository.PersistentMember.PersistencyFlag">
      <apidata name="PersistencyFlag" group="member" subgroup="field" />
      <memberdata visibility="public" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:OOAdvantech.MetaDataRepository.PersistencyFlag" ref="false" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.PersistentMember" ref="true" />
      </containers>
    </api>
    <api id="T:OOAdvantech.MetaDataRepository.Primitive">
      <apidata name="Primitive" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:OOAdvantech.MetaDataRepository.DataType" ref="true" />
          <type api="T:OOAdvantech.MetaDataRepository.Classifier" ref="true" />
          <type api="T:OOAdvantech.MetaDataRepository.Namespace" ref="true" />
          <type api="T:OOAdvantech.MetaDataRepository.MetaObject" ref="true" />
          <type api="T:System.MarshalByRefObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:OOAdvantech.MetaDataRepository.Primitive.#ctor" />
        <element api="F:OOAdvantech.MetaDataRepository.Classifier._TemplateBinding" />
        <element api="F:OOAdvantech.MetaDataRepository.Classifier._LinkAssociation" />
        <element api="F:OOAdvantech.MetaDataRepository.Classifier.ClassifierHierarchyClassifiers" />
        <element api="F:OOAdvantech.MetaDataRepository.Classifier._Generalizations" />
        <element api="F:OOAdvantech.MetaDataRepository.Classifier._OwnedTemplateSignature" />
        <element api="F:OOAdvantech.MetaDataRepository.Classifier.ClassHierarchyAssociateRoles" />
        <element api="F:OOAdvantech.MetaDataRepository.Classifier.ClassHierarchyRoles" />
        <element api="F:OOAdvantech.MetaDataRepository.Classifier.ClassHierarchyAttributes" />
        <element api="F:OOAdvantech.MetaDataRepository.Classifier._Specializations" />
        <element api="F:OOAdvantech.MetaDataRepository.Classifier._Roles" />
        <element api="F:OOAdvantech.MetaDataRepository.Classifier._Features" />
        <element api="M:OOAdvantech.MetaDataRepository.Classifier.GetExtensionMetaObject(System.Type)" />
        <element api="M:OOAdvantech.MetaDataRepository.Classifier.ToString" />
        <element api="M:OOAdvantech.MetaDataRepository.Classifier.GetAllSpecializeClasifiers" />
        <element api="M:OOAdvantech.MetaDataRepository.Classifier.BuildCaseInsensitiveNames" />
        <element api="M:OOAdvantech.MetaDataRepository.Classifier.ErrorCheck(System.Collections.ArrayList@)" />
        <element api="M:OOAdvantech.MetaDataRepository.Classifier.IsA(OOAdvantech.MetaDataRepository.Classifier)" />
        <element api="M:OOAdvantech.MetaDataRepository.Classifier.Synchronize(OOAdvantech.MetaDataRepository.MetaObject)" />
        <element api="M:OOAdvantech.MetaDataRepository.Classifier.RemoveAssociation(OOAdvantech.MetaDataRepository.Association)" />
        <element api="M:OOAdvantech.MetaDataRepository.Classifier.GetGeneralClasifiers" />
        <element api="M:OOAdvantech.MetaDataRepository.Classifier.RefreshClassHierarchyCollections" />
        <element api="M:OOAdvantech.MetaDataRepository.Classifier.RemoveAttribute(OOAdvantech.MetaDataRepository.Attribute)" />
        <element api="M:OOAdvantech.MetaDataRepository.Classifier.GetAllGeneralClasifiers" />
        <element api="M:OOAdvantech.MetaDataRepository.Classifier.RemoveOperation(OOAdvantech.MetaDataRepository.Operation)" />
        <element api="M:OOAdvantech.MetaDataRepository.Classifier.GetAssignedComponents" />
        <element api="M:OOAdvantech.MetaDataRepository.Classifier.GetSpecializedClasifiers" />
        <element api="M:OOAdvantech.MetaDataRepository.Classifier.AddAssociation(System.String,OOAdvantech.MetaDataRepository.Roles,OOAdvantech.MetaDataRepository.Classifier,System.String)" />
        <element api="M:OOAdvantech.MetaDataRepository.Classifier.AddAttribute(System.String,OOAdvantech.MetaDataRepository.Classifier,System.String)" />
        <element api="M:OOAdvantech.MetaDataRepository.Classifier.AddOperation(System.String,OOAdvantech.MetaDataRepository.Classifier)" />
        <element api="M:OOAdvantech.MetaDataRepository.Classifier.GetAssociateRoles(System.Boolean)" />
        <element api="M:OOAdvantech.MetaDataRepository.Classifier.RemoveGeneralization(OOAdvantech.MetaDataRepository.Generalization)" />
        <element api="M:OOAdvantech.MetaDataRepository.Classifier.AddGeneralization(System.String,OOAdvantech.MetaDataRepository.Classifier)" />
        <element api="M:OOAdvantech.MetaDataRepository.Classifier.AddRole(OOAdvantech.MetaDataRepository.AssociationEnd)" />
        <element api="M:OOAdvantech.MetaDataRepository.Classifier.RemoveRole(OOAdvantech.MetaDataRepository.AssociationEnd)" />
        <element api="M:OOAdvantech.MetaDataRepository.Classifier.GetOperations(System.Boolean)" />
        <element api="M:OOAdvantech.MetaDataRepository.Classifier.GetOperations(System.String)" />
        <element api="M:OOAdvantech.MetaDataRepository.Classifier.GetOperations(System.String,System.Boolean)" />
        <element api="M:OOAdvantech.MetaDataRepository.Classifier.GetRoles(System.Boolean)" />
        <element api="M:OOAdvantech.MetaDataRepository.Classifier.GetRealizedAttributes" />
        <element api="M:OOAdvantech.MetaDataRepository.Classifier.GetAttributes(System.Boolean)" />
        <element api="M:OOAdvantech.MetaDataRepository.Classifier.GetOperation(System.String,System.String[],System.Boolean)" />
        <element api="M:OOAdvantech.MetaDataRepository.Classifier.GetRole(System.String)" />
        <element api="M:OOAdvantech.MetaDataRepository.Classifier.GetFeature(System.String,System.Boolean)" />
        <element api="P:OOAdvantech.MetaDataRepository.Classifier.IsTemplate" />
        <element api="P:OOAdvantech.MetaDataRepository.Classifier.IsTemplateInstantiation" />
        <element api="P:OOAdvantech.MetaDataRepository.Classifier.Constractors" />
        <element api="P:OOAdvantech.MetaDataRepository.Classifier.TemplateBinding" />
        <element api="P:OOAdvantech.MetaDataRepository.Classifier.LinkAssociation" />
        <element api="P:OOAdvantech.MetaDataRepository.Classifier.Generalizations" />
        <element api="P:OOAdvantech.MetaDataRepository.Classifier.StorageCellsOfThisType" />
        <element api="P:OOAdvantech.MetaDataRepository.Classifier.IsBindedClassifier" />
        <element api="P:OOAdvantech.MetaDataRepository.Classifier.ContainsTemplateParameter" />
        <element api="P:OOAdvantech.MetaDataRepository.Classifier.OwnedTemplateSignature" />
        <element api="P:OOAdvantech.MetaDataRepository.Classifier.ClassHierarchyLinkAssociation" />
        <element api="P:OOAdvantech.MetaDataRepository.Classifier.Specializations" />
        <element api="P:OOAdvantech.MetaDataRepository.Classifier.Roles" />
        <element api="P:OOAdvantech.MetaDataRepository.Classifier.Features" />
        <element api="F:OOAdvantech.MetaDataRepository.Namespace._OwnedElements" />
        <element api="M:OOAdvantech.MetaDataRepository.Namespace.MakeNameUnaryInNamesapce(OOAdvantech.MetaDataRepository.MetaObject)" />
        <element api="M:OOAdvantech.MetaDataRepository.Namespace.GetExtensionMetaObjects" />
        <element api="M:OOAdvantech.MetaDataRepository.Namespace.AddOwnedElement(OOAdvantech.MetaDataRepository.MetaObject)" />
        <element api="M:OOAdvantech.MetaDataRepository.Namespace.RemoveOwnedElement(OOAdvantech.MetaDataRepository.MetaObject)" />
        <element api="P:OOAdvantech.MetaDataRepository.Namespace.OwnedElements" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject._CaseInsensitiveName" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject._ImplementationUnit" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject.LockObject" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject.ReaderWriterLock" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject.Properties" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject._Name" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject.MetaObjectIDStream" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject._Identity" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject._ClientDependencies" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject._SupplierDependencies" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject._Namespace" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject.Visibility" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.MetaObjectChangeState" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.ShallowSynchronize(OOAdvantech.MetaDataRepository.MetaObject)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.AddDependency(System.String,OOAdvantech.MetaDataRepository.MetaObject)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.GetDynamicPropertiesAsXmlString" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.SetIdentity(OOAdvantech.MetaDataRepository.MetaObjectID)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.SetNamespace(OOAdvantech.MetaDataRepository.Namespace)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.GetPropertyValue``1(System.String,System.String)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.GetPropertyValue(System.Type,System.String,System.String)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.PutPropertyValue(System.String,System.String,System.Object)" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.CaseInsensitiveName" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.ImplementationUnit" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.OQLName" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.Name" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.FullName" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.OQLFullName" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.Identity" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.ClientDependencies" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.SupplierDependencies" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.Namespace" />
        <element api="E:OOAdvantech.MetaDataRepository.MetaObject.Changed" />
        <element api="M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="cloneIdentity">
              <type api="T:System.Boolean" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.MarshalByRefObject" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.MarshalByRefObject" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.MarshalByRefObject.GetLifetimeService">
          <apidata name="GetLifetimeService" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.MarshalByRefObject" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Security.Permissions.SecurityPermissionAttribute" ref="true" />
              <argument>
                <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
                <enumValue>
                  <field name="LinkDemand" />
                </enumValue>
              </argument>
              <assignment name="Flags">
                <type api="T:System.Security.Permissions.SecurityPermissionFlag" ref="false" />
                <enumValue>
                  <field name="Infrastructure" />
                </enumValue>
              </assignment>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.MarshalByRefObject.InitializeLifetimeService">
          <apidata name="InitializeLifetimeService" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.MarshalByRefObject" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Security.Permissions.SecurityPermissionAttribute" ref="true" />
              <argument>
                <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
                <enumValue>
                  <field name="LinkDemand" />
                </enumValue>
              </argument>
              <assignment name="Flags">
                <type api="T:System.Security.Permissions.SecurityPermissionFlag" ref="false" />
                <enumValue>
                  <field name="Infrastructure" />
                </enumValue>
              </assignment>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.MarshalByRefObject.CreateObjRef(System.Type)">
          <apidata name="CreateObjRef" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="requestedType">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Runtime.Remoting.ObjRef" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.MarshalByRefObject" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Security.Permissions.SecurityPermissionAttribute" ref="true" />
              <argument>
                <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
                <enumValue>
                  <field name="LinkDemand" />
                </enumValue>
              </argument>
              <assignment name="Flags">
                <type api="T:System.Security.Permissions.SecurityPermissionFlag" ref="false" />
                <enumValue>
                  <field name="Infrastructure" />
                </enumValue>
              </assignment>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.Primitive.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Primitive" ref="true" />
      </containers>
    </api>
    <api id="T:OOAdvantech.MetaDataRepository.Realization">
      <apidata name="Realization" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:OOAdvantech.MetaDataRepository.Relationship" ref="true" />
          <type api="T:OOAdvantech.MetaDataRepository.MetaObject" ref="true" />
          <type api="T:System.MarshalByRefObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="F:OOAdvantech.MetaDataRepository.Realization._Abstarction" />
        <element api="M:OOAdvantech.MetaDataRepository.Realization.Synchronize(OOAdvantech.MetaDataRepository.MetaObject)" />
        <element api="M:OOAdvantech.MetaDataRepository.Realization.GetExtensionMetaObjects" />
        <element api="M:OOAdvantech.MetaDataRepository.Realization.#ctor" />
        <element api="M:OOAdvantech.MetaDataRepository.Realization.#ctor(System.String,OOAdvantech.MetaDataRepository.Interface,OOAdvantech.MetaDataRepository.Class)" />
        <element api="M:OOAdvantech.MetaDataRepository.Realization.#ctor(System.String,OOAdvantech.MetaDataRepository.Interface,OOAdvantech.MetaDataRepository.Structure)" />
        <element api="P:OOAdvantech.MetaDataRepository.Realization.Identity" />
        <element api="P:OOAdvantech.MetaDataRepository.Realization.Implementor" />
        <element api="P:OOAdvantech.MetaDataRepository.Realization.Abstarction" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject._CaseInsensitiveName" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject._ImplementationUnit" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject.LockObject" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject.ReaderWriterLock" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject.Properties" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject._Name" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject.MetaObjectIDStream" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject._Identity" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject._ClientDependencies" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject._SupplierDependencies" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject._Namespace" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject.Visibility" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.MetaObjectChangeState" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.ShallowSynchronize(OOAdvantech.MetaDataRepository.MetaObject)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.AddDependency(System.String,OOAdvantech.MetaDataRepository.MetaObject)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.ErrorCheck(System.Collections.ArrayList@)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.GetDynamicPropertiesAsXmlString" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.SetIdentity(OOAdvantech.MetaDataRepository.MetaObjectID)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.GetExtensionMetaObject(System.Type)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.SetNamespace(OOAdvantech.MetaDataRepository.Namespace)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.GetPropertyValue``1(System.String,System.String)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.GetPropertyValue(System.Type,System.String,System.String)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.PutPropertyValue(System.String,System.String,System.Object)" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.CaseInsensitiveName" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.ImplementationUnit" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.OQLName" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.Name" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.FullName" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.OQLFullName" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.ClientDependencies" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.SupplierDependencies" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.Namespace" />
        <element api="E:OOAdvantech.MetaDataRepository.MetaObject.Changed" />
        <element api="M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="cloneIdentity">
              <type api="T:System.Boolean" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.MarshalByRefObject" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.MarshalByRefObject" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.MarshalByRefObject.GetLifetimeService">
          <apidata name="GetLifetimeService" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.MarshalByRefObject" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Security.Permissions.SecurityPermissionAttribute" ref="true" />
              <argument>
                <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
                <enumValue>
                  <field name="LinkDemand" />
                </enumValue>
              </argument>
              <assignment name="Flags">
                <type api="T:System.Security.Permissions.SecurityPermissionFlag" ref="false" />
                <enumValue>
                  <field name="Infrastructure" />
                </enumValue>
              </assignment>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.MarshalByRefObject.InitializeLifetimeService">
          <apidata name="InitializeLifetimeService" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.MarshalByRefObject" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Security.Permissions.SecurityPermissionAttribute" ref="true" />
              <argument>
                <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
                <enumValue>
                  <field name="LinkDemand" />
                </enumValue>
              </argument>
              <assignment name="Flags">
                <type api="T:System.Security.Permissions.SecurityPermissionFlag" ref="false" />
                <enumValue>
                  <field name="Infrastructure" />
                </enumValue>
              </assignment>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.MarshalByRefObject.CreateObjRef(System.Type)">
          <apidata name="CreateObjRef" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="requestedType">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Runtime.Remoting.ObjRef" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.MarshalByRefObject" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Security.Permissions.SecurityPermissionAttribute" ref="true" />
              <argument>
                <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
                <enumValue>
                  <field name="LinkDemand" />
                </enumValue>
              </argument>
              <assignment name="Flags">
                <type api="T:System.Security.Permissions.SecurityPermissionFlag" ref="false" />
                <enumValue>
                  <field name="Infrastructure" />
                </enumValue>
              </assignment>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.Persistent" ref="true" />
        </attribute>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.BackwardCompatibilityID" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>{65666A43-54A9-4036-9085-A6176BA493CE}</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.Realization.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Realization" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.Realization.#ctor(System.String,OOAdvantech.MetaDataRepository.Interface,OOAdvantech.MetaDataRepository.Class)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="_interface">
          <type api="T:OOAdvantech.MetaDataRepository.Interface" ref="true" />
        </parameter>
        <parameter name="_class">
          <type api="T:OOAdvantech.MetaDataRepository.Class" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Realization" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.Realization.#ctor(System.String,OOAdvantech.MetaDataRepository.Interface,OOAdvantech.MetaDataRepository.Structure)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="_interface">
          <type api="T:OOAdvantech.MetaDataRepository.Interface" ref="true" />
        </parameter>
        <parameter name="_struct">
          <type api="T:OOAdvantech.MetaDataRepository.Structure" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Realization" ref="true" />
      </containers>
    </api>
    <api id="F:OOAdvantech.MetaDataRepository.Realization._Abstarction">
      <apidata name="_Abstarction" group="member" subgroup="field" />
      <memberdata visibility="family" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:OOAdvantech.MetaDataRepository.Interface" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Realization" ref="true" />
      </containers>
    </api>
    <api id="P:OOAdvantech.MetaDataRepository.Realization.Abstarction">
      <apidata name="Abstarction" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Abstarction" />
      <setter name="set_Abstarction" />
      <returns>
        <type api="T:OOAdvantech.MetaDataRepository.Interface" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Realization" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.AssociationAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>AbstarctPart</value>
          </argument>
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:OOAdvantech.MetaDataRepository.Interface" ref="true" />
            </typeValue>
          </argument>
          <argument>
            <type api="T:OOAdvantech.MetaDataRepository.Roles" ref="false" />
            <enumValue>
              <field name="RoleA" />
            </enumValue>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>{B378BE2A-2470-4C56-B2FB-4CF3776BE55F}</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.RoleAMultiplicityRangeAttribute" ref="true" />
          <argument>
            <type api="T:System.UInt64" ref="false" />
            <value>1</value>
          </argument>
          <argument>
            <type api="T:System.UInt64" ref="false" />
            <value>1</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.PersistentMember" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>_Abstarction</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.AssociationEndBehavior" ref="true" />
          <argument>
            <type api="T:OOAdvantech.MetaDataRepository.PersistencyFlag" ref="false" />
            <enumValue>
              <field name="OnConstruction" />
            </enumValue>
          </argument>
        </attribute>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.BackwardCompatibilityID" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>+1</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.Realization.GetExtensionMetaObjects">
      <apidata name="GetExtensionMetaObjects" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:OOAdvantech.MetaDataRepository.MetaObject.GetExtensionMetaObjects">
          <type api="T:OOAdvantech.MetaDataRepository.MetaObject" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Collections.ArrayList" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Realization" ref="true" />
      </containers>
    </api>
    <api id="P:OOAdvantech.MetaDataRepository.Realization.Identity">
      <apidata name="Identity" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:OOAdvantech.MetaDataRepository.MetaObject.Identity">
          <type api="T:OOAdvantech.MetaDataRepository.MetaObject" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_Identity" />
      <returns>
        <type api="T:OOAdvantech.MetaDataRepository.MetaObjectID" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Realization" ref="true" />
      </containers>
    </api>
    <api id="P:OOAdvantech.MetaDataRepository.Realization.Implementor">
      <apidata name="Implementor" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Implementor" />
      <setter name="set_Implementor" />
      <returns>
        <type api="T:OOAdvantech.MetaDataRepository.InterfaceImplementor" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Realization" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.AssociationEndBehavior" ref="true" />
          <argument>
            <type api="T:OOAdvantech.MetaDataRepository.PersistencyFlag" ref="false" />
            <enumValue>
              <field name="Default" />
              <field name="OnConstruction" />
              <field name="ReferentialIntegrity" />
            </enumValue>
          </argument>
        </attribute>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.PersistentMember" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>_Implementor</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.RoleAMultiplicityRangeAttribute" ref="true" />
          <argument>
            <type api="T:System.UInt64" ref="false" />
            <value>1</value>
          </argument>
          <argument>
            <type api="T:System.UInt64" ref="false" />
            <value>1</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.BackwardCompatibilityID" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>+4</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.AssociationAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>ImplementorPart</value>
          </argument>
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:OOAdvantech.MetaDataRepository.InterfaceImplementor" ref="true" />
            </typeValue>
          </argument>
          <argument>
            <type api="T:OOAdvantech.MetaDataRepository.Roles" ref="false" />
            <enumValue>
              <field name="RoleA" />
            </enumValue>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>{B7175039-FF22-434D-93BA-94065C932934}</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.Realization.Synchronize(OOAdvantech.MetaDataRepository.MetaObject)">
      <apidata name="Synchronize" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:OOAdvantech.MetaDataRepository.MetaObject.Synchronize(OOAdvantech.MetaDataRepository.MetaObject)">
          <type api="T:OOAdvantech.MetaDataRepository.MetaObject" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="OriginMetaObject">
          <type api="T:OOAdvantech.MetaDataRepository.MetaObject" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Realization" ref="true" />
      </containers>
    </api>
    <api id="T:OOAdvantech.MetaDataRepository.RelatedStorageCell">
      <apidata name="RelatedStorageCell" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" layout="sequential" format="ansi" />
      <elements>
        <element api="F:OOAdvantech.MetaDataRepository.RelatedStorageCell.StorageCell" />
        <element api="F:OOAdvantech.MetaDataRepository.RelatedStorageCell.ThrougthRelationTable" />
        <element api="M:OOAdvantech.MetaDataRepository.RelatedStorageCell.#ctor(OOAdvantech.MetaDataRepository.StorageCell,System.Boolean)" />
        <element api="M:System.ValueType.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.Equals(System.Object)">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.ValueType" ref="true" />
          </containers>
        </element>
        <element api="M:System.ValueType.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.GetHashCode">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.ValueType" ref="true" />
          </containers>
        </element>
        <element api="M:System.ValueType.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.ToString">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.ValueType" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.RelatedStorageCell.#ctor(OOAdvantech.MetaDataRepository.StorageCell,System.Boolean)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="storageCell">
          <type api="T:OOAdvantech.MetaDataRepository.StorageCell" ref="true" />
        </parameter>
        <parameter name="througthRelationTable">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.RelatedStorageCell" ref="false" />
      </containers>
    </api>
    <api id="F:OOAdvantech.MetaDataRepository.RelatedStorageCell.StorageCell">
      <apidata name="StorageCell" group="member" subgroup="field" />
      <memberdata visibility="public" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:OOAdvantech.MetaDataRepository.StorageCell" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.RelatedStorageCell" ref="false" />
      </containers>
    </api>
    <api id="F:OOAdvantech.MetaDataRepository.RelatedStorageCell.ThrougthRelationTable">
      <apidata name="ThrougthRelationTable" group="member" subgroup="field" />
      <memberdata visibility="public" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.RelatedStorageCell" ref="false" />
      </containers>
    </api>
    <api id="T:OOAdvantech.MetaDataRepository.Relationship">
      <apidata name="Relationship" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:OOAdvantech.MetaDataRepository.MetaObject" ref="true" />
          <type api="T:System.MarshalByRefObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:OOAdvantech.MetaDataRepository.Generalization" ref="true" />
          <type api="T:OOAdvantech.MetaDataRepository.Dependency" ref="true" />
          <type api="T:OOAdvantech.MetaDataRepository.Association" ref="true" />
          <type api="T:OOAdvantech.MetaDataRepository.Realization" ref="true" />
        </descendents>
      </family>
      <elements>
        <element api="M:OOAdvantech.MetaDataRepository.Relationship.#ctor" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject._CaseInsensitiveName" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject._ImplementationUnit" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject.LockObject" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject.ReaderWriterLock" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject.Properties" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject._Name" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject.MetaObjectIDStream" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject._Identity" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject._ClientDependencies" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject._SupplierDependencies" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject._Namespace" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject.Visibility" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.MetaObjectChangeState" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.ShallowSynchronize(OOAdvantech.MetaDataRepository.MetaObject)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.AddDependency(System.String,OOAdvantech.MetaDataRepository.MetaObject)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.ErrorCheck(System.Collections.ArrayList@)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.GetDynamicPropertiesAsXmlString" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.SetIdentity(OOAdvantech.MetaDataRepository.MetaObjectID)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.Synchronize(OOAdvantech.MetaDataRepository.MetaObject)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.GetExtensionMetaObject(System.Type)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.GetExtensionMetaObjects" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.SetNamespace(OOAdvantech.MetaDataRepository.Namespace)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.GetPropertyValue``1(System.String,System.String)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.GetPropertyValue(System.Type,System.String,System.String)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.PutPropertyValue(System.String,System.String,System.Object)" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.CaseInsensitiveName" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.ImplementationUnit" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.OQLName" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.Name" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.FullName" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.OQLFullName" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.Identity" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.ClientDependencies" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.SupplierDependencies" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.Namespace" />
        <element api="E:OOAdvantech.MetaDataRepository.MetaObject.Changed" />
        <element api="M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="cloneIdentity">
              <type api="T:System.Boolean" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.MarshalByRefObject" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.MarshalByRefObject" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.MarshalByRefObject.GetLifetimeService">
          <apidata name="GetLifetimeService" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.MarshalByRefObject" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Security.Permissions.SecurityPermissionAttribute" ref="true" />
              <argument>
                <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
                <enumValue>
                  <field name="LinkDemand" />
                </enumValue>
              </argument>
              <assignment name="Flags">
                <type api="T:System.Security.Permissions.SecurityPermissionFlag" ref="false" />
                <enumValue>
                  <field name="Infrastructure" />
                </enumValue>
              </assignment>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.MarshalByRefObject.InitializeLifetimeService">
          <apidata name="InitializeLifetimeService" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.MarshalByRefObject" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Security.Permissions.SecurityPermissionAttribute" ref="true" />
              <argument>
                <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
                <enumValue>
                  <field name="LinkDemand" />
                </enumValue>
              </argument>
              <assignment name="Flags">
                <type api="T:System.Security.Permissions.SecurityPermissionFlag" ref="false" />
                <enumValue>
                  <field name="Infrastructure" />
                </enumValue>
              </assignment>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.MarshalByRefObject.CreateObjRef(System.Type)">
          <apidata name="CreateObjRef" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="requestedType">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Runtime.Remoting.ObjRef" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.MarshalByRefObject" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Security.Permissions.SecurityPermissionAttribute" ref="true" />
              <argument>
                <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
                <enumValue>
                  <field name="LinkDemand" />
                </enumValue>
              </argument>
              <assignment name="Flags">
                <type api="T:System.Security.Permissions.SecurityPermissionFlag" ref="false" />
                <enumValue>
                  <field name="Infrastructure" />
                </enumValue>
              </assignment>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.BackwardCompatibilityID" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>{54B39C49-8C82-4A0E-AA9E-90B6A97E677C}</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.Persistent" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.Relationship.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Relationship" ref="true" />
      </containers>
    </api>
    <api id="T:OOAdvantech.MetaDataRepository.RoleAMultiplicityRangeAttribute">
      <apidata name="RoleAMultiplicityRangeAttribute" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="F:OOAdvantech.MetaDataRepository.RoleAMultiplicityRangeAttribute.Multiplicity" />
        <element api="M:OOAdvantech.MetaDataRepository.RoleAMultiplicityRangeAttribute.#ctor(System.UInt64)" />
        <element api="M:OOAdvantech.MetaDataRepository.RoleAMultiplicityRangeAttribute.#ctor(System.UInt64,System.UInt64)" />
        <element api="M:OOAdvantech.MetaDataRepository.RoleAMultiplicityRangeAttribute.#ctor" />
        <element api="M:System.Attribute.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.Equals(System.Object)">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.GetHashCode">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.Match(System.Object)">
          <apidata name="Match" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.IsDefaultAttribute">
          <apidata name="IsDefaultAttribute" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)">
          <apidata name="GetTypeInfoCount" group="member" subgroup="method" />
          <memberdata visibility="private" />
          <proceduredata virtual="true" final="true" eii="true" />
          <parameters>
            <parameter name="pcTInfo" out="true">
              <referenceTo>
                <type api="T:System.UInt32" ref="false" />
              </referenceTo>
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Runtime.InteropServices._Attribute.GetTypeInfoCount(System.UInt32@)">
              <type api="T:System.Runtime.InteropServices._Attribute" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)">
          <apidata name="GetTypeInfo" group="member" subgroup="method" />
          <memberdata visibility="private" />
          <proceduredata virtual="true" final="true" eii="true" />
          <parameters>
            <parameter name="iTInfo">
              <type api="T:System.UInt32" ref="false" />
            </parameter>
            <parameter name="lcid">
              <type api="T:System.UInt32" ref="false" />
            </parameter>
            <parameter name="ppTInfo">
              <type api="T:System.IntPtr" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Runtime.InteropServices._Attribute.GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)">
              <type api="T:System.Runtime.InteropServices._Attribute" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)">
          <apidata name="GetIDsOfNames" group="member" subgroup="method" />
          <memberdata visibility="private" />
          <proceduredata virtual="true" final="true" eii="true" />
          <parameters>
            <parameter name="riid" in="true">
              <referenceTo>
                <type api="T:System.Guid" ref="false" />
              </referenceTo>
            </parameter>
            <parameter name="rgszNames">
              <type api="T:System.IntPtr" ref="false" />
            </parameter>
            <parameter name="cNames">
              <type api="T:System.UInt32" ref="false" />
            </parameter>
            <parameter name="lcid">
              <type api="T:System.UInt32" ref="false" />
            </parameter>
            <parameter name="rgDispId">
              <type api="T:System.IntPtr" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Runtime.InteropServices._Attribute.GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)">
              <type api="T:System.Runtime.InteropServices._Attribute" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)">
          <apidata name="Invoke" group="member" subgroup="method" />
          <memberdata visibility="private" />
          <proceduredata virtual="true" final="true" eii="true" />
          <parameters>
            <parameter name="dispIdMember">
              <type api="T:System.UInt32" ref="false" />
            </parameter>
            <parameter name="riid" in="true">
              <referenceTo>
                <type api="T:System.Guid" ref="false" />
              </referenceTo>
            </parameter>
            <parameter name="lcid">
              <type api="T:System.UInt32" ref="false" />
            </parameter>
            <parameter name="wFlags">
              <type api="T:System.Int16" ref="false" />
            </parameter>
            <parameter name="pDispParams">
              <type api="T:System.IntPtr" ref="false" />
            </parameter>
            <parameter name="pVarResult">
              <type api="T:System.IntPtr" ref="false" />
            </parameter>
            <parameter name="pExcepInfo">
              <type api="T:System.IntPtr" ref="false" />
            </parameter>
            <parameter name="puArgErr">
              <type api="T:System.IntPtr" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Runtime.InteropServices._Attribute.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)">
              <type api="T:System.Runtime.InteropServices._Attribute" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="P:System.Attribute.TypeId">
          <apidata name="TypeId" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_TypeId" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Property" />
              <field name="Field" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.RoleAMultiplicityRangeAttribute.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.RoleAMultiplicityRangeAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.RoleAMultiplicityRangeAttribute.#ctor(System.UInt64)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="lowLimit">
          <type api="T:System.UInt64" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.RoleAMultiplicityRangeAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.RoleAMultiplicityRangeAttribute.#ctor(System.UInt64,System.UInt64)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="lowLimit">
          <type api="T:System.UInt64" ref="false" />
        </parameter>
        <parameter name="highLimit">
          <type api="T:System.UInt64" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.RoleAMultiplicityRangeAttribute" ref="true" />
      </containers>
    </api>
    <api id="F:OOAdvantech.MetaDataRepository.RoleAMultiplicityRangeAttribute.Multiplicity">
      <apidata name="Multiplicity" group="member" subgroup="field" />
      <memberdata visibility="public" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:OOAdvantech.MetaDataRepository.MultiplicityRange" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.RoleAMultiplicityRangeAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:OOAdvantech.MetaDataRepository.RoleBMultiplicityRangeAttribute">
      <apidata name="RoleBMultiplicityRangeAttribute" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="F:OOAdvantech.MetaDataRepository.RoleBMultiplicityRangeAttribute.Multiplicity" />
        <element api="M:OOAdvantech.MetaDataRepository.RoleBMultiplicityRangeAttribute.#ctor(System.UInt64)" />
        <element api="M:OOAdvantech.MetaDataRepository.RoleBMultiplicityRangeAttribute.#ctor(System.UInt64,System.UInt64)" />
        <element api="M:OOAdvantech.MetaDataRepository.RoleBMultiplicityRangeAttribute.#ctor" />
        <element api="M:System.Attribute.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.Equals(System.Object)">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.GetHashCode">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.Match(System.Object)">
          <apidata name="Match" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.IsDefaultAttribute">
          <apidata name="IsDefaultAttribute" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)">
          <apidata name="GetTypeInfoCount" group="member" subgroup="method" />
          <memberdata visibility="private" />
          <proceduredata virtual="true" final="true" eii="true" />
          <parameters>
            <parameter name="pcTInfo" out="true">
              <referenceTo>
                <type api="T:System.UInt32" ref="false" />
              </referenceTo>
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Runtime.InteropServices._Attribute.GetTypeInfoCount(System.UInt32@)">
              <type api="T:System.Runtime.InteropServices._Attribute" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)">
          <apidata name="GetTypeInfo" group="member" subgroup="method" />
          <memberdata visibility="private" />
          <proceduredata virtual="true" final="true" eii="true" />
          <parameters>
            <parameter name="iTInfo">
              <type api="T:System.UInt32" ref="false" />
            </parameter>
            <parameter name="lcid">
              <type api="T:System.UInt32" ref="false" />
            </parameter>
            <parameter name="ppTInfo">
              <type api="T:System.IntPtr" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Runtime.InteropServices._Attribute.GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)">
              <type api="T:System.Runtime.InteropServices._Attribute" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)">
          <apidata name="GetIDsOfNames" group="member" subgroup="method" />
          <memberdata visibility="private" />
          <proceduredata virtual="true" final="true" eii="true" />
          <parameters>
            <parameter name="riid" in="true">
              <referenceTo>
                <type api="T:System.Guid" ref="false" />
              </referenceTo>
            </parameter>
            <parameter name="rgszNames">
              <type api="T:System.IntPtr" ref="false" />
            </parameter>
            <parameter name="cNames">
              <type api="T:System.UInt32" ref="false" />
            </parameter>
            <parameter name="lcid">
              <type api="T:System.UInt32" ref="false" />
            </parameter>
            <parameter name="rgDispId">
              <type api="T:System.IntPtr" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Runtime.InteropServices._Attribute.GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)">
              <type api="T:System.Runtime.InteropServices._Attribute" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)">
          <apidata name="Invoke" group="member" subgroup="method" />
          <memberdata visibility="private" />
          <proceduredata virtual="true" final="true" eii="true" />
          <parameters>
            <parameter name="dispIdMember">
              <type api="T:System.UInt32" ref="false" />
            </parameter>
            <parameter name="riid" in="true">
              <referenceTo>
                <type api="T:System.Guid" ref="false" />
              </referenceTo>
            </parameter>
            <parameter name="lcid">
              <type api="T:System.UInt32" ref="false" />
            </parameter>
            <parameter name="wFlags">
              <type api="T:System.Int16" ref="false" />
            </parameter>
            <parameter name="pDispParams">
              <type api="T:System.IntPtr" ref="false" />
            </parameter>
            <parameter name="pVarResult">
              <type api="T:System.IntPtr" ref="false" />
            </parameter>
            <parameter name="pExcepInfo">
              <type api="T:System.IntPtr" ref="false" />
            </parameter>
            <parameter name="puArgErr">
              <type api="T:System.IntPtr" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Runtime.InteropServices._Attribute.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)">
              <type api="T:System.Runtime.InteropServices._Attribute" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="P:System.Attribute.TypeId">
          <apidata name="TypeId" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_TypeId" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Property" />
              <field name="Field" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.RoleBMultiplicityRangeAttribute.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.RoleBMultiplicityRangeAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.RoleBMultiplicityRangeAttribute.#ctor(System.UInt64)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="lowLimit">
          <type api="T:System.UInt64" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.RoleBMultiplicityRangeAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.RoleBMultiplicityRangeAttribute.#ctor(System.UInt64,System.UInt64)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="lowLimit">
          <type api="T:System.UInt64" ref="false" />
        </parameter>
        <parameter name="highLimit">
          <type api="T:System.UInt64" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.RoleBMultiplicityRangeAttribute" ref="true" />
      </containers>
    </api>
    <api id="F:OOAdvantech.MetaDataRepository.RoleBMultiplicityRangeAttribute.Multiplicity">
      <apidata name="Multiplicity" group="member" subgroup="field" />
      <memberdata visibility="public" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:OOAdvantech.MetaDataRepository.MultiplicityRange" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.RoleBMultiplicityRangeAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:OOAdvantech.MetaDataRepository.Roles">
      <apidata name="Roles" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="F:OOAdvantech.MetaDataRepository.Roles.RoleA" />
        <element api="F:OOAdvantech.MetaDataRepository.Roles.RoleB" />
      </elements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
      </containers>
    </api>
    <api id="F:OOAdvantech.MetaDataRepository.Roles.RoleA">
      <apidata name="RoleA" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:OOAdvantech.MetaDataRepository.Roles" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Roles" ref="false" />
      </containers>
    </api>
    <api id="F:OOAdvantech.MetaDataRepository.Roles.RoleB">
      <apidata name="RoleB" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:OOAdvantech.MetaDataRepository.Roles" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Roles" ref="false" />
      </containers>
    </api>
    <api id="T:OOAdvantech.MetaDataRepository.Storage">
      <apidata name="Storage" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:OOAdvantech.MetaDataRepository.Namespace" ref="true" />
          <type api="T:OOAdvantech.MetaDataRepository.MetaObject" ref="true" />
          <type api="T:System.MarshalByRefObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:OOAdvantech.PersistenceLayer.Storage" ref="true" />
      </implements>
      <elements>
        <element api="F:OOAdvantech.MetaDataRepository.Storage._Components" />
        <element api="F:OOAdvantech.MetaDataRepository.Storage._StorageLocation" />
        <element api="F:OOAdvantech.MetaDataRepository.Storage._StorageIdentity" />
        <element api="F:OOAdvantech.MetaDataRepository.Storage._StorageType" />
        <element api="F:OOAdvantech.MetaDataRepository.Storage._StorageName" />
        <element api="M:OOAdvantech.MetaDataRepository.Storage.RegisterComponent(System.String)" />
        <element api="M:OOAdvantech.MetaDataRepository.Storage.RegisterComponent(System.String[])" />
        <element api="M:OOAdvantech.MetaDataRepository.Storage.#ctor" />
        <element api="P:OOAdvantech.MetaDataRepository.Storage.Components" />
        <element api="P:OOAdvantech.MetaDataRepository.Storage.StorageLocation" />
        <element api="P:OOAdvantech.MetaDataRepository.Storage.StorageIdentity" />
        <element api="P:OOAdvantech.MetaDataRepository.Storage.StorageType" />
        <element api="P:OOAdvantech.MetaDataRepository.Storage.StorageName" />
        <element api="P:OOAdvantech.MetaDataRepository.Storage.Name" />
        <element api="F:OOAdvantech.MetaDataRepository.Namespace._OwnedElements" />
        <element api="M:OOAdvantech.MetaDataRepository.Namespace.BuildCaseInsensitiveNames" />
        <element api="M:OOAdvantech.MetaDataRepository.Namespace.MakeNameUnaryInNamesapce(OOAdvantech.MetaDataRepository.MetaObject)" />
        <element api="M:OOAdvantech.MetaDataRepository.Namespace.Synchronize(OOAdvantech.MetaDataRepository.MetaObject)" />
        <element api="M:OOAdvantech.MetaDataRepository.Namespace.GetExtensionMetaObjects" />
        <element api="M:OOAdvantech.MetaDataRepository.Namespace.AddOwnedElement(OOAdvantech.MetaDataRepository.MetaObject)" />
        <element api="M:OOAdvantech.MetaDataRepository.Namespace.RemoveOwnedElement(OOAdvantech.MetaDataRepository.MetaObject)" />
        <element api="M:OOAdvantech.MetaDataRepository.Namespace.ErrorCheck(System.Collections.ArrayList@)" />
        <element api="P:OOAdvantech.MetaDataRepository.Namespace.OwnedElements" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject._CaseInsensitiveName" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject._ImplementationUnit" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject.LockObject" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject.ReaderWriterLock" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject.Properties" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject._Name" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject.MetaObjectIDStream" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject._Identity" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject._ClientDependencies" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject._SupplierDependencies" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject._Namespace" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject.Visibility" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.MetaObjectChangeState" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.ShallowSynchronize(OOAdvantech.MetaDataRepository.MetaObject)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.AddDependency(System.String,OOAdvantech.MetaDataRepository.MetaObject)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.GetDynamicPropertiesAsXmlString" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.SetIdentity(OOAdvantech.MetaDataRepository.MetaObjectID)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.GetExtensionMetaObject(System.Type)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.SetNamespace(OOAdvantech.MetaDataRepository.Namespace)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.GetPropertyValue``1(System.String,System.String)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.GetPropertyValue(System.Type,System.String,System.String)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.PutPropertyValue(System.String,System.String,System.Object)" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.CaseInsensitiveName" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.ImplementationUnit" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.OQLName" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.FullName" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.OQLFullName" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.Identity" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.ClientDependencies" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.SupplierDependencies" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.Namespace" />
        <element api="E:OOAdvantech.MetaDataRepository.MetaObject.Changed" />
        <element api="M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="cloneIdentity">
              <type api="T:System.Boolean" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.MarshalByRefObject" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.MarshalByRefObject" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.MarshalByRefObject.GetLifetimeService">
          <apidata name="GetLifetimeService" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.MarshalByRefObject" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Security.Permissions.SecurityPermissionAttribute" ref="true" />
              <argument>
                <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
                <enumValue>
                  <field name="LinkDemand" />
                </enumValue>
              </argument>
              <assignment name="Flags">
                <type api="T:System.Security.Permissions.SecurityPermissionFlag" ref="false" />
                <enumValue>
                  <field name="Infrastructure" />
                </enumValue>
              </assignment>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.MarshalByRefObject.InitializeLifetimeService">
          <apidata name="InitializeLifetimeService" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.MarshalByRefObject" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Security.Permissions.SecurityPermissionAttribute" ref="true" />
              <argument>
                <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
                <enumValue>
                  <field name="LinkDemand" />
                </enumValue>
              </argument>
              <assignment name="Flags">
                <type api="T:System.Security.Permissions.SecurityPermissionFlag" ref="false" />
                <enumValue>
                  <field name="Infrastructure" />
                </enumValue>
              </assignment>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.MarshalByRefObject.CreateObjRef(System.Type)">
          <apidata name="CreateObjRef" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="requestedType">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Runtime.Remoting.ObjRef" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.MarshalByRefObject" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Security.Permissions.SecurityPermissionAttribute" ref="true" />
              <argument>
                <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
                <enumValue>
                  <field name="LinkDemand" />
                </enumValue>
              </argument>
              <assignment name="Flags">
                <type api="T:System.Security.Permissions.SecurityPermissionFlag" ref="false" />
                <enumValue>
                  <field name="Infrastructure" />
                </enumValue>
              </assignment>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.BackwardCompatibilityID" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>{1DBDACA8-E550-4A43-93D7-DC19675C7AD0}</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.Persistent" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.Storage.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Storage" ref="true" />
      </containers>
    </api>
    <api id="F:OOAdvantech.MetaDataRepository.Storage._Components">
      <apidata name="_Components" group="member" subgroup="field" />
      <memberdata visibility="family" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:OOAdvantech.Collections.Generic.Set`1" ref="true">
          <specialization>
            <type api="T:OOAdvantech.MetaDataRepository.Component" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Storage" ref="true" />
      </containers>
    </api>
    <api id="F:OOAdvantech.MetaDataRepository.Storage._StorageIdentity">
      <apidata name="_StorageIdentity" group="member" subgroup="field" />
      <memberdata visibility="family" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Storage" ref="true" />
      </containers>
    </api>
    <api id="F:OOAdvantech.MetaDataRepository.Storage._StorageLocation">
      <apidata name="_StorageLocation" group="member" subgroup="field" />
      <memberdata visibility="family" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Storage" ref="true" />
      </containers>
    </api>
    <api id="F:OOAdvantech.MetaDataRepository.Storage._StorageName">
      <apidata name="_StorageName" group="member" subgroup="field" />
      <memberdata visibility="family" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Storage" ref="true" />
      </containers>
    </api>
    <api id="F:OOAdvantech.MetaDataRepository.Storage._StorageType">
      <apidata name="_StorageType" group="member" subgroup="field" />
      <memberdata visibility="family" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Storage" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.PersistentMember" ref="true" />
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>255</value>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>_StorageIdentity</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.BackwardCompatibilityID" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>+32</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:OOAdvantech.MetaDataRepository.Storage.Components">
      <apidata name="Components" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Components" />
      <returns>
        <type api="T:OOAdvantech.Collections.Generic.Set`1" ref="true">
          <specialization>
            <type api="T:OOAdvantech.MetaDataRepository.Component" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Storage" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.PersistentMember" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>_Components</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.AssociationEndBehavior" ref="true" />
          <argument>
            <type api="T:OOAdvantech.MetaDataRepository.PersistencyFlag" ref="false" />
            <enumValue>
              <field name="OnConstruction" />
            </enumValue>
          </argument>
        </attribute>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.AssociationAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>StorageComponent</value>
          </argument>
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:OOAdvantech.MetaDataRepository.Component" ref="true" />
            </typeValue>
          </argument>
          <argument>
            <type api="T:OOAdvantech.MetaDataRepository.Roles" ref="false" />
            <enumValue>
              <field name="RoleA" />
            </enumValue>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>{32C3C895-BD31-4CB4-983A-3D342EF936E1}</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.RoleAMultiplicityRangeAttribute" ref="true" />
          <argument>
            <type api="T:System.UInt64" ref="false" />
            <value>1</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.RoleBMultiplicityRangeAttribute" ref="true" />
          <argument>
            <type api="T:System.UInt64" ref="false" />
            <value>0</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:OOAdvantech.MetaDataRepository.Storage.Name">
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:OOAdvantech.MetaDataRepository.MetaObject.Name">
          <type api="T:OOAdvantech.MetaDataRepository.MetaObject" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" set="true" />
      <getter name="get_Name" />
      <setter name="set_Name" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Storage" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.Storage.RegisterComponent(System.String)">
      <apidata name="RegisterComponent" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="assemblyFullName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:OOAdvantech.PersistenceLayer.Storage.RegisterComponent(System.String)">
          <type api="T:OOAdvantech.PersistenceLayer.Storage" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Storage" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.Storage.RegisterComponent(System.String[])">
      <apidata name="RegisterComponent" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="assembliesFullNames">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <implements>
        <member api="M:OOAdvantech.PersistenceLayer.Storage.RegisterComponent(System.String[])">
          <type api="T:OOAdvantech.PersistenceLayer.Storage" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Storage" ref="true" />
      </containers>
    </api>
    <api id="P:OOAdvantech.MetaDataRepository.Storage.StorageIdentity">
      <apidata name="StorageIdentity" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_StorageIdentity" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <implements>
        <member api="P:OOAdvantech.PersistenceLayer.Storage.StorageIdentity">
          <type api="T:OOAdvantech.PersistenceLayer.Storage" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Storage" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.BackwardCompatibilityID" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>+31</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.PersistentMember" ref="true" />
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>255</value>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>_StorageIdentity</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:OOAdvantech.MetaDataRepository.Storage.StorageLocation">
      <apidata name="StorageLocation" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" set="true" />
      <getter name="get_StorageLocation" />
      <setter name="set_StorageLocation" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <implements>
        <member api="P:OOAdvantech.PersistenceLayer.Storage.StorageLocation">
          <type api="T:OOAdvantech.PersistenceLayer.Storage" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Storage" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.BackwardCompatibilityID" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>+3</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.PersistentMember" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>_StorageLocation</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:OOAdvantech.MetaDataRepository.Storage.StorageName">
      <apidata name="StorageName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" set="true" />
      <getter name="get_StorageName" />
      <setter name="set_StorageName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <implements>
        <member api="P:OOAdvantech.PersistenceLayer.Storage.StorageName">
          <type api="T:OOAdvantech.PersistenceLayer.Storage" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Storage" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.BackwardCompatibilityID" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>+23</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.PersistentMember" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>_StorageName</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:OOAdvantech.MetaDataRepository.Storage.StorageType">
      <apidata name="StorageType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" set="true" />
      <getter name="get_StorageType" />
      <setter name="set_StorageType" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <implements>
        <member api="P:OOAdvantech.PersistenceLayer.Storage.StorageType">
          <type api="T:OOAdvantech.PersistenceLayer.Storage" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Storage" ref="true" />
      </containers>
    </api>
    <api id="T:OOAdvantech.MetaDataRepository.StorageCell">
      <apidata name="StorageCell" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:OOAdvantech.MetaDataRepository.MetaObject" ref="true" />
          <type api="T:System.MarshalByRefObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="F:OOAdvantech.MetaDataRepository.StorageCell._Type" />
        <element api="M:OOAdvantech.MetaDataRepository.StorageCell.GetLinkedStorageCells(OOAdvantech.MetaDataRepository.MetaObjectID,OOAdvantech.MetaDataRepository.Roles)" />
        <element api="M:OOAdvantech.MetaDataRepository.StorageCell.GetStorageConnectionData(System.String@,System.String@,System.String@)" />
        <element api="M:OOAdvantech.MetaDataRepository.StorageCell.#ctor" />
        <element api="P:OOAdvantech.MetaDataRepository.StorageCell.SerialNumber" />
        <element api="P:OOAdvantech.MetaDataRepository.StorageCell.AllObjectsInActiveMode" />
        <element api="P:OOAdvantech.MetaDataRepository.StorageCell.Type" />
        <element api="P:OOAdvantech.MetaDataRepository.StorageCell.StorageIntentity" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject._CaseInsensitiveName" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject._ImplementationUnit" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject.LockObject" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject.ReaderWriterLock" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject.Properties" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject._Name" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject.MetaObjectIDStream" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject._Identity" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject._ClientDependencies" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject._SupplierDependencies" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject._Namespace" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject.Visibility" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.MetaObjectChangeState" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.ShallowSynchronize(OOAdvantech.MetaDataRepository.MetaObject)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.AddDependency(System.String,OOAdvantech.MetaDataRepository.MetaObject)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.ErrorCheck(System.Collections.ArrayList@)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.GetDynamicPropertiesAsXmlString" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.SetIdentity(OOAdvantech.MetaDataRepository.MetaObjectID)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.Synchronize(OOAdvantech.MetaDataRepository.MetaObject)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.GetExtensionMetaObject(System.Type)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.GetExtensionMetaObjects" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.SetNamespace(OOAdvantech.MetaDataRepository.Namespace)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.GetPropertyValue``1(System.String,System.String)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.GetPropertyValue(System.Type,System.String,System.String)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.PutPropertyValue(System.String,System.String,System.Object)" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.CaseInsensitiveName" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.ImplementationUnit" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.OQLName" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.Name" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.FullName" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.OQLFullName" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.Identity" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.ClientDependencies" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.SupplierDependencies" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.Namespace" />
        <element api="E:OOAdvantech.MetaDataRepository.MetaObject.Changed" />
        <element api="M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="cloneIdentity">
              <type api="T:System.Boolean" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.MarshalByRefObject" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.MarshalByRefObject" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.MarshalByRefObject.GetLifetimeService">
          <apidata name="GetLifetimeService" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.MarshalByRefObject" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Security.Permissions.SecurityPermissionAttribute" ref="true" />
              <argument>
                <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
                <enumValue>
                  <field name="LinkDemand" />
                </enumValue>
              </argument>
              <assignment name="Flags">
                <type api="T:System.Security.Permissions.SecurityPermissionFlag" ref="false" />
                <enumValue>
                  <field name="Infrastructure" />
                </enumValue>
              </assignment>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.MarshalByRefObject.InitializeLifetimeService">
          <apidata name="InitializeLifetimeService" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.MarshalByRefObject" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Security.Permissions.SecurityPermissionAttribute" ref="true" />
              <argument>
                <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
                <enumValue>
                  <field name="LinkDemand" />
                </enumValue>
              </argument>
              <assignment name="Flags">
                <type api="T:System.Security.Permissions.SecurityPermissionFlag" ref="false" />
                <enumValue>
                  <field name="Infrastructure" />
                </enumValue>
              </assignment>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.MarshalByRefObject.CreateObjRef(System.Type)">
          <apidata name="CreateObjRef" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="requestedType">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Runtime.Remoting.ObjRef" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.MarshalByRefObject" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Security.Permissions.SecurityPermissionAttribute" ref="true" />
              <argument>
                <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
                <enumValue>
                  <field name="LinkDemand" />
                </enumValue>
              </argument>
              <assignment name="Flags">
                <type api="T:System.Security.Permissions.SecurityPermissionFlag" ref="false" />
                <enumValue>
                  <field name="Infrastructure" />
                </enumValue>
              </assignment>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.StorageCell.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.StorageCell" ref="true" />
      </containers>
    </api>
    <api id="F:OOAdvantech.MetaDataRepository.StorageCell._Type">
      <apidata name="_Type" group="member" subgroup="field" />
      <memberdata visibility="family" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:OOAdvantech.MetaDataRepository.Class" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.StorageCell" ref="true" />
      </containers>
    </api>
    <api id="P:OOAdvantech.MetaDataRepository.StorageCell.AllObjectsInActiveMode">
      <apidata name="AllObjectsInActiveMode" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_AllObjectsInActiveMode" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.StorageCell" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.StorageCell.GetLinkedStorageCells(OOAdvantech.MetaDataRepository.MetaObjectID,OOAdvantech.MetaDataRepository.Roles)">
      <apidata name="GetLinkedStorageCells" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="associationIdentity">
          <type api="T:OOAdvantech.MetaDataRepository.MetaObjectID" ref="true" />
        </parameter>
        <parameter name="linkedStorageCellsRole">
          <type api="T:OOAdvantech.MetaDataRepository.Roles" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:OOAdvantech.Collections.Generic.List`1" ref="true">
          <specialization>
            <type api="T:OOAdvantech.MetaDataRepository.StorageCell" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.StorageCell" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.StorageCell.GetStorageConnectionData(System.String@,System.String@,System.String@)">
      <apidata name="GetStorageConnectionData" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="storageName" out="true">
          <referenceTo>
            <type api="T:System.String" ref="true" />
          </referenceTo>
        </parameter>
        <parameter name="storageLocation" out="true">
          <referenceTo>
            <type api="T:System.String" ref="true" />
          </referenceTo>
        </parameter>
        <parameter name="storageProvider" out="true">
          <referenceTo>
            <type api="T:System.String" ref="true" />
          </referenceTo>
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.StorageCell" ref="true" />
      </containers>
    </api>
    <api id="P:OOAdvantech.MetaDataRepository.StorageCell.SerialNumber">
      <apidata name="SerialNumber" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_SerialNumber" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.StorageCell" ref="true" />
      </containers>
    </api>
    <api id="P:OOAdvantech.MetaDataRepository.StorageCell.StorageIntentity">
      <apidata name="StorageIntentity" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_StorageIntentity" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.StorageCell" ref="true" />
      </containers>
    </api>
    <api id="P:OOAdvantech.MetaDataRepository.StorageCell.Type">
      <apidata name="Type" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Type" />
      <setter name="set_Type" />
      <returns>
        <type api="T:OOAdvantech.MetaDataRepository.Class" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.StorageCell" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.AssociationAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>StoreObjectInCell</value>
          </argument>
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:OOAdvantech.MetaDataRepository.Class" ref="true" />
            </typeValue>
          </argument>
          <argument>
            <type api="T:OOAdvantech.MetaDataRepository.Roles" ref="false" />
            <enumValue>
              <field name="RoleB" />
            </enumValue>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>{E86388A2-3151-4935-BCF8-9A19CCFE6122}</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.AssociationEndBehavior" ref="true" />
          <argument>
            <type api="T:OOAdvantech.MetaDataRepository.PersistencyFlag" ref="false" />
            <enumValue>
              <field name="OnConstruction" />
            </enumValue>
          </argument>
        </attribute>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.RoleBMultiplicityRangeAttribute" ref="true" />
          <argument>
            <type api="T:System.UInt64" ref="false" />
            <value>1</value>
          </argument>
          <argument>
            <type api="T:System.UInt64" ref="false" />
            <value>1</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="T:OOAdvantech.MetaDataRepository.StorageCellsLink">
      <apidata name="StorageCellsLink" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:OOAdvantech.MetaDataRepository.MetaObject" ref="true" />
          <type api="T:System.MarshalByRefObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="F:OOAdvantech.MetaDataRepository.StorageCellsLink._Type" />
        <element api="F:OOAdvantech.MetaDataRepository.StorageCellsLink._AssotiationClassStorageCells" />
        <element api="M:OOAdvantech.MetaDataRepository.StorageCellsLink.#ctor" />
        <element api="M:OOAdvantech.MetaDataRepository.StorageCellsLink.#ctor(OOAdvantech.MetaDataRepository.Association,OOAdvantech.MetaDataRepository.StorageCell,OOAdvantech.MetaDataRepository.StorageCell)" />
        <element api="M:OOAdvantech.MetaDataRepository.StorageCellsLink.GetExtensionMetaObjects" />
        <element api="P:OOAdvantech.MetaDataRepository.StorageCellsLink.ValueTypePath" />
        <element api="P:OOAdvantech.MetaDataRepository.StorageCellsLink.Type" />
        <element api="P:OOAdvantech.MetaDataRepository.StorageCellsLink.RoleBStorageCell" />
        <element api="P:OOAdvantech.MetaDataRepository.StorageCellsLink.RoleAStorageCell" />
        <element api="P:OOAdvantech.MetaDataRepository.StorageCellsLink.AssotiationClassStorageCells" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject._CaseInsensitiveName" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject._ImplementationUnit" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject.LockObject" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject.ReaderWriterLock" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject.Properties" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject._Name" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject.MetaObjectIDStream" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject._Identity" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject._ClientDependencies" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject._SupplierDependencies" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject._Namespace" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject.Visibility" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.MetaObjectChangeState" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.ShallowSynchronize(OOAdvantech.MetaDataRepository.MetaObject)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.AddDependency(System.String,OOAdvantech.MetaDataRepository.MetaObject)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.ErrorCheck(System.Collections.ArrayList@)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.GetDynamicPropertiesAsXmlString" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.SetIdentity(OOAdvantech.MetaDataRepository.MetaObjectID)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.Synchronize(OOAdvantech.MetaDataRepository.MetaObject)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.GetExtensionMetaObject(System.Type)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.SetNamespace(OOAdvantech.MetaDataRepository.Namespace)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.GetPropertyValue``1(System.String,System.String)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.GetPropertyValue(System.Type,System.String,System.String)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.PutPropertyValue(System.String,System.String,System.Object)" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.CaseInsensitiveName" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.ImplementationUnit" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.OQLName" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.Name" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.FullName" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.OQLFullName" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.Identity" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.ClientDependencies" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.SupplierDependencies" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.Namespace" />
        <element api="E:OOAdvantech.MetaDataRepository.MetaObject.Changed" />
        <element api="M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="cloneIdentity">
              <type api="T:System.Boolean" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.MarshalByRefObject" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.MarshalByRefObject" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.MarshalByRefObject.GetLifetimeService">
          <apidata name="GetLifetimeService" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.MarshalByRefObject" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Security.Permissions.SecurityPermissionAttribute" ref="true" />
              <argument>
                <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
                <enumValue>
                  <field name="LinkDemand" />
                </enumValue>
              </argument>
              <assignment name="Flags">
                <type api="T:System.Security.Permissions.SecurityPermissionFlag" ref="false" />
                <enumValue>
                  <field name="Infrastructure" />
                </enumValue>
              </assignment>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.MarshalByRefObject.InitializeLifetimeService">
          <apidata name="InitializeLifetimeService" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.MarshalByRefObject" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Security.Permissions.SecurityPermissionAttribute" ref="true" />
              <argument>
                <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
                <enumValue>
                  <field name="LinkDemand" />
                </enumValue>
              </argument>
              <assignment name="Flags">
                <type api="T:System.Security.Permissions.SecurityPermissionFlag" ref="false" />
                <enumValue>
                  <field name="Infrastructure" />
                </enumValue>
              </assignment>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.MarshalByRefObject.CreateObjRef(System.Type)">
          <apidata name="CreateObjRef" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="requestedType">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Runtime.Remoting.ObjRef" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.MarshalByRefObject" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Security.Permissions.SecurityPermissionAttribute" ref="true" />
              <argument>
                <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
                <enumValue>
                  <field name="LinkDemand" />
                </enumValue>
              </argument>
              <assignment name="Flags">
                <type api="T:System.Security.Permissions.SecurityPermissionFlag" ref="false" />
                <enumValue>
                  <field name="Infrastructure" />
                </enumValue>
              </assignment>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.StorageCellsLink.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.StorageCellsLink" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.StorageCellsLink.#ctor(OOAdvantech.MetaDataRepository.Association,OOAdvantech.MetaDataRepository.StorageCell,OOAdvantech.MetaDataRepository.StorageCell)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="type">
          <type api="T:OOAdvantech.MetaDataRepository.Association" ref="true" />
        </parameter>
        <parameter name="roleAStorageCell">
          <type api="T:OOAdvantech.MetaDataRepository.StorageCell" ref="true" />
        </parameter>
        <parameter name="roleBStorageCell">
          <type api="T:OOAdvantech.MetaDataRepository.StorageCell" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.StorageCellsLink" ref="true" />
      </containers>
    </api>
    <api id="F:OOAdvantech.MetaDataRepository.StorageCellsLink._AssotiationClassStorageCells">
      <apidata name="_AssotiationClassStorageCells" group="member" subgroup="field" />
      <memberdata visibility="family" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:OOAdvantech.Collections.Generic.Set`1" ref="true">
          <specialization>
            <type api="T:OOAdvantech.MetaDataRepository.StorageCell" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.StorageCellsLink" ref="true" />
      </containers>
    </api>
    <api id="F:OOAdvantech.MetaDataRepository.StorageCellsLink._Type">
      <apidata name="_Type" group="member" subgroup="field" />
      <memberdata visibility="family" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:OOAdvantech.MetaDataRepository.Association" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.StorageCellsLink" ref="true" />
      </containers>
    </api>
    <api id="P:OOAdvantech.MetaDataRepository.StorageCellsLink.AssotiationClassStorageCells">
      <apidata name="AssotiationClassStorageCells" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_AssotiationClassStorageCells" />
      <returns>
        <type api="T:OOAdvantech.Collections.Generic.Set`1" ref="true">
          <specialization>
            <type api="T:OOAdvantech.MetaDataRepository.StorageCell" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.StorageCellsLink" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.RoleBMultiplicityRangeAttribute" ref="true" />
          <argument>
            <type api="T:System.UInt64" ref="false" />
            <value>0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.RoleAMultiplicityRangeAttribute" ref="true" />
          <argument>
            <type api="T:System.UInt64" ref="false" />
            <value>0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.AssociationAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>StorageCellLinkAssotiationClass</value>
          </argument>
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:OOAdvantech.MetaDataRepository.StorageCell" ref="true" />
            </typeValue>
          </argument>
          <argument>
            <type api="T:OOAdvantech.MetaDataRepository.Roles" ref="false" />
            <enumValue>
              <field name="RoleB" />
            </enumValue>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>{5C183C1D-BCD0-4BFA-92A3-40EB55B51C22}</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.PersistentMember" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>_AssotiationClassStorageCells</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.StorageCellsLink.GetExtensionMetaObjects">
      <apidata name="GetExtensionMetaObjects" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:OOAdvantech.MetaDataRepository.MetaObject.GetExtensionMetaObjects">
          <type api="T:OOAdvantech.MetaDataRepository.MetaObject" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Collections.ArrayList" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.StorageCellsLink" ref="true" />
      </containers>
    </api>
    <api id="P:OOAdvantech.MetaDataRepository.StorageCellsLink.RoleAStorageCell">
      <apidata name="RoleAStorageCell" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_RoleAStorageCell" />
      <returns>
        <type api="T:OOAdvantech.MetaDataRepository.StorageCell" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.StorageCellsLink" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.AssociationAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>RoleAStorageCell</value>
          </argument>
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:OOAdvantech.MetaDataRepository.StorageCell" ref="true" />
            </typeValue>
          </argument>
          <argument>
            <type api="T:OOAdvantech.MetaDataRepository.Roles" ref="false" />
            <enumValue>
              <field name="RoleB" />
            </enumValue>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>{25B36609-E774-4969-B9BB-BC113E859E61}</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.PersistentMember" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>_RoleAStorageCell</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.RoleAMultiplicityRangeAttribute" ref="true" />
          <argument>
            <type api="T:System.UInt64" ref="false" />
            <value>0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.AssociationEndBehavior" ref="true" />
          <argument>
            <type api="T:OOAdvantech.MetaDataRepository.PersistencyFlag" ref="false" />
            <enumValue>
              <field name="OnConstruction" />
            </enumValue>
          </argument>
        </attribute>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.RoleBMultiplicityRangeAttribute" ref="true" />
          <argument>
            <type api="T:System.UInt64" ref="false" />
            <value>1</value>
          </argument>
          <argument>
            <type api="T:System.UInt64" ref="false" />
            <value>1</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:OOAdvantech.MetaDataRepository.StorageCellsLink.RoleBStorageCell">
      <apidata name="RoleBStorageCell" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_RoleBStorageCell" />
      <returns>
        <type api="T:OOAdvantech.MetaDataRepository.StorageCell" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.StorageCellsLink" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.AssociationAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>RoleBStorageCell</value>
          </argument>
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:OOAdvantech.MetaDataRepository.StorageCell" ref="true" />
            </typeValue>
          </argument>
          <argument>
            <type api="T:OOAdvantech.MetaDataRepository.Roles" ref="false" />
            <enumValue>
              <field name="RoleB" />
            </enumValue>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>{BDE55936-1DA1-4D6A-B8A4-446BF1141003}</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.RoleAMultiplicityRangeAttribute" ref="true" />
          <argument>
            <type api="T:System.UInt64" ref="false" />
            <value>0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.RoleBMultiplicityRangeAttribute" ref="true" />
          <argument>
            <type api="T:System.UInt64" ref="false" />
            <value>1</value>
          </argument>
          <argument>
            <type api="T:System.UInt64" ref="false" />
            <value>1</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.AssociationEndBehavior" ref="true" />
          <argument>
            <type api="T:OOAdvantech.MetaDataRepository.PersistencyFlag" ref="false" />
            <enumValue>
              <field name="OnConstruction" />
            </enumValue>
          </argument>
        </attribute>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.PersistentMember" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>_RoleBStorageCell</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:OOAdvantech.MetaDataRepository.StorageCellsLink.Type">
      <apidata name="Type" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Type" />
      <returns>
        <type api="T:OOAdvantech.MetaDataRepository.Association" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.StorageCellsLink" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.AssociationAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>LinksInstanceTypeRelation</value>
          </argument>
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:OOAdvantech.MetaDataRepository.Association" ref="true" />
            </typeValue>
          </argument>
          <argument>
            <type api="T:OOAdvantech.MetaDataRepository.Roles" ref="false" />
            <enumValue>
              <field name="RoleB" />
            </enumValue>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>{E5C85CF2-{ECFC605B-F4AA-41B4-BD22-130AC73F5BEA}</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.RoleBMultiplicityRangeAttribute" ref="true" />
          <argument>
            <type api="T:System.UInt64" ref="false" />
            <value>1</value>
          </argument>
          <argument>
            <type api="T:System.UInt64" ref="false" />
            <value>1</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.AssociationEndBehavior" ref="true" />
          <argument>
            <type api="T:OOAdvantech.MetaDataRepository.PersistencyFlag" ref="false" />
            <enumValue>
              <field name="OnConstruction" />
            </enumValue>
          </argument>
        </attribute>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.PersistentMember" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>_Type</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:OOAdvantech.MetaDataRepository.StorageCellsLink.ValueTypePath">
      <apidata name="ValueTypePath" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ValueTypePath" />
      <setter name="set_ValueTypePath" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.StorageCellsLink" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.BackwardCompatibilityID" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>+4</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.PersistentMember" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>_ValueTypePath</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="T:OOAdvantech.MetaDataRepository.StructuralFeature">
      <apidata name="StructuralFeature" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:OOAdvantech.MetaDataRepository.Feature" ref="true" />
          <type api="T:OOAdvantech.MetaDataRepository.MetaObject" ref="true" />
          <type api="T:System.MarshalByRefObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:OOAdvantech.MetaDataRepository.AttributeRealization" ref="true" />
          <type api="T:OOAdvantech.MetaDataRepository.Attribute" ref="true" />
        </descendents>
      </family>
      <elements>
        <element api="F:OOAdvantech.MetaDataRepository.StructuralFeature._ParameterizedType" />
        <element api="F:OOAdvantech.MetaDataRepository.StructuralFeature._Type" />
        <element api="M:OOAdvantech.MetaDataRepository.StructuralFeature.#ctor(System.String,OOAdvantech.MetaDataRepository.Classifier)" />
        <element api="M:OOAdvantech.MetaDataRepository.StructuralFeature.#ctor" />
        <element api="P:OOAdvantech.MetaDataRepository.StructuralFeature.ParameterizedType" />
        <element api="P:OOAdvantech.MetaDataRepository.StructuralFeature.Type" />
        <element api="F:OOAdvantech.MetaDataRepository.Feature._IsStatic" />
        <element api="F:OOAdvantech.MetaDataRepository.Feature._Owner" />
        <element api="P:OOAdvantech.MetaDataRepository.Feature.IsStatic" />
        <element api="P:OOAdvantech.MetaDataRepository.Feature.Owner" />
        <element api="P:OOAdvantech.MetaDataRepository.Feature.ImplementationUnit" />
        <element api="P:OOAdvantech.MetaDataRepository.Feature.Namespace" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject._CaseInsensitiveName" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject._ImplementationUnit" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject.LockObject" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject.ReaderWriterLock" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject.Properties" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject._Name" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject.MetaObjectIDStream" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject._Identity" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject._ClientDependencies" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject._SupplierDependencies" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject._Namespace" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject.Visibility" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.MetaObjectChangeState" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.ShallowSynchronize(OOAdvantech.MetaDataRepository.MetaObject)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.AddDependency(System.String,OOAdvantech.MetaDataRepository.MetaObject)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.ErrorCheck(System.Collections.ArrayList@)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.GetDynamicPropertiesAsXmlString" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.SetIdentity(OOAdvantech.MetaDataRepository.MetaObjectID)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.Synchronize(OOAdvantech.MetaDataRepository.MetaObject)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.GetExtensionMetaObject(System.Type)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.GetExtensionMetaObjects" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.SetNamespace(OOAdvantech.MetaDataRepository.Namespace)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.GetPropertyValue``1(System.String,System.String)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.GetPropertyValue(System.Type,System.String,System.String)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.PutPropertyValue(System.String,System.String,System.Object)" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.CaseInsensitiveName" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.OQLName" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.Name" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.FullName" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.OQLFullName" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.Identity" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.ClientDependencies" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.SupplierDependencies" />
        <element api="E:OOAdvantech.MetaDataRepository.MetaObject.Changed" />
        <element api="M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="cloneIdentity">
              <type api="T:System.Boolean" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.MarshalByRefObject" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.MarshalByRefObject" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.MarshalByRefObject.GetLifetimeService">
          <apidata name="GetLifetimeService" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.MarshalByRefObject" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Security.Permissions.SecurityPermissionAttribute" ref="true" />
              <argument>
                <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
                <enumValue>
                  <field name="LinkDemand" />
                </enumValue>
              </argument>
              <assignment name="Flags">
                <type api="T:System.Security.Permissions.SecurityPermissionFlag" ref="false" />
                <enumValue>
                  <field name="Infrastructure" />
                </enumValue>
              </assignment>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.MarshalByRefObject.InitializeLifetimeService">
          <apidata name="InitializeLifetimeService" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.MarshalByRefObject" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Security.Permissions.SecurityPermissionAttribute" ref="true" />
              <argument>
                <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
                <enumValue>
                  <field name="LinkDemand" />
                </enumValue>
              </argument>
              <assignment name="Flags">
                <type api="T:System.Security.Permissions.SecurityPermissionFlag" ref="false" />
                <enumValue>
                  <field name="Infrastructure" />
                </enumValue>
              </assignment>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.MarshalByRefObject.CreateObjRef(System.Type)">
          <apidata name="CreateObjRef" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="requestedType">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Runtime.Remoting.ObjRef" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.MarshalByRefObject" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Security.Permissions.SecurityPermissionAttribute" ref="true" />
              <argument>
                <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
                <enumValue>
                  <field name="LinkDemand" />
                </enumValue>
              </argument>
              <assignment name="Flags">
                <type api="T:System.Security.Permissions.SecurityPermissionFlag" ref="false" />
                <enumValue>
                  <field name="Infrastructure" />
                </enumValue>
              </assignment>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.BackwardCompatibilityID" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>{820685EE-F385-46D7-8013-2E031C238C88}</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.Persistent" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.StructuralFeature.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.StructuralFeature" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.StructuralFeature.#ctor(System.String,OOAdvantech.MetaDataRepository.Classifier)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="type">
          <type api="T:OOAdvantech.MetaDataRepository.Classifier" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.StructuralFeature" ref="true" />
      </containers>
    </api>
    <api id="F:OOAdvantech.MetaDataRepository.StructuralFeature._ParameterizedType">
      <apidata name="_ParameterizedType" group="member" subgroup="field" />
      <memberdata visibility="family" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:OOAdvantech.MetaDataRepository.TemplateParameter" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.StructuralFeature" ref="true" />
      </containers>
    </api>
    <api id="F:OOAdvantech.MetaDataRepository.StructuralFeature._Type">
      <apidata name="_Type" group="member" subgroup="field" />
      <memberdata visibility="family" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:OOAdvantech.MetaDataRepository.Classifier" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.StructuralFeature" ref="true" />
      </containers>
    </api>
    <api id="P:OOAdvantech.MetaDataRepository.StructuralFeature.ParameterizedType">
      <apidata name="ParameterizedType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_ParameterizedType" />
      <setter name="set_ParameterizedType" />
      <returns>
        <type api="T:OOAdvantech.MetaDataRepository.TemplateParameter" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.StructuralFeature" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.RoleAMultiplicityRangeAttribute" ref="true" />
          <argument>
            <type api="T:System.UInt64" ref="false" />
            <value>0</value>
          </argument>
          <argument>
            <type api="T:System.UInt64" ref="false" />
            <value>1</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.RoleBMultiplicityRangeAttribute" ref="true" />
          <argument>
            <type api="T:System.UInt64" ref="false" />
            <value>0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.AssociationAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>StructuralParameterizedType</value>
          </argument>
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:OOAdvantech.MetaDataRepository.TemplateParameter" ref="true" />
            </typeValue>
          </argument>
          <argument>
            <type api="T:OOAdvantech.MetaDataRepository.Roles" ref="false" />
            <enumValue>
              <field name="RoleA" />
            </enumValue>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>{BB676FB0-4895-4650-95E7-114633763700}</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.PersistentMember" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>_ParameterizedType</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:OOAdvantech.MetaDataRepository.StructuralFeature.Type">
      <apidata name="Type" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Type" />
      <setter name="set_Type" />
      <returns>
        <type api="T:OOAdvantech.MetaDataRepository.Classifier" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.StructuralFeature" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.AssociationEndBehavior" ref="true" />
          <argument>
            <type api="T:OOAdvantech.MetaDataRepository.PersistencyFlag" ref="false" />
            <enumValue>
              <field name="OnConstruction" />
            </enumValue>
          </argument>
        </attribute>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.RoleAMultiplicityRangeAttribute" ref="true" />
          <argument>
            <type api="T:System.UInt64" ref="false" />
            <value>0</value>
          </argument>
          <argument>
            <type api="T:System.UInt64" ref="false" />
            <value>1</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.RoleBMultiplicityRangeAttribute" ref="true" />
          <argument>
            <type api="T:System.UInt64" ref="false" />
            <value>0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.AssociationAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>FeatureType</value>
          </argument>
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:OOAdvantech.MetaDataRepository.Classifier" ref="true" />
            </typeValue>
          </argument>
          <argument>
            <type api="T:OOAdvantech.MetaDataRepository.Roles" ref="false" />
            <enumValue>
              <field name="RoleA" />
            </enumValue>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>{FBB96C7F-C4EB-401C-B9A2-EF730EE21A8F}</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.PersistentMember" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>_Type</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="T:OOAdvantech.MetaDataRepository.Structure">
      <apidata name="Structure" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:OOAdvantech.MetaDataRepository.DataType" ref="true" />
          <type api="T:OOAdvantech.MetaDataRepository.Classifier" ref="true" />
          <type api="T:OOAdvantech.MetaDataRepository.Namespace" ref="true" />
          <type api="T:OOAdvantech.MetaDataRepository.MetaObject" ref="true" />
          <type api="T:System.MarshalByRefObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:OOAdvantech.MetaDataRepository.InterfaceImplementor" ref="true" />
      </implements>
      <elements>
        <element api="F:OOAdvantech.MetaDataRepository.Structure._Realizations" />
        <element api="F:OOAdvantech.MetaDataRepository.Structure._Persistent" />
        <element api="M:OOAdvantech.MetaDataRepository.Structure.AddMethod(OOAdvantech.MetaDataRepository.Operation)" />
        <element api="M:OOAdvantech.MetaDataRepository.Structure.AddAttributeRealization(OOAdvantech.MetaDataRepository.Attribute)" />
        <element api="M:OOAdvantech.MetaDataRepository.Structure.AddAssociationEndRealization(OOAdvantech.MetaDataRepository.AssociationEnd)" />
        <element api="M:OOAdvantech.MetaDataRepository.Structure.RemoveMethod(OOAdvantech.MetaDataRepository.Method)" />
        <element api="M:OOAdvantech.MetaDataRepository.Structure.RemoveAttributeRealization(OOAdvantech.MetaDataRepository.AttributeRealization)" />
        <element api="M:OOAdvantech.MetaDataRepository.Structure.RemoveAssociationEndRealization(OOAdvantech.MetaDataRepository.AssociationEndRealization)" />
        <element api="M:OOAdvantech.MetaDataRepository.Structure.IsPersistent(OOAdvantech.MetaDataRepository.Attribute)" />
        <element api="M:OOAdvantech.MetaDataRepository.Structure.GetAttributeRealization(OOAdvantech.MetaDataRepository.Attribute)" />
        <element api="M:OOAdvantech.MetaDataRepository.Structure.Synchronize(OOAdvantech.MetaDataRepository.MetaObject)" />
        <element api="M:OOAdvantech.MetaDataRepository.Structure.AddRealizeRel(System.String,OOAdvantech.MetaDataRepository.Interface)" />
        <element api="M:OOAdvantech.MetaDataRepository.Structure.RemoveRealizeRel(OOAdvantech.MetaDataRepository.Realization)" />
        <element api="M:OOAdvantech.MetaDataRepository.Structure.GetAllInterfaces" />
        <element api="M:OOAdvantech.MetaDataRepository.Structure.GetInterfaces" />
        <element api="M:OOAdvantech.MetaDataRepository.Structure.#ctor" />
        <element api="P:OOAdvantech.MetaDataRepository.Structure.Realizations" />
        <element api="P:OOAdvantech.MetaDataRepository.Structure.Persistent" />
        <element api="F:OOAdvantech.MetaDataRepository.Classifier._TemplateBinding" />
        <element api="F:OOAdvantech.MetaDataRepository.Classifier._LinkAssociation" />
        <element api="F:OOAdvantech.MetaDataRepository.Classifier.ClassifierHierarchyClassifiers" />
        <element api="F:OOAdvantech.MetaDataRepository.Classifier._Generalizations" />
        <element api="F:OOAdvantech.MetaDataRepository.Classifier._OwnedTemplateSignature" />
        <element api="F:OOAdvantech.MetaDataRepository.Classifier.ClassHierarchyAssociateRoles" />
        <element api="F:OOAdvantech.MetaDataRepository.Classifier.ClassHierarchyRoles" />
        <element api="F:OOAdvantech.MetaDataRepository.Classifier.ClassHierarchyAttributes" />
        <element api="F:OOAdvantech.MetaDataRepository.Classifier._Specializations" />
        <element api="F:OOAdvantech.MetaDataRepository.Classifier._Roles" />
        <element api="F:OOAdvantech.MetaDataRepository.Classifier._Features" />
        <element api="M:OOAdvantech.MetaDataRepository.Classifier.GetExtensionMetaObject(System.Type)" />
        <element api="M:OOAdvantech.MetaDataRepository.Classifier.ToString" />
        <element api="M:OOAdvantech.MetaDataRepository.Classifier.GetAllSpecializeClasifiers" />
        <element api="M:OOAdvantech.MetaDataRepository.Classifier.BuildCaseInsensitiveNames" />
        <element api="M:OOAdvantech.MetaDataRepository.Classifier.ErrorCheck(System.Collections.ArrayList@)" />
        <element api="M:OOAdvantech.MetaDataRepository.Classifier.IsA(OOAdvantech.MetaDataRepository.Classifier)" />
        <element api="M:OOAdvantech.MetaDataRepository.Classifier.RemoveAssociation(OOAdvantech.MetaDataRepository.Association)" />
        <element api="M:OOAdvantech.MetaDataRepository.Classifier.GetGeneralClasifiers" />
        <element api="M:OOAdvantech.MetaDataRepository.Classifier.RefreshClassHierarchyCollections" />
        <element api="M:OOAdvantech.MetaDataRepository.Classifier.RemoveAttribute(OOAdvantech.MetaDataRepository.Attribute)" />
        <element api="M:OOAdvantech.MetaDataRepository.Classifier.GetAllGeneralClasifiers" />
        <element api="M:OOAdvantech.MetaDataRepository.Classifier.RemoveOperation(OOAdvantech.MetaDataRepository.Operation)" />
        <element api="M:OOAdvantech.MetaDataRepository.Classifier.GetAssignedComponents" />
        <element api="M:OOAdvantech.MetaDataRepository.Classifier.GetSpecializedClasifiers" />
        <element api="M:OOAdvantech.MetaDataRepository.Classifier.AddAssociation(System.String,OOAdvantech.MetaDataRepository.Roles,OOAdvantech.MetaDataRepository.Classifier,System.String)" />
        <element api="M:OOAdvantech.MetaDataRepository.Classifier.AddAttribute(System.String,OOAdvantech.MetaDataRepository.Classifier,System.String)" />
        <element api="M:OOAdvantech.MetaDataRepository.Classifier.AddOperation(System.String,OOAdvantech.MetaDataRepository.Classifier)" />
        <element api="M:OOAdvantech.MetaDataRepository.Classifier.GetAssociateRoles(System.Boolean)" />
        <element api="M:OOAdvantech.MetaDataRepository.Classifier.RemoveGeneralization(OOAdvantech.MetaDataRepository.Generalization)" />
        <element api="M:OOAdvantech.MetaDataRepository.Classifier.AddGeneralization(System.String,OOAdvantech.MetaDataRepository.Classifier)" />
        <element api="M:OOAdvantech.MetaDataRepository.Classifier.AddRole(OOAdvantech.MetaDataRepository.AssociationEnd)" />
        <element api="M:OOAdvantech.MetaDataRepository.Classifier.RemoveRole(OOAdvantech.MetaDataRepository.AssociationEnd)" />
        <element api="M:OOAdvantech.MetaDataRepository.Classifier.GetOperations(System.Boolean)" />
        <element api="M:OOAdvantech.MetaDataRepository.Classifier.GetOperations(System.String)" />
        <element api="M:OOAdvantech.MetaDataRepository.Classifier.GetOperations(System.String,System.Boolean)" />
        <element api="M:OOAdvantech.MetaDataRepository.Classifier.GetRoles(System.Boolean)" />
        <element api="M:OOAdvantech.MetaDataRepository.Classifier.GetRealizedAttributes" />
        <element api="M:OOAdvantech.MetaDataRepository.Classifier.GetAttributes(System.Boolean)" />
        <element api="M:OOAdvantech.MetaDataRepository.Classifier.GetOperation(System.String,System.String[],System.Boolean)" />
        <element api="M:OOAdvantech.MetaDataRepository.Classifier.GetRole(System.String)" />
        <element api="M:OOAdvantech.MetaDataRepository.Classifier.GetFeature(System.String,System.Boolean)" />
        <element api="P:OOAdvantech.MetaDataRepository.Classifier.IsTemplate" />
        <element api="P:OOAdvantech.MetaDataRepository.Classifier.IsTemplateInstantiation" />
        <element api="P:OOAdvantech.MetaDataRepository.Classifier.Constractors" />
        <element api="P:OOAdvantech.MetaDataRepository.Classifier.TemplateBinding" />
        <element api="P:OOAdvantech.MetaDataRepository.Classifier.LinkAssociation" />
        <element api="P:OOAdvantech.MetaDataRepository.Classifier.Generalizations" />
        <element api="P:OOAdvantech.MetaDataRepository.Classifier.StorageCellsOfThisType" />
        <element api="P:OOAdvantech.MetaDataRepository.Classifier.IsBindedClassifier" />
        <element api="P:OOAdvantech.MetaDataRepository.Classifier.ContainsTemplateParameter" />
        <element api="P:OOAdvantech.MetaDataRepository.Classifier.OwnedTemplateSignature" />
        <element api="P:OOAdvantech.MetaDataRepository.Classifier.ClassHierarchyLinkAssociation" />
        <element api="P:OOAdvantech.MetaDataRepository.Classifier.Specializations" />
        <element api="P:OOAdvantech.MetaDataRepository.Classifier.Roles" />
        <element api="P:OOAdvantech.MetaDataRepository.Classifier.Features" />
        <element api="F:OOAdvantech.MetaDataRepository.Namespace._OwnedElements" />
        <element api="M:OOAdvantech.MetaDataRepository.Namespace.MakeNameUnaryInNamesapce(OOAdvantech.MetaDataRepository.MetaObject)" />
        <element api="M:OOAdvantech.MetaDataRepository.Namespace.GetExtensionMetaObjects" />
        <element api="M:OOAdvantech.MetaDataRepository.Namespace.AddOwnedElement(OOAdvantech.MetaDataRepository.MetaObject)" />
        <element api="M:OOAdvantech.MetaDataRepository.Namespace.RemoveOwnedElement(OOAdvantech.MetaDataRepository.MetaObject)" />
        <element api="P:OOAdvantech.MetaDataRepository.Namespace.OwnedElements" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject._CaseInsensitiveName" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject._ImplementationUnit" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject.LockObject" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject.ReaderWriterLock" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject.Properties" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject._Name" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject.MetaObjectIDStream" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject._Identity" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject._ClientDependencies" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject._SupplierDependencies" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject._Namespace" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject.Visibility" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.MetaObjectChangeState" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.ShallowSynchronize(OOAdvantech.MetaDataRepository.MetaObject)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.AddDependency(System.String,OOAdvantech.MetaDataRepository.MetaObject)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.GetDynamicPropertiesAsXmlString" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.SetIdentity(OOAdvantech.MetaDataRepository.MetaObjectID)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.SetNamespace(OOAdvantech.MetaDataRepository.Namespace)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.GetPropertyValue``1(System.String,System.String)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.GetPropertyValue(System.Type,System.String,System.String)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.PutPropertyValue(System.String,System.String,System.Object)" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.CaseInsensitiveName" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.ImplementationUnit" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.OQLName" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.Name" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.FullName" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.OQLFullName" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.Identity" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.ClientDependencies" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.SupplierDependencies" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.Namespace" />
        <element api="E:OOAdvantech.MetaDataRepository.MetaObject.Changed" />
        <element api="M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="cloneIdentity">
              <type api="T:System.Boolean" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.MarshalByRefObject" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.MarshalByRefObject" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.MarshalByRefObject.GetLifetimeService">
          <apidata name="GetLifetimeService" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.MarshalByRefObject" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Security.Permissions.SecurityPermissionAttribute" ref="true" />
              <argument>
                <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
                <enumValue>
                  <field name="LinkDemand" />
                </enumValue>
              </argument>
              <assignment name="Flags">
                <type api="T:System.Security.Permissions.SecurityPermissionFlag" ref="false" />
                <enumValue>
                  <field name="Infrastructure" />
                </enumValue>
              </assignment>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.MarshalByRefObject.InitializeLifetimeService">
          <apidata name="InitializeLifetimeService" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.MarshalByRefObject" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Security.Permissions.SecurityPermissionAttribute" ref="true" />
              <argument>
                <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
                <enumValue>
                  <field name="LinkDemand" />
                </enumValue>
              </argument>
              <assignment name="Flags">
                <type api="T:System.Security.Permissions.SecurityPermissionFlag" ref="false" />
                <enumValue>
                  <field name="Infrastructure" />
                </enumValue>
              </assignment>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.MarshalByRefObject.CreateObjRef(System.Type)">
          <apidata name="CreateObjRef" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="requestedType">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Runtime.Remoting.ObjRef" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.MarshalByRefObject" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Security.Permissions.SecurityPermissionAttribute" ref="true" />
              <argument>
                <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
                <enumValue>
                  <field name="LinkDemand" />
                </enumValue>
              </argument>
              <assignment name="Flags">
                <type api="T:System.Security.Permissions.SecurityPermissionFlag" ref="false" />
                <enumValue>
                  <field name="Infrastructure" />
                </enumValue>
              </assignment>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.Structure.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Structure" ref="true" />
      </containers>
    </api>
    <api id="F:OOAdvantech.MetaDataRepository.Structure._Persistent">
      <apidata name="_Persistent" group="member" subgroup="field" />
      <memberdata visibility="family" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Structure" ref="true" />
      </containers>
    </api>
    <api id="F:OOAdvantech.MetaDataRepository.Structure._Realizations">
      <apidata name="_Realizations" group="member" subgroup="field" />
      <memberdata visibility="family" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:OOAdvantech.Collections.Generic.Set`1" ref="true">
          <specialization>
            <type api="T:OOAdvantech.MetaDataRepository.Realization" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Structure" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.Structure.AddAssociationEndRealization(OOAdvantech.MetaDataRepository.AssociationEnd)">
      <apidata name="AddAssociationEndRealization" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="specification">
          <type api="T:OOAdvantech.MetaDataRepository.AssociationEnd" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:OOAdvantech.MetaDataRepository.AssociationEndRealization" ref="true" />
      </returns>
      <implements>
        <member api="M:OOAdvantech.MetaDataRepository.InterfaceImplementor.AddAssociationEndRealization(OOAdvantech.MetaDataRepository.AssociationEnd)">
          <type api="T:OOAdvantech.MetaDataRepository.InterfaceImplementor" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Structure" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.Structure.AddAttributeRealization(OOAdvantech.MetaDataRepository.Attribute)">
      <apidata name="AddAttributeRealization" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="specification">
          <type api="T:OOAdvantech.MetaDataRepository.Attribute" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:OOAdvantech.MetaDataRepository.AttributeRealization" ref="true" />
      </returns>
      <implements>
        <member api="M:OOAdvantech.MetaDataRepository.InterfaceImplementor.AddAttributeRealization(OOAdvantech.MetaDataRepository.Attribute)">
          <type api="T:OOAdvantech.MetaDataRepository.InterfaceImplementor" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Structure" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.Structure.AddMethod(OOAdvantech.MetaDataRepository.Operation)">
      <apidata name="AddMethod" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="specification">
          <type api="T:OOAdvantech.MetaDataRepository.Operation" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:OOAdvantech.MetaDataRepository.Method" ref="true" />
      </returns>
      <implements>
        <member api="M:OOAdvantech.MetaDataRepository.InterfaceImplementor.AddMethod(OOAdvantech.MetaDataRepository.Operation)">
          <type api="T:OOAdvantech.MetaDataRepository.InterfaceImplementor" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Structure" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.Structure.AddRealizeRel(System.String,OOAdvantech.MetaDataRepository.Interface)">
      <apidata name="AddRealizeRel" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="relationName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="_interface">
          <type api="T:OOAdvantech.MetaDataRepository.Interface" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:OOAdvantech.MetaDataRepository.Realization" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Structure" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.Structure.GetAllInterfaces">
      <apidata name="GetAllInterfaces" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:OOAdvantech.Collections.Generic.Set`1" ref="true">
          <specialization>
            <type api="T:OOAdvantech.MetaDataRepository.Interface" ref="true" />
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="M:OOAdvantech.MetaDataRepository.InterfaceImplementor.GetAllInterfaces">
          <type api="T:OOAdvantech.MetaDataRepository.InterfaceImplementor" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Structure" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.Structure.GetAttributeRealization(OOAdvantech.MetaDataRepository.Attribute)">
      <apidata name="GetAttributeRealization" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="attribute">
          <type api="T:OOAdvantech.MetaDataRepository.Attribute" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:OOAdvantech.MetaDataRepository.AttributeRealization" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Structure" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.Structure.GetInterfaces">
      <apidata name="GetInterfaces" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:OOAdvantech.Collections.Generic.Set`1" ref="true">
          <specialization>
            <type api="T:OOAdvantech.MetaDataRepository.Interface" ref="true" />
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="M:OOAdvantech.MetaDataRepository.InterfaceImplementor.GetInterfaces">
          <type api="T:OOAdvantech.MetaDataRepository.InterfaceImplementor" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Structure" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.Structure.IsPersistent(OOAdvantech.MetaDataRepository.Attribute)">
      <apidata name="IsPersistent" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="attribute">
          <type api="T:OOAdvantech.MetaDataRepository.Attribute" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Structure" ref="true" />
      </containers>
    </api>
    <api id="P:OOAdvantech.MetaDataRepository.Structure.Persistent">
      <apidata name="Persistent" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Persistent" />
      <setter name="set_Persistent" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Structure" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.BackwardCompatibilityID" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>+12</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.PersistentMember" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>_Persistent</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:OOAdvantech.MetaDataRepository.Structure.Realizations">
      <apidata name="Realizations" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_Realizations" />
      <returns>
        <type api="T:OOAdvantech.Collections.Generic.Set`1" ref="true">
          <specialization>
            <type api="T:OOAdvantech.MetaDataRepository.Realization" ref="true" />
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="P:OOAdvantech.MetaDataRepository.InterfaceImplementor.Realizations">
          <type api="T:OOAdvantech.MetaDataRepository.InterfaceImplementor" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Structure" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.PersistentMember" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>_Realizations</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.BackwardCompatibilityID" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>+1</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.Structure.RemoveAssociationEndRealization(OOAdvantech.MetaDataRepository.AssociationEndRealization)">
      <apidata name="RemoveAssociationEndRealization" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="associationEndRealization">
          <type api="T:OOAdvantech.MetaDataRepository.AssociationEndRealization" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:OOAdvantech.MetaDataRepository.InterfaceImplementor.RemoveAssociationEndRealization(OOAdvantech.MetaDataRepository.AssociationEndRealization)">
          <type api="T:OOAdvantech.MetaDataRepository.InterfaceImplementor" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Structure" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.Structure.RemoveAttributeRealization(OOAdvantech.MetaDataRepository.AttributeRealization)">
      <apidata name="RemoveAttributeRealization" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="attributeRealization">
          <type api="T:OOAdvantech.MetaDataRepository.AttributeRealization" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:OOAdvantech.MetaDataRepository.InterfaceImplementor.RemoveAttributeRealization(OOAdvantech.MetaDataRepository.AttributeRealization)">
          <type api="T:OOAdvantech.MetaDataRepository.InterfaceImplementor" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Structure" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.Structure.RemoveMethod(OOAdvantech.MetaDataRepository.Method)">
      <apidata name="RemoveMethod" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="method">
          <type api="T:OOAdvantech.MetaDataRepository.Method" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:OOAdvantech.MetaDataRepository.InterfaceImplementor.RemoveMethod(OOAdvantech.MetaDataRepository.Method)">
          <type api="T:OOAdvantech.MetaDataRepository.InterfaceImplementor" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Structure" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.Structure.RemoveRealizeRel(OOAdvantech.MetaDataRepository.Realization)">
      <apidata name="RemoveRealizeRel" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="realizeRel">
          <type api="T:OOAdvantech.MetaDataRepository.Realization" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Structure" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.Structure.Synchronize(OOAdvantech.MetaDataRepository.MetaObject)">
      <apidata name="Synchronize" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:OOAdvantech.MetaDataRepository.Classifier.Synchronize(OOAdvantech.MetaDataRepository.MetaObject)">
          <type api="T:OOAdvantech.MetaDataRepository.Classifier" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="OriginMetaObject">
          <type api="T:OOAdvantech.MetaDataRepository.MetaObject" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.Structure" ref="true" />
      </containers>
    </api>
    <api id="T:OOAdvantech.MetaDataRepository.SynchronizerSession">
      <apidata name="SynchronizerSession" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="F:OOAdvantech.MetaDataRepository.SynchronizerSession.ErrorLog" />
        <element api="M:OOAdvantech.MetaDataRepository.SynchronizerSession.StartSynchronize" />
        <element api="M:OOAdvantech.MetaDataRepository.SynchronizerSession.MetaObjectUnderSynchronization(OOAdvantech.MetaDataRepository.MetaObject)" />
        <element api="M:OOAdvantech.MetaDataRepository.SynchronizerSession.IsSynchronized(OOAdvantech.MetaDataRepository.MetaObject)" />
        <element api="M:OOAdvantech.MetaDataRepository.SynchronizerSession.StopSynchronize" />
        <element api="M:OOAdvantech.MetaDataRepository.SynchronizerSession.#ctor" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.SynchronizerSession.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.SynchronizerSession" ref="true" />
      </containers>
    </api>
    <api id="F:OOAdvantech.MetaDataRepository.SynchronizerSession.ErrorLog">
      <apidata name="ErrorLog" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:OOAdvantech.MetaDataRepository.IErrorLog" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.SynchronizerSession" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.SynchronizerSession.IsSynchronized(OOAdvantech.MetaDataRepository.MetaObject)">
      <apidata name="IsSynchronized" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="theMetaObject">
          <type api="T:OOAdvantech.MetaDataRepository.MetaObject" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.SynchronizerSession" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.SynchronizerSession.MetaObjectUnderSynchronization(OOAdvantech.MetaDataRepository.MetaObject)">
      <apidata name="MetaObjectUnderSynchronization" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="theMetaObject">
          <type api="T:OOAdvantech.MetaDataRepository.MetaObject" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.SynchronizerSession" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.SynchronizerSession.StartSynchronize">
      <apidata name="StartSynchronize" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.SynchronizerSession" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.SynchronizerSession.StopSynchronize">
      <apidata name="StopSynchronize" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.SynchronizerSession" ref="true" />
      </containers>
    </api>
    <api id="T:OOAdvantech.MetaDataRepository.TemplateBinding">
      <apidata name="TemplateBinding" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:OOAdvantech.MetaDataRepository.Dependency" ref="true" />
          <type api="T:OOAdvantech.MetaDataRepository.Relationship" ref="true" />
          <type api="T:OOAdvantech.MetaDataRepository.MetaObject" ref="true" />
          <type api="T:System.MarshalByRefObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:OOAdvantech.MetaDataRepository.TemplateBinding.#ctor(OOAdvantech.MetaDataRepository.ITemplateable,OOAdvantech.Collections.Generic.List{OOAdvantech.MetaDataRepository.IParameterableElement})" />
        <element api="M:OOAdvantech.MetaDataRepository.TemplateBinding.AddParameterSubstitution(OOAdvantech.MetaDataRepository.TemplateParameterSubstitution)" />
        <element api="M:OOAdvantech.MetaDataRepository.TemplateBinding.RemoveParameterSubstitution(OOAdvantech.MetaDataRepository.TemplateParameterSubstitution)" />
        <element api="M:OOAdvantech.MetaDataRepository.TemplateBinding.GetActualParameterFor(System.String)" />
        <element api="M:OOAdvantech.MetaDataRepository.TemplateBinding.GetActualParameterFor(OOAdvantech.MetaDataRepository.TemplateParameter)" />
        <element api="M:OOAdvantech.MetaDataRepository.TemplateBinding.GetIntermediateParameterFor(OOAdvantech.MetaDataRepository.TemplateParameter)" />
        <element api="P:OOAdvantech.MetaDataRepository.TemplateBinding.Signature" />
        <element api="P:OOAdvantech.MetaDataRepository.TemplateBinding.ParameterSubstitutions" />
        <element api="P:OOAdvantech.MetaDataRepository.TemplateBinding.BoundElement" />
        <element api="F:OOAdvantech.MetaDataRepository.Dependency._Client" />
        <element api="F:OOAdvantech.MetaDataRepository.Dependency._Supplier" />
        <element api="M:OOAdvantech.MetaDataRepository.Dependency.Synchronize(OOAdvantech.MetaDataRepository.MetaObject)" />
        <element api="M:OOAdvantech.MetaDataRepository.Dependency.GetExtensionMetaObjects" />
        <element api="P:OOAdvantech.MetaDataRepository.Dependency.Identity" />
        <element api="P:OOAdvantech.MetaDataRepository.Dependency.Client" />
        <element api="P:OOAdvantech.MetaDataRepository.Dependency.Supplier" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject._CaseInsensitiveName" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject._ImplementationUnit" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject.LockObject" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject.ReaderWriterLock" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject.Properties" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject._Name" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject.MetaObjectIDStream" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject._Identity" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject._ClientDependencies" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject._SupplierDependencies" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject._Namespace" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject.Visibility" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.MetaObjectChangeState" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.ShallowSynchronize(OOAdvantech.MetaDataRepository.MetaObject)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.AddDependency(System.String,OOAdvantech.MetaDataRepository.MetaObject)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.ErrorCheck(System.Collections.ArrayList@)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.GetDynamicPropertiesAsXmlString" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.SetIdentity(OOAdvantech.MetaDataRepository.MetaObjectID)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.GetExtensionMetaObject(System.Type)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.SetNamespace(OOAdvantech.MetaDataRepository.Namespace)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.GetPropertyValue``1(System.String,System.String)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.GetPropertyValue(System.Type,System.String,System.String)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.PutPropertyValue(System.String,System.String,System.Object)" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.CaseInsensitiveName" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.ImplementationUnit" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.OQLName" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.Name" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.FullName" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.OQLFullName" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.ClientDependencies" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.SupplierDependencies" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.Namespace" />
        <element api="E:OOAdvantech.MetaDataRepository.MetaObject.Changed" />
        <element api="M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="cloneIdentity">
              <type api="T:System.Boolean" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.MarshalByRefObject" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.MarshalByRefObject" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.MarshalByRefObject.GetLifetimeService">
          <apidata name="GetLifetimeService" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.MarshalByRefObject" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Security.Permissions.SecurityPermissionAttribute" ref="true" />
              <argument>
                <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
                <enumValue>
                  <field name="LinkDemand" />
                </enumValue>
              </argument>
              <assignment name="Flags">
                <type api="T:System.Security.Permissions.SecurityPermissionFlag" ref="false" />
                <enumValue>
                  <field name="Infrastructure" />
                </enumValue>
              </assignment>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.MarshalByRefObject.InitializeLifetimeService">
          <apidata name="InitializeLifetimeService" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.MarshalByRefObject" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Security.Permissions.SecurityPermissionAttribute" ref="true" />
              <argument>
                <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
                <enumValue>
                  <field name="LinkDemand" />
                </enumValue>
              </argument>
              <assignment name="Flags">
                <type api="T:System.Security.Permissions.SecurityPermissionFlag" ref="false" />
                <enumValue>
                  <field name="Infrastructure" />
                </enumValue>
              </assignment>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.MarshalByRefObject.CreateObjRef(System.Type)">
          <apidata name="CreateObjRef" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="requestedType">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Runtime.Remoting.ObjRef" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.MarshalByRefObject" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Security.Permissions.SecurityPermissionAttribute" ref="true" />
              <argument>
                <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
                <enumValue>
                  <field name="LinkDemand" />
                </enumValue>
              </argument>
              <assignment name="Flags">
                <type api="T:System.Security.Permissions.SecurityPermissionFlag" ref="false" />
                <enumValue>
                  <field name="Infrastructure" />
                </enumValue>
              </assignment>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.TemplateBinding.#ctor(OOAdvantech.MetaDataRepository.ITemplateable,OOAdvantech.Collections.Generic.List{OOAdvantech.MetaDataRepository.IParameterableElement})">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="template">
          <type api="T:OOAdvantech.MetaDataRepository.ITemplateable" ref="true" />
        </parameter>
        <parameter name="parameterSubstitutions">
          <type api="T:OOAdvantech.Collections.Generic.List`1" ref="true">
            <specialization>
              <type api="T:OOAdvantech.MetaDataRepository.IParameterableElement" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.TemplateBinding" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.TemplateBinding.AddParameterSubstitution(OOAdvantech.MetaDataRepository.TemplateParameterSubstitution)">
      <apidata name="AddParameterSubstitution" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="parameterSubstitution">
          <type api="T:OOAdvantech.MetaDataRepository.TemplateParameterSubstitution" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.TemplateBinding" ref="true" />
      </containers>
    </api>
    <api id="P:OOAdvantech.MetaDataRepository.TemplateBinding.BoundElement">
      <apidata name="BoundElement" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_BoundElement" />
      <setter name="set_BoundElement" />
      <returns>
        <type api="T:OOAdvantech.MetaDataRepository.ITemplateable" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.TemplateBinding" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.AssociationAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>BindTamplate</value>
          </argument>
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:OOAdvantech.MetaDataRepository.ITemplateable" ref="true" />
            </typeValue>
          </argument>
          <argument>
            <type api="T:OOAdvantech.MetaDataRepository.Roles" ref="false" />
            <enumValue>
              <field name="RoleA" />
            </enumValue>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>{0C4399F4-36AF-45E4-AF09-41C6A7CA4EFB}</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.PersistentMember" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>_BoundElement</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.RoleAMultiplicityRangeAttribute" ref="true" />
          <argument>
            <type api="T:System.UInt64" ref="false" />
            <value>1</value>
          </argument>
          <argument>
            <type api="T:System.UInt64" ref="false" />
            <value>1</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.TemplateBinding.GetActualParameterFor(OOAdvantech.MetaDataRepository.TemplateParameter)">
      <apidata name="GetActualParameterFor" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="templateParameter">
          <type api="T:OOAdvantech.MetaDataRepository.TemplateParameter" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:OOAdvantech.MetaDataRepository.IParameterableElement" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.TemplateBinding" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.TemplateBinding.GetActualParameterFor(System.String)">
      <apidata name="GetActualParameterFor" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="templateParameterName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:OOAdvantech.MetaDataRepository.IParameterableElement" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.TemplateBinding" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.TemplateBinding.GetIntermediateParameterFor(OOAdvantech.MetaDataRepository.TemplateParameter)">
      <apidata name="GetIntermediateParameterFor" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="templateParameter">
          <type api="T:OOAdvantech.MetaDataRepository.TemplateParameter" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:OOAdvantech.MetaDataRepository.TemplateParameter" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.TemplateBinding" ref="true" />
      </containers>
    </api>
    <api id="P:OOAdvantech.MetaDataRepository.TemplateBinding.ParameterSubstitutions">
      <apidata name="ParameterSubstitutions" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ParameterSubstitutions" />
      <returns>
        <type api="T:OOAdvantech.Collections.Generic.Set`1" ref="true">
          <specialization>
            <type api="T:OOAdvantech.MetaDataRepository.TemplateParameterSubstitution" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.TemplateBinding" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.AssociationAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>BindParameter</value>
          </argument>
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:OOAdvantech.MetaDataRepository.TemplateParameterSubstitution" ref="true" />
            </typeValue>
          </argument>
          <argument>
            <type api="T:OOAdvantech.MetaDataRepository.Roles" ref="false" />
            <enumValue>
              <field name="RoleA" />
            </enumValue>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>{D3C758D9-AEA6-456A-98DD-6DDBF99FB75A}</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.RoleAMultiplicityRangeAttribute" ref="true" />
          <argument>
            <type api="T:System.UInt64" ref="false" />
            <value>0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.PersistentMember" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>_ParameterSubstitutions</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.TemplateBinding.RemoveParameterSubstitution(OOAdvantech.MetaDataRepository.TemplateParameterSubstitution)">
      <apidata name="RemoveParameterSubstitution" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="parameterSubstitution">
          <type api="T:OOAdvantech.MetaDataRepository.TemplateParameterSubstitution" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.TemplateBinding" ref="true" />
      </containers>
    </api>
    <api id="P:OOAdvantech.MetaDataRepository.TemplateBinding.Signature">
      <apidata name="Signature" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Signature" />
      <setter name="set_Signature" />
      <returns>
        <type api="T:OOAdvantech.MetaDataRepository.TemplateSignature" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.TemplateBinding" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.RoleBMultiplicityRangeAttribute" ref="true" />
          <argument>
            <type api="T:System.UInt64" ref="false" />
            <value>0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.PersistentMember" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>_Signature</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.RoleAMultiplicityRangeAttribute" ref="true" />
          <argument>
            <type api="T:System.UInt64" ref="false" />
            <value>1</value>
          </argument>
          <argument>
            <type api="T:System.UInt64" ref="false" />
            <value>1</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.AssociationAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>BindigTemplateSignature</value>
          </argument>
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:OOAdvantech.MetaDataRepository.TemplateSignature" ref="true" />
            </typeValue>
          </argument>
          <argument>
            <type api="T:OOAdvantech.MetaDataRepository.Roles" ref="false" />
            <enumValue>
              <field name="RoleA" />
            </enumValue>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>{192AFE31-DA73-4035-96CA-1D0290850918}</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="T:OOAdvantech.MetaDataRepository.TemplateParameter">
      <apidata name="TemplateParameter" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:OOAdvantech.MetaDataRepository.MetaObject" ref="true" />
          <type api="T:System.MarshalByRefObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:OOAdvantech.MetaDataRepository.IParameterableElement" ref="true" />
      </implements>
      <elements>
        <element api="M:OOAdvantech.MetaDataRepository.TemplateParameter.#ctor" />
        <element api="M:OOAdvantech.MetaDataRepository.TemplateParameter.#ctor(System.String)" />
        <element api="M:OOAdvantech.MetaDataRepository.TemplateParameter.GetExtensionMetaObjects" />
        <element api="P:OOAdvantech.MetaDataRepository.TemplateParameter.Name" />
        <element api="P:OOAdvantech.MetaDataRepository.TemplateParameter.Position" />
        <element api="P:OOAdvantech.MetaDataRepository.TemplateParameter.Signature" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject._CaseInsensitiveName" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject._ImplementationUnit" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject.LockObject" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject.ReaderWriterLock" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject.Properties" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject._Name" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject.MetaObjectIDStream" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject._Identity" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject._ClientDependencies" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject._SupplierDependencies" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject._Namespace" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject.Visibility" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.MetaObjectChangeState" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.ShallowSynchronize(OOAdvantech.MetaDataRepository.MetaObject)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.AddDependency(System.String,OOAdvantech.MetaDataRepository.MetaObject)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.ErrorCheck(System.Collections.ArrayList@)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.GetDynamicPropertiesAsXmlString" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.SetIdentity(OOAdvantech.MetaDataRepository.MetaObjectID)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.Synchronize(OOAdvantech.MetaDataRepository.MetaObject)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.GetExtensionMetaObject(System.Type)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.SetNamespace(OOAdvantech.MetaDataRepository.Namespace)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.GetPropertyValue``1(System.String,System.String)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.GetPropertyValue(System.Type,System.String,System.String)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.PutPropertyValue(System.String,System.String,System.Object)" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.CaseInsensitiveName" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.ImplementationUnit" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.OQLName" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.FullName" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.OQLFullName" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.Identity" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.ClientDependencies" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.SupplierDependencies" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.Namespace" />
        <element api="E:OOAdvantech.MetaDataRepository.MetaObject.Changed" />
        <element api="M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="cloneIdentity">
              <type api="T:System.Boolean" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.MarshalByRefObject" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.MarshalByRefObject" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.MarshalByRefObject.GetLifetimeService">
          <apidata name="GetLifetimeService" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.MarshalByRefObject" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Security.Permissions.SecurityPermissionAttribute" ref="true" />
              <argument>
                <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
                <enumValue>
                  <field name="LinkDemand" />
                </enumValue>
              </argument>
              <assignment name="Flags">
                <type api="T:System.Security.Permissions.SecurityPermissionFlag" ref="false" />
                <enumValue>
                  <field name="Infrastructure" />
                </enumValue>
              </assignment>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.MarshalByRefObject.InitializeLifetimeService">
          <apidata name="InitializeLifetimeService" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.MarshalByRefObject" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Security.Permissions.SecurityPermissionAttribute" ref="true" />
              <argument>
                <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
                <enumValue>
                  <field name="LinkDemand" />
                </enumValue>
              </argument>
              <assignment name="Flags">
                <type api="T:System.Security.Permissions.SecurityPermissionFlag" ref="false" />
                <enumValue>
                  <field name="Infrastructure" />
                </enumValue>
              </assignment>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.MarshalByRefObject.CreateObjRef(System.Type)">
          <apidata name="CreateObjRef" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="requestedType">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Runtime.Remoting.ObjRef" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.MarshalByRefObject" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Security.Permissions.SecurityPermissionAttribute" ref="true" />
              <argument>
                <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
                <enumValue>
                  <field name="LinkDemand" />
                </enumValue>
              </argument>
              <assignment name="Flags">
                <type api="T:System.Security.Permissions.SecurityPermissionFlag" ref="false" />
                <enumValue>
                  <field name="Infrastructure" />
                </enumValue>
              </assignment>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.TemplateParameter.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.TemplateParameter" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.TemplateParameter.#ctor(System.String)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.TemplateParameter" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.TemplateParameter.GetExtensionMetaObjects">
      <apidata name="GetExtensionMetaObjects" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:OOAdvantech.MetaDataRepository.MetaObject.GetExtensionMetaObjects">
          <type api="T:OOAdvantech.MetaDataRepository.MetaObject" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Collections.ArrayList" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.TemplateParameter" ref="true" />
      </containers>
    </api>
    <api id="P:OOAdvantech.MetaDataRepository.TemplateParameter.Name">
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:OOAdvantech.MetaDataRepository.MetaObject.Name">
          <type api="T:OOAdvantech.MetaDataRepository.MetaObject" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" set="true" />
      <getter name="get_Name" />
      <setter name="set_Name" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <implements>
        <member api="P:OOAdvantech.MetaDataRepository.IParameterableElement.Name">
          <type api="T:OOAdvantech.MetaDataRepository.IParameterableElement" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.TemplateParameter" ref="true" />
      </containers>
    </api>
    <api id="P:OOAdvantech.MetaDataRepository.TemplateParameter.Position">
      <apidata name="Position" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Position" />
      <setter name="set_Position" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.TemplateParameter" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.BackwardCompatibilityID" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>+4</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.PersistentMember" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>_Position</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:OOAdvantech.MetaDataRepository.TemplateParameter.Signature">
      <apidata name="Signature" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Signature" />
      <setter name="set_Signature" />
      <returns>
        <type api="T:OOAdvantech.MetaDataRepository.TemplateSignature" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.TemplateParameter" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.AssociationAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>SignatureOwnedParameter</value>
          </argument>
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:OOAdvantech.MetaDataRepository.TemplateSignature" ref="true" />
            </typeValue>
          </argument>
          <argument>
            <type api="T:OOAdvantech.MetaDataRepository.Roles" ref="false" />
            <enumValue>
              <field name="RoleB" />
            </enumValue>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>{FF1C5235-2B5C-421B-884C-8162CA6FB480}</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.RoleBMultiplicityRangeAttribute" ref="true" />
          <argument>
            <type api="T:System.UInt64" ref="false" />
            <value>1</value>
          </argument>
          <argument>
            <type api="T:System.UInt64" ref="false" />
            <value>1</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.PersistentMember" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>_Signature</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="T:OOAdvantech.MetaDataRepository.TemplateParameterSubstitution">
      <apidata name="TemplateParameterSubstitution" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:OOAdvantech.MetaDataRepository.MetaObject" ref="true" />
          <type api="T:System.MarshalByRefObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:OOAdvantech.MetaDataRepository.TemplateParameterSubstitution.#ctor(OOAdvantech.MetaDataRepository.TemplateBinding,OOAdvantech.MetaDataRepository.TemplateParameter,OOAdvantech.MetaDataRepository.IParameterableElement)" />
        <element api="M:OOAdvantech.MetaDataRepository.TemplateParameterSubstitution.GetExtensionMetaObjects" />
        <element api="P:OOAdvantech.MetaDataRepository.TemplateParameterSubstitution.TemplateBinding" />
        <element api="P:OOAdvantech.MetaDataRepository.TemplateParameterSubstitution.Formal" />
        <element api="P:OOAdvantech.MetaDataRepository.TemplateParameterSubstitution.ActualParameters" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject._CaseInsensitiveName" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject._ImplementationUnit" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject.LockObject" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject.ReaderWriterLock" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject.Properties" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject._Name" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject.MetaObjectIDStream" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject._Identity" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject._ClientDependencies" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject._SupplierDependencies" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject._Namespace" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject.Visibility" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.MetaObjectChangeState" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.ShallowSynchronize(OOAdvantech.MetaDataRepository.MetaObject)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.AddDependency(System.String,OOAdvantech.MetaDataRepository.MetaObject)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.ErrorCheck(System.Collections.ArrayList@)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.GetDynamicPropertiesAsXmlString" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.SetIdentity(OOAdvantech.MetaDataRepository.MetaObjectID)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.Synchronize(OOAdvantech.MetaDataRepository.MetaObject)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.GetExtensionMetaObject(System.Type)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.SetNamespace(OOAdvantech.MetaDataRepository.Namespace)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.GetPropertyValue``1(System.String,System.String)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.GetPropertyValue(System.Type,System.String,System.String)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.PutPropertyValue(System.String,System.String,System.Object)" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.CaseInsensitiveName" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.ImplementationUnit" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.OQLName" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.Name" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.FullName" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.OQLFullName" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.Identity" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.ClientDependencies" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.SupplierDependencies" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.Namespace" />
        <element api="E:OOAdvantech.MetaDataRepository.MetaObject.Changed" />
        <element api="M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="cloneIdentity">
              <type api="T:System.Boolean" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.MarshalByRefObject" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.MarshalByRefObject" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.MarshalByRefObject.GetLifetimeService">
          <apidata name="GetLifetimeService" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.MarshalByRefObject" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Security.Permissions.SecurityPermissionAttribute" ref="true" />
              <argument>
                <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
                <enumValue>
                  <field name="LinkDemand" />
                </enumValue>
              </argument>
              <assignment name="Flags">
                <type api="T:System.Security.Permissions.SecurityPermissionFlag" ref="false" />
                <enumValue>
                  <field name="Infrastructure" />
                </enumValue>
              </assignment>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.MarshalByRefObject.InitializeLifetimeService">
          <apidata name="InitializeLifetimeService" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.MarshalByRefObject" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Security.Permissions.SecurityPermissionAttribute" ref="true" />
              <argument>
                <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
                <enumValue>
                  <field name="LinkDemand" />
                </enumValue>
              </argument>
              <assignment name="Flags">
                <type api="T:System.Security.Permissions.SecurityPermissionFlag" ref="false" />
                <enumValue>
                  <field name="Infrastructure" />
                </enumValue>
              </assignment>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.MarshalByRefObject.CreateObjRef(System.Type)">
          <apidata name="CreateObjRef" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="requestedType">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Runtime.Remoting.ObjRef" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.MarshalByRefObject" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Security.Permissions.SecurityPermissionAttribute" ref="true" />
              <argument>
                <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
                <enumValue>
                  <field name="LinkDemand" />
                </enumValue>
              </argument>
              <assignment name="Flags">
                <type api="T:System.Security.Permissions.SecurityPermissionFlag" ref="false" />
                <enumValue>
                  <field name="Infrastructure" />
                </enumValue>
              </assignment>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.TemplateParameterSubstitution.#ctor(OOAdvantech.MetaDataRepository.TemplateBinding,OOAdvantech.MetaDataRepository.TemplateParameter,OOAdvantech.MetaDataRepository.IParameterableElement)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="templateBinding">
          <type api="T:OOAdvantech.MetaDataRepository.TemplateBinding" ref="true" />
        </parameter>
        <parameter name="templateParameter">
          <type api="T:OOAdvantech.MetaDataRepository.TemplateParameter" ref="true" />
        </parameter>
        <parameter name="substitutionParameter">
          <type api="T:OOAdvantech.MetaDataRepository.IParameterableElement" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.TemplateParameterSubstitution" ref="true" />
      </containers>
    </api>
    <api id="P:OOAdvantech.MetaDataRepository.TemplateParameterSubstitution.ActualParameters">
      <apidata name="ActualParameters" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ActualParameters" />
      <returns>
        <type api="T:OOAdvantech.Collections.Generic.Set`1" ref="true">
          <specialization>
            <type api="T:OOAdvantech.MetaDataRepository.IParameterableElement" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.TemplateParameterSubstitution" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.PersistentMember" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>_ActualParameters</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.AssociationAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>SubstitutionParameter</value>
          </argument>
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:OOAdvantech.MetaDataRepository.IParameterableElement" ref="true" />
            </typeValue>
          </argument>
          <argument>
            <type api="T:OOAdvantech.MetaDataRepository.Roles" ref="false" />
            <enumValue>
              <field name="RoleA" />
            </enumValue>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>{039A1B2C-4862-4F2D-9D39-EF9F5F494D66}</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.RoleBMultiplicityRangeAttribute" ref="true" />
          <argument>
            <type api="T:System.UInt64" ref="false" />
            <value>0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.RoleAMultiplicityRangeAttribute" ref="true" />
          <argument>
            <type api="T:System.UInt64" ref="false" />
            <value>1</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:OOAdvantech.MetaDataRepository.TemplateParameterSubstitution.Formal">
      <apidata name="Formal" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Formal" />
      <setter name="set_Formal" />
      <returns>
        <type api="T:OOAdvantech.MetaDataRepository.TemplateParameter" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.TemplateParameterSubstitution" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.RoleBMultiplicityRangeAttribute" ref="true" />
          <argument>
            <type api="T:System.UInt64" ref="false" />
            <value>0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.AssociationAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>SubstitutiedParameter</value>
          </argument>
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:OOAdvantech.MetaDataRepository.TemplateParameter" ref="true" />
            </typeValue>
          </argument>
          <argument>
            <type api="T:OOAdvantech.MetaDataRepository.Roles" ref="false" />
            <enumValue>
              <field name="RoleA" />
            </enumValue>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>{78BA6DA7-70D9-446E-AC4D-FB8F78F5E386}</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.RoleAMultiplicityRangeAttribute" ref="true" />
          <argument>
            <type api="T:System.UInt64" ref="false" />
            <value>1</value>
          </argument>
          <argument>
            <type api="T:System.UInt64" ref="false" />
            <value>1</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.TemplateParameterSubstitution.GetExtensionMetaObjects">
      <apidata name="GetExtensionMetaObjects" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:OOAdvantech.MetaDataRepository.MetaObject.GetExtensionMetaObjects">
          <type api="T:OOAdvantech.MetaDataRepository.MetaObject" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Collections.ArrayList" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.TemplateParameterSubstitution" ref="true" />
      </containers>
    </api>
    <api id="P:OOAdvantech.MetaDataRepository.TemplateParameterSubstitution.TemplateBinding">
      <apidata name="TemplateBinding" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_TemplateBinding" />
      <setter name="set_TemplateBinding" />
      <returns>
        <type api="T:OOAdvantech.MetaDataRepository.TemplateBinding" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.TemplateParameterSubstitution" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.PersistentMember" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>_TemplateBinding</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.RoleBMultiplicityRangeAttribute" ref="true" />
          <argument>
            <type api="T:System.UInt64" ref="false" />
            <value>1</value>
          </argument>
          <argument>
            <type api="T:System.UInt64" ref="false" />
            <value>1</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.AssociationAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>BindParameter</value>
          </argument>
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:OOAdvantech.MetaDataRepository.TemplateBinding" ref="true" />
            </typeValue>
          </argument>
          <argument>
            <type api="T:OOAdvantech.MetaDataRepository.Roles" ref="false" />
            <enumValue>
              <field name="RoleB" />
            </enumValue>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>{D3C758D9-AEA6-456A-98DD-6DDBF99FB75A}</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="T:OOAdvantech.MetaDataRepository.TemplateSignature">
      <apidata name="TemplateSignature" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:OOAdvantech.MetaDataRepository.MetaObject" ref="true" />
          <type api="T:System.MarshalByRefObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:OOAdvantech.MetaDataRepository.TemplateSignature.#ctor" />
        <element api="M:OOAdvantech.MetaDataRepository.TemplateSignature.#ctor(OOAdvantech.MetaDataRepository.ITemplateable)" />
        <element api="M:OOAdvantech.MetaDataRepository.TemplateSignature.GetExtensionMetaObjects" />
        <element api="M:OOAdvantech.MetaDataRepository.TemplateSignature.AddOwnedParameter(OOAdvantech.MetaDataRepository.TemplateParameter)" />
        <element api="M:OOAdvantech.MetaDataRepository.TemplateSignature.AddOwnedParameter(System.Int32,OOAdvantech.MetaDataRepository.TemplateParameter)" />
        <element api="M:OOAdvantech.MetaDataRepository.TemplateSignature.RemoveOwnedParameter(OOAdvantech.MetaDataRepository.TemplateParameter)" />
        <element api="M:OOAdvantech.MetaDataRepository.TemplateSignature.GetParameterWithName(System.String)" />
        <element api="P:OOAdvantech.MetaDataRepository.TemplateSignature.Template" />
        <element api="P:OOAdvantech.MetaDataRepository.TemplateSignature.OwnedParameters" />
        <element api="P:OOAdvantech.MetaDataRepository.TemplateSignature.Parameters" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject._CaseInsensitiveName" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject._ImplementationUnit" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject.LockObject" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject.ReaderWriterLock" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject.Properties" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject._Name" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject.MetaObjectIDStream" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject._Identity" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject._ClientDependencies" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject._SupplierDependencies" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject._Namespace" />
        <element api="F:OOAdvantech.MetaDataRepository.MetaObject.Visibility" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.MetaObjectChangeState" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.ShallowSynchronize(OOAdvantech.MetaDataRepository.MetaObject)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.AddDependency(System.String,OOAdvantech.MetaDataRepository.MetaObject)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.ErrorCheck(System.Collections.ArrayList@)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.GetDynamicPropertiesAsXmlString" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.SetIdentity(OOAdvantech.MetaDataRepository.MetaObjectID)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.Synchronize(OOAdvantech.MetaDataRepository.MetaObject)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.GetExtensionMetaObject(System.Type)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.SetNamespace(OOAdvantech.MetaDataRepository.Namespace)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.GetPropertyValue``1(System.String,System.String)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.GetPropertyValue(System.Type,System.String,System.String)" />
        <element api="M:OOAdvantech.MetaDataRepository.MetaObject.PutPropertyValue(System.String,System.String,System.Object)" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.CaseInsensitiveName" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.ImplementationUnit" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.OQLName" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.Name" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.FullName" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.OQLFullName" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.Identity" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.ClientDependencies" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.SupplierDependencies" />
        <element api="P:OOAdvantech.MetaDataRepository.MetaObject.Namespace" />
        <element api="E:OOAdvantech.MetaDataRepository.MetaObject.Changed" />
        <element api="M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="cloneIdentity">
              <type api="T:System.Boolean" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.MarshalByRefObject" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.MarshalByRefObject" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.MarshalByRefObject.GetLifetimeService">
          <apidata name="GetLifetimeService" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.MarshalByRefObject" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Security.Permissions.SecurityPermissionAttribute" ref="true" />
              <argument>
                <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
                <enumValue>
                  <field name="LinkDemand" />
                </enumValue>
              </argument>
              <assignment name="Flags">
                <type api="T:System.Security.Permissions.SecurityPermissionFlag" ref="false" />
                <enumValue>
                  <field name="Infrastructure" />
                </enumValue>
              </assignment>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.MarshalByRefObject.InitializeLifetimeService">
          <apidata name="InitializeLifetimeService" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.MarshalByRefObject" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Security.Permissions.SecurityPermissionAttribute" ref="true" />
              <argument>
                <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
                <enumValue>
                  <field name="LinkDemand" />
                </enumValue>
              </argument>
              <assignment name="Flags">
                <type api="T:System.Security.Permissions.SecurityPermissionFlag" ref="false" />
                <enumValue>
                  <field name="Infrastructure" />
                </enumValue>
              </assignment>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.MarshalByRefObject.CreateObjRef(System.Type)">
          <apidata name="CreateObjRef" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="requestedType">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Runtime.Remoting.ObjRef" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.MarshalByRefObject" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Security.Permissions.SecurityPermissionAttribute" ref="true" />
              <argument>
                <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
                <enumValue>
                  <field name="LinkDemand" />
                </enumValue>
              </argument>
              <assignment name="Flags">
                <type api="T:System.Security.Permissions.SecurityPermissionFlag" ref="false" />
                <enumValue>
                  <field name="Infrastructure" />
                </enumValue>
              </assignment>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.TemplateSignature.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.TemplateSignature" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.TemplateSignature.#ctor(OOAdvantech.MetaDataRepository.ITemplateable)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="template">
          <type api="T:OOAdvantech.MetaDataRepository.ITemplateable" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.TemplateSignature" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.TemplateSignature.AddOwnedParameter(OOAdvantech.MetaDataRepository.TemplateParameter)">
      <apidata name="AddOwnedParameter" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="parameter">
          <type api="T:OOAdvantech.MetaDataRepository.TemplateParameter" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.TemplateSignature" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.TemplateSignature.AddOwnedParameter(System.Int32,OOAdvantech.MetaDataRepository.TemplateParameter)">
      <apidata name="AddOwnedParameter" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="parameter">
          <type api="T:OOAdvantech.MetaDataRepository.TemplateParameter" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.TemplateSignature" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.TemplateSignature.GetExtensionMetaObjects">
      <apidata name="GetExtensionMetaObjects" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:OOAdvantech.MetaDataRepository.MetaObject.GetExtensionMetaObjects">
          <type api="T:OOAdvantech.MetaDataRepository.MetaObject" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Collections.ArrayList" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.TemplateSignature" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.TemplateSignature.GetParameterWithName(System.String)">
      <apidata name="GetParameterWithName" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="parameterName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:OOAdvantech.MetaDataRepository.TemplateParameter" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.TemplateSignature" ref="true" />
      </containers>
    </api>
    <api id="P:OOAdvantech.MetaDataRepository.TemplateSignature.OwnedParameters">
      <apidata name="OwnedParameters" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_OwnedParameters" />
      <returns>
        <type api="T:OOAdvantech.Collections.Generic.Set`1" ref="true">
          <specialization>
            <type api="T:OOAdvantech.MetaDataRepository.TemplateParameter" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.TemplateSignature" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.AssociationAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>SignatureOwnedParameter</value>
          </argument>
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:OOAdvantech.MetaDataRepository.TemplateParameter" ref="true" />
            </typeValue>
          </argument>
          <argument>
            <type api="T:OOAdvantech.MetaDataRepository.Roles" ref="false" />
            <enumValue>
              <field name="RoleA" />
            </enumValue>
          </argument>
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>{FF1C5235-2B5C-421B-884C-8162CA6FB480}</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.RoleAMultiplicityRangeAttribute" ref="true" />
          <argument>
            <type api="T:System.UInt64" ref="false" />
            <value>0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.PersistentMember" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>_OwnedParameters</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:OOAdvantech.MetaDataRepository.TemplateSignature.Parameters">
      <apidata name="Parameters" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Parameters" />
      <returns>
        <type api="T:OOAdvantech.Collections.Generic.Set`1" ref="true">
          <specialization>
            <type api="T:OOAdvantech.MetaDataRepository.TemplateParameter" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.TemplateSignature" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.RoleBMultiplicityRangeAttribute" ref="true" />
          <argument>
            <type api="T:System.UInt64" ref="false" />
            <value>0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.AssociationAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>ReferedParameter</value>
          </argument>
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:OOAdvantech.MetaDataRepository.TemplateParameter" ref="true" />
            </typeValue>
          </argument>
          <argument>
            <type api="T:OOAdvantech.MetaDataRepository.Roles" ref="false" />
            <enumValue>
              <field name="RoleA" />
            </enumValue>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>{D6C79333-F027-41C3-8F10-874AA1B2B8D3}</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.RoleAMultiplicityRangeAttribute" ref="true" />
          <argument>
            <type api="T:System.UInt64" ref="false" />
            <value>1</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.TemplateSignature.RemoveOwnedParameter(OOAdvantech.MetaDataRepository.TemplateParameter)">
      <apidata name="RemoveOwnedParameter" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="parameter">
          <type api="T:OOAdvantech.MetaDataRepository.TemplateParameter" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.TemplateSignature" ref="true" />
      </containers>
    </api>
    <api id="P:OOAdvantech.MetaDataRepository.TemplateSignature.Template">
      <apidata name="Template" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Template" />
      <setter name="set_Template" />
      <returns>
        <type api="T:OOAdvantech.MetaDataRepository.ITemplateable" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.TemplateSignature" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.AssociationAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>TamplateDefinition</value>
          </argument>
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:OOAdvantech.MetaDataRepository.ITemplateable" ref="true" />
            </typeValue>
          </argument>
          <argument>
            <type api="T:OOAdvantech.MetaDataRepository.Roles" ref="false" />
            <enumValue>
              <field name="RoleB" />
            </enumValue>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>{660B2569-F0CD-4CA2-8241-CFD1DDBB02F0}</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.RoleBMultiplicityRangeAttribute" ref="true" />
          <argument>
            <type api="T:System.UInt64" ref="false" />
            <value>1</value>
          </argument>
          <argument>
            <type api="T:System.UInt64" ref="false" />
            <value>1</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.PersistentMember" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>_Template</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="T:OOAdvantech.MetaDataRepository.ValueTypePath">
      <apidata name="ValueTypePath" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:OOAdvantech.MetaDataRepository.ValueTypePath.#ctor(OOAdvantech.MetaDataRepository.ValueTypePath)" />
        <element api="M:OOAdvantech.MetaDataRepository.ValueTypePath.#ctor(System.Collections.Generic.ICollection{OOAdvantech.MetaDataRepository.MetaObjectID})" />
        <element api="M:OOAdvantech.MetaDataRepository.ValueTypePath.#ctor" />
        <element api="M:OOAdvantech.MetaDataRepository.ValueTypePath.GetEnumerator" />
        <element api="M:OOAdvantech.MetaDataRepository.ValueTypePath.ToString" />
        <element api="M:OOAdvantech.MetaDataRepository.ValueTypePath.GetValueTypePathFromString(System.String)" />
        <element api="M:OOAdvantech.MetaDataRepository.ValueTypePath.op_Equality(OOAdvantech.MetaDataRepository.ValueTypePath,OOAdvantech.MetaDataRepository.ValueTypePath)" />
        <element api="M:OOAdvantech.MetaDataRepository.ValueTypePath.op_Inequality(OOAdvantech.MetaDataRepository.ValueTypePath,OOAdvantech.MetaDataRepository.ValueTypePath)" />
        <element api="M:OOAdvantech.MetaDataRepository.ValueTypePath.ToArray" />
        <element api="M:OOAdvantech.MetaDataRepository.ValueTypePath.Peek" />
        <element api="M:OOAdvantech.MetaDataRepository.ValueTypePath.Pop" />
        <element api="M:OOAdvantech.MetaDataRepository.ValueTypePath.Push(OOAdvantech.MetaDataRepository.MetaObjectID)" />
        <element api="P:OOAdvantech.MetaDataRepository.ValueTypePath.Count" />
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.ValueTypePath.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.ValueTypePath" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.ValueTypePath.#ctor(OOAdvantech.MetaDataRepository.ValueTypePath)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="copyValueTypePath">
          <type api="T:OOAdvantech.MetaDataRepository.ValueTypePath" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.ValueTypePath" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.ValueTypePath.#ctor(System.Collections.Generic.ICollection{OOAdvantech.MetaDataRepository.MetaObjectID})">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="identitiesCollection">
          <type api="T:System.Collections.Generic.ICollection`1" ref="true">
            <specialization>
              <type api="T:OOAdvantech.MetaDataRepository.MetaObjectID" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.ValueTypePath" ref="true" />
      </containers>
    </api>
    <api id="P:OOAdvantech.MetaDataRepository.ValueTypePath.Count">
      <apidata name="Count" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Count" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.ValueTypePath" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.ValueTypePath.GetEnumerator">
      <apidata name="GetEnumerator" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Collections.Generic.IEnumerator`1" ref="true">
          <specialization>
            <type api="T:OOAdvantech.MetaDataRepository.MetaObjectID" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.ValueTypePath" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.ValueTypePath.GetValueTypePathFromString(System.String)">
      <apidata name="GetValueTypePathFromString" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="valueTypePathAsString">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:OOAdvantech.MetaDataRepository.ValueTypePath" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.ValueTypePath" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.ValueTypePath.op_Equality(OOAdvantech.MetaDataRepository.ValueTypePath,OOAdvantech.MetaDataRepository.ValueTypePath)">
      <apidata name="Equality" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="left">
          <type api="T:OOAdvantech.MetaDataRepository.ValueTypePath" ref="true" />
        </parameter>
        <parameter name="right">
          <type api="T:OOAdvantech.MetaDataRepository.ValueTypePath" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.ValueTypePath" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.ValueTypePath.op_Inequality(OOAdvantech.MetaDataRepository.ValueTypePath,OOAdvantech.MetaDataRepository.ValueTypePath)">
      <apidata name="Inequality" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="left">
          <type api="T:OOAdvantech.MetaDataRepository.ValueTypePath" ref="true" />
        </parameter>
        <parameter name="right">
          <type api="T:OOAdvantech.MetaDataRepository.ValueTypePath" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.ValueTypePath" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.ValueTypePath.Peek">
      <apidata name="Peek" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:OOAdvantech.MetaDataRepository.MetaObjectID" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.ValueTypePath" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.ValueTypePath.Pop">
      <apidata name="Pop" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:OOAdvantech.MetaDataRepository.MetaObjectID" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.ValueTypePath" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.ValueTypePath.Push(OOAdvantech.MetaDataRepository.MetaObjectID)">
      <apidata name="Push" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="metaObjectID">
          <type api="T:OOAdvantech.MetaDataRepository.MetaObjectID" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.ValueTypePath" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.ValueTypePath.ToArray">
      <apidata name="ToArray" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <arrayOf rank="1">
          <type api="T:OOAdvantech.MetaDataRepository.MetaObjectID" ref="true" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.ValueTypePath" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.MetaDataRepository.ValueTypePath.ToString">
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.ToString">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.ValueTypePath" ref="true" />
      </containers>
    </api>
    <api id="T:OOAdvantech.MetaDataRepository.VisibilityKind">
      <apidata name="VisibilityKind" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="F:OOAdvantech.MetaDataRepository.VisibilityKind.AccessPublic" />
        <element api="F:OOAdvantech.MetaDataRepository.VisibilityKind.AccessPrivate" />
        <element api="F:OOAdvantech.MetaDataRepository.VisibilityKind.AccessComponent" />
        <element api="F:OOAdvantech.MetaDataRepository.VisibilityKind.AccessProtected" />
        <element api="F:OOAdvantech.MetaDataRepository.VisibilityKind.AccessComponentOrProtected" />
      </elements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
      </containers>
    </api>
    <api id="F:OOAdvantech.MetaDataRepository.VisibilityKind.AccessComponent">
      <apidata name="AccessComponent" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:OOAdvantech.MetaDataRepository.VisibilityKind" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.VisibilityKind" ref="false" />
      </containers>
    </api>
    <api id="F:OOAdvantech.MetaDataRepository.VisibilityKind.AccessComponentOrProtected">
      <apidata name="AccessComponentOrProtected" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:OOAdvantech.MetaDataRepository.VisibilityKind" ref="false" />
      </returns>
      <value>4</value>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.VisibilityKind" ref="false" />
      </containers>
    </api>
    <api id="F:OOAdvantech.MetaDataRepository.VisibilityKind.AccessPrivate">
      <apidata name="AccessPrivate" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:OOAdvantech.MetaDataRepository.VisibilityKind" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.VisibilityKind" ref="false" />
      </containers>
    </api>
    <api id="F:OOAdvantech.MetaDataRepository.VisibilityKind.AccessProtected">
      <apidata name="AccessProtected" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:OOAdvantech.MetaDataRepository.VisibilityKind" ref="false" />
      </returns>
      <value>3</value>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.VisibilityKind" ref="false" />
      </containers>
    </api>
    <api id="F:OOAdvantech.MetaDataRepository.VisibilityKind.AccessPublic">
      <apidata name="AccessPublic" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:OOAdvantech.MetaDataRepository.VisibilityKind" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.MetaDataRepository" />
        <type api="T:OOAdvantech.MetaDataRepository.VisibilityKind" ref="false" />
      </containers>
    </api>
    <api id="N:OOAdvantech.PersistenceLayer">
      <apidata name="OOAdvantech.PersistenceLayer" group="namespace" />
      <elements>
        <element api="T:OOAdvantech.PersistenceLayer.StorageServerInstanceLocator" />
        <element api="T:OOAdvantech.PersistenceLayer.ObjectCollectionFactory" />
        <element api="T:OOAdvantech.PersistenceLayer.DeleteOptions" />
        <element api="T:OOAdvantech.PersistenceLayer.ObjectStorage" />
        <element api="T:OOAdvantech.PersistenceLayer.IStorageServerInstanceLocator" />
        <element api="T:OOAdvantech.PersistenceLayer.ObjectStorageChangedEventHandler" />
        <element api="T:OOAdvantech.PersistenceLayer.Storage" />
        <element api="T:OOAdvantech.PersistenceLayer.StorageException" />
        <element api="T:OOAdvantech.PersistenceLayer.StorageException.ExceptionReason" />
        <element api="T:OOAdvantech.PersistenceLayer.ObjectContainer" />
        <element api="T:OOAdvantech.PersistenceLayer.ObjectCollection" />
        <element api="T:OOAdvantech.PersistenceLayer.IPersistencyService" />
        <element api="T:OOAdvantech.PersistenceLayer.StorageInstanceRef" />
        <element api="T:OOAdvantech.PersistenceLayer.StorageInstanceRef.ObjectSate" />
      </elements>
    </api>
    <api id="T:OOAdvantech.PersistenceLayer.DeleteOptions">
      <apidata name="DeleteOptions" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="F:OOAdvantech.PersistenceLayer.DeleteOptions.TryToDelete" />
        <element api="F:OOAdvantech.PersistenceLayer.DeleteOptions.EnsureObjectDeletion" />
      </elements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.PersistenceLayer" />
      </containers>
    </api>
    <api id="F:OOAdvantech.PersistenceLayer.DeleteOptions.EnsureObjectDeletion">
      <apidata name="EnsureObjectDeletion" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:OOAdvantech.PersistenceLayer.DeleteOptions" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.PersistenceLayer" />
        <type api="T:OOAdvantech.PersistenceLayer.DeleteOptions" ref="false" />
      </containers>
    </api>
    <api id="F:OOAdvantech.PersistenceLayer.DeleteOptions.TryToDelete">
      <apidata name="TryToDelete" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:OOAdvantech.PersistenceLayer.DeleteOptions" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.PersistenceLayer" />
        <type api="T:OOAdvantech.PersistenceLayer.DeleteOptions" ref="false" />
      </containers>
    </api>
    <api id="T:OOAdvantech.PersistenceLayer.IPersistencyService">
      <apidata name="IPersistencyService" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:OOAdvantech.PersistenceLayer.IPersistencyService.DeleteStorage(System.String,System.String,System.String)" />
        <element api="M:OOAdvantech.PersistenceLayer.IPersistencyService.ClassOfObjectIsPersistent(System.Object)" />
        <element api="M:OOAdvantech.PersistenceLayer.IPersistencyService.NewStorage(OOAdvantech.PersistenceLayer.Storage,System.String,System.String,System.String,System.Boolean)" />
        <element api="M:OOAdvantech.PersistenceLayer.IPersistencyService.NewStorage(OOAdvantech.PersistenceLayer.Storage,System.String,System.Object,System.String)" />
        <element api="M:OOAdvantech.PersistenceLayer.IPersistencyService.OpenStorage(System.String,System.String,System.String)" />
        <element api="M:OOAdvantech.PersistenceLayer.IPersistencyService.OpenStorage(System.String,System.Object,System.String)" />
        <element api="M:OOAdvantech.PersistenceLayer.IPersistencyService.GetStorageOfObject(System.Object)" />
        <element api="M:OOAdvantech.PersistenceLayer.IPersistencyService.IsPersistent(System.Object)" />
      </elements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.PersistenceLayer" />
      </containers>
    </api>
    <api id="M:OOAdvantech.PersistenceLayer.IPersistencyService.ClassOfObjectIsPersistent(System.Object)">
      <apidata name="ClassOfObjectIsPersistent" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="memoryInstance">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.PersistenceLayer" />
        <type api="T:OOAdvantech.PersistenceLayer.IPersistencyService" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.PersistenceLayer.IPersistencyService.DeleteStorage(System.String,System.String,System.String)">
      <apidata name="DeleteStorage" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="storageName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="storageLocation">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="storageType">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.PersistenceLayer" />
        <type api="T:OOAdvantech.PersistenceLayer.IPersistencyService" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.PersistenceLayer.IPersistencyService.GetStorageOfObject(System.Object)">
      <apidata name="GetStorageOfObject" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="memoryInstance">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:OOAdvantech.PersistenceLayer.ObjectStorage" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.PersistenceLayer" />
        <type api="T:OOAdvantech.PersistenceLayer.IPersistencyService" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.PersistenceLayer.IPersistencyService.IsPersistent(System.Object)">
      <apidata name="IsPersistent" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="memoryInstance">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.PersistenceLayer" />
        <type api="T:OOAdvantech.PersistenceLayer.IPersistencyService" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.PersistenceLayer.IPersistencyService.NewStorage(OOAdvantech.PersistenceLayer.Storage,System.String,System.Object,System.String)">
      <apidata name="NewStorage" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="storageMetadata">
          <type api="T:OOAdvantech.PersistenceLayer.Storage" ref="true" />
        </parameter>
        <parameter name="storageName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="rawStorageData">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="storageType">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:OOAdvantech.PersistenceLayer.ObjectStorage" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.PersistenceLayer" />
        <type api="T:OOAdvantech.PersistenceLayer.IPersistencyService" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.PersistenceLayer.IPersistencyService.NewStorage(OOAdvantech.PersistenceLayer.Storage,System.String,System.String,System.String,System.Boolean)">
      <apidata name="NewStorage" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="storageMetadata">
          <type api="T:OOAdvantech.PersistenceLayer.Storage" ref="true" />
        </parameter>
        <parameter name="storageName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="storageLocation">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="storageType">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="InProcess">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:OOAdvantech.PersistenceLayer.ObjectStorage" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.PersistenceLayer" />
        <type api="T:OOAdvantech.PersistenceLayer.IPersistencyService" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.PersistenceLayer.IPersistencyService.OpenStorage(System.String,System.Object,System.String)">
      <apidata name="OpenStorage" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="storageName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="rawStorageData">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="storageType">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:OOAdvantech.PersistenceLayer.ObjectStorage" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.PersistenceLayer" />
        <type api="T:OOAdvantech.PersistenceLayer.IPersistencyService" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.PersistenceLayer.IPersistencyService.OpenStorage(System.String,System.String,System.String)">
      <apidata name="OpenStorage" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="storageName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="storageLocation">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="storageType">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:OOAdvantech.PersistenceLayer.ObjectStorage" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.PersistenceLayer" />
        <type api="T:OOAdvantech.PersistenceLayer.IPersistencyService" ref="true" />
      </containers>
    </api>
    <api id="T:OOAdvantech.PersistenceLayer.IStorageServerInstanceLocator">
      <apidata name="IStorageServerInstanceLocator" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:OOAdvantech.PersistenceLayer.IStorageServerInstanceLocator.GetInstancePort(System.String)" />
        <element api="M:OOAdvantech.PersistenceLayer.IStorageServerInstanceLocator.AddInstance(System.Int32,System.String)" />
      </elements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.PersistenceLayer" />
      </containers>
    </api>
    <api id="M:OOAdvantech.PersistenceLayer.IStorageServerInstanceLocator.AddInstance(System.Int32,System.String)">
      <apidata name="AddInstance" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="port">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="InstanceName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.PersistenceLayer" />
        <type api="T:OOAdvantech.PersistenceLayer.IStorageServerInstanceLocator" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.PersistenceLayer.IStorageServerInstanceLocator.GetInstancePort(System.String)">
      <apidata name="GetInstancePort" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="InstanceName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.PersistenceLayer" />
        <type api="T:OOAdvantech.PersistenceLayer.IStorageServerInstanceLocator" ref="true" />
      </containers>
    </api>
    <api id="T:OOAdvantech.PersistenceLayer.ObjectCollection">
      <apidata name="ObjectCollection" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <implements>
        <type api="T:OOAdvantech.Transactions.ITransactionalObject" ref="true" />
      </implements>
      <elements>
        <element api="M:OOAdvantech.PersistenceLayer.ObjectCollection.Contains(System.Object)" />
        <element api="M:OOAdvantech.PersistenceLayer.ObjectCollection.RemoveAll" />
        <element api="M:OOAdvantech.PersistenceLayer.ObjectCollection.AddObjects(OOAdvantech.PersistenceLayer.ObjectCollection)" />
        <element api="M:OOAdvantech.PersistenceLayer.ObjectCollection.RemoveObjects(OOAdvantech.PersistenceLayer.ObjectCollection)" />
        <element api="M:OOAdvantech.PersistenceLayer.ObjectCollection.CanDeletePermanently(System.Object)" />
        <element api="M:OOAdvantech.PersistenceLayer.ObjectCollection.Remove(System.Object)" />
        <element api="M:OOAdvantech.PersistenceLayer.ObjectCollection.Add(System.Object)" />
        <element api="M:OOAdvantech.PersistenceLayer.ObjectCollection.GetEnumerator" />
        <element api="M:OOAdvantech.PersistenceLayer.ObjectCollection.GetObjects(System.String)" />
        <element api="M:OOAdvantech.PersistenceLayer.ObjectCollection.Insert(System.Int32,System.Object)" />
        <element api="M:OOAdvantech.PersistenceLayer.ObjectCollection.RemoveAt(System.Int32)" />
        <element api="M:OOAdvantech.PersistenceLayer.ObjectCollection.IndexOf(System.Object)" />
        <element api="M:OOAdvantech.PersistenceLayer.ObjectCollection.IndexOf(System.Object,System.Int32)" />
        <element api="M:OOAdvantech.PersistenceLayer.ObjectCollection.IndexOf(System.Object,System.Int32,System.Int32)" />
        <element api="P:OOAdvantech.PersistenceLayer.ObjectCollection.Count" />
        <element api="P:OOAdvantech.PersistenceLayer.ObjectCollection.Item(System.Int32)" />
        <element api="M:OOAdvantech.Transactions.ITransactionalObject.MergeChanges(OOAdvantech.Transactions.Transaction,OOAdvantech.Transactions.Transaction)" />
        <element api="M:OOAdvantech.Transactions.ITransactionalObject.MarkChanges(OOAdvantech.Transactions.Transaction)" />
        <element api="M:OOAdvantech.Transactions.ITransactionalObject.MarkChanges(OOAdvantech.Transactions.Transaction,System.Reflection.FieldInfo[])" />
        <element api="M:OOAdvantech.Transactions.ITransactionalObject.UndoChanges(OOAdvantech.Transactions.Transaction)" />
        <element api="M:OOAdvantech.Transactions.ITransactionalObject.CommitChanges(OOAdvantech.Transactions.Transaction)" />
      </elements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.PersistenceLayer" />
      </containers>
    </api>
    <api id="M:OOAdvantech.PersistenceLayer.ObjectCollection.Add(System.Object)">
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="theObject">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.PersistenceLayer" />
        <type api="T:OOAdvantech.PersistenceLayer.ObjectCollection" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.PersistenceLayer.ObjectCollection.AddObjects(OOAdvantech.PersistenceLayer.ObjectCollection)">
      <apidata name="AddObjects" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="objects">
          <type api="T:OOAdvantech.PersistenceLayer.ObjectCollection" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.PersistenceLayer" />
        <type api="T:OOAdvantech.PersistenceLayer.ObjectCollection" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.PersistenceLayer.ObjectCollection.CanDeletePermanently(System.Object)">
      <apidata name="CanDeletePermanently" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="theObject">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.PersistenceLayer" />
        <type api="T:OOAdvantech.PersistenceLayer.ObjectCollection" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.PersistenceLayer.ObjectCollection.Contains(System.Object)">
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="theObject">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.PersistenceLayer" />
        <type api="T:OOAdvantech.PersistenceLayer.ObjectCollection" ref="true" />
      </containers>
    </api>
    <api id="P:OOAdvantech.PersistenceLayer.ObjectCollection.Count">
      <apidata name="Count" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_Count" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.PersistenceLayer" />
        <type api="T:OOAdvantech.PersistenceLayer.ObjectCollection" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.PersistenceLayer.ObjectCollection.GetEnumerator">
      <apidata name="GetEnumerator" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:System.Collections.IEnumerator" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.PersistenceLayer" />
        <type api="T:OOAdvantech.PersistenceLayer.ObjectCollection" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.PersistenceLayer.ObjectCollection.GetObjects(System.String)">
      <apidata name="GetObjects" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="criterion">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:OOAdvantech.PersistenceLayer.ObjectCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.PersistenceLayer" />
        <type api="T:OOAdvantech.PersistenceLayer.ObjectCollection" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.PersistenceLayer.ObjectCollection.IndexOf(System.Object)">
      <apidata name="IndexOf" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="item">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.PersistenceLayer" />
        <type api="T:OOAdvantech.PersistenceLayer.ObjectCollection" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.PersistenceLayer.ObjectCollection.IndexOf(System.Object,System.Int32)">
      <apidata name="IndexOf" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="item">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.PersistenceLayer" />
        <type api="T:OOAdvantech.PersistenceLayer.ObjectCollection" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.PersistenceLayer.ObjectCollection.IndexOf(System.Object,System.Int32,System.Int32)">
      <apidata name="IndexOf" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="item">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="count">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.PersistenceLayer" />
        <type api="T:OOAdvantech.PersistenceLayer.ObjectCollection" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.PersistenceLayer.ObjectCollection.Insert(System.Int32,System.Object)">
      <apidata name="Insert" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="item">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.PersistenceLayer" />
        <type api="T:OOAdvantech.PersistenceLayer.ObjectCollection" ref="true" />
      </containers>
    </api>
    <api id="P:OOAdvantech.PersistenceLayer.ObjectCollection.Item(System.Int32)">
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_Item" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.PersistenceLayer" />
        <type api="T:OOAdvantech.PersistenceLayer.ObjectCollection" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.PersistenceLayer.ObjectCollection.Remove(System.Object)">
      <apidata name="Remove" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="theObject">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.PersistenceLayer" />
        <type api="T:OOAdvantech.PersistenceLayer.ObjectCollection" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.PersistenceLayer.ObjectCollection.RemoveAll">
      <apidata name="RemoveAll" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.PersistenceLayer" />
        <type api="T:OOAdvantech.PersistenceLayer.ObjectCollection" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.PersistenceLayer.ObjectCollection.RemoveAt(System.Int32)">
      <apidata name="RemoveAt" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.PersistenceLayer" />
        <type api="T:OOAdvantech.PersistenceLayer.ObjectCollection" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.PersistenceLayer.ObjectCollection.RemoveObjects(OOAdvantech.PersistenceLayer.ObjectCollection)">
      <apidata name="RemoveObjects" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="objects">
          <type api="T:OOAdvantech.PersistenceLayer.ObjectCollection" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.PersistenceLayer" />
        <type api="T:OOAdvantech.PersistenceLayer.ObjectCollection" ref="true" />
      </containers>
    </api>
    <api id="T:OOAdvantech.PersistenceLayer.ObjectCollectionFactory">
      <apidata name="ObjectCollectionFactory" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="F:OOAdvantech.PersistenceLayer.ObjectCollectionFactory.MonoStateObjectCollectionFactory" />
        <element api="M:OOAdvantech.PersistenceLayer.ObjectCollectionFactory.CreateOnMemoryCollection" />
        <element api="M:OOAdvantech.PersistenceLayer.ObjectCollectionFactory.CreateOnMemoryCollection(System.Collections.ICollection)" />
        <element api="M:OOAdvantech.PersistenceLayer.ObjectCollectionFactory.#ctor" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.PersistenceLayer" />
      </containers>
    </api>
    <api id="M:OOAdvantech.PersistenceLayer.ObjectCollectionFactory.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.PersistenceLayer" />
        <type api="T:OOAdvantech.PersistenceLayer.ObjectCollectionFactory" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.PersistenceLayer.ObjectCollectionFactory.CreateOnMemoryCollection">
      <apidata name="CreateOnMemoryCollection" group="member" subgroup="method" />
      <memberdata visibility="family or assembly" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:OOAdvantech.PersistenceLayer.ObjectCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.PersistenceLayer" />
        <type api="T:OOAdvantech.PersistenceLayer.ObjectCollectionFactory" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.PersistenceLayer.ObjectCollectionFactory.CreateOnMemoryCollection(System.Collections.ICollection)">
      <apidata name="CreateOnMemoryCollection" group="member" subgroup="method" />
      <memberdata visibility="family or assembly" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="collection">
          <type api="T:System.Collections.ICollection" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:OOAdvantech.PersistenceLayer.ObjectCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.PersistenceLayer" />
        <type api="T:OOAdvantech.PersistenceLayer.ObjectCollectionFactory" ref="true" />
      </containers>
    </api>
    <api id="F:OOAdvantech.PersistenceLayer.ObjectCollectionFactory.MonoStateObjectCollectionFactory">
      <apidata name="MonoStateObjectCollectionFactory" group="member" subgroup="field" />
      <memberdata visibility="family or assembly" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:OOAdvantech.PersistenceLayer.ObjectCollectionFactory" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.PersistenceLayer" />
        <type api="T:OOAdvantech.PersistenceLayer.ObjectCollectionFactory" ref="true" />
      </containers>
    </api>
    <api id="T:OOAdvantech.PersistenceLayer.ObjectContainer">
      <apidata name="ObjectContainer" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="true" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:OOAdvantech.Collections.Generic.Set`1" ref="true" />
          <type api="T:OOAdvantech.MetaDataRepository.MetaObjectCollectionA" ref="true" />
        </descendents>
      </family>
      <elements>
        <element api="F:OOAdvantech.PersistenceLayer.ObjectContainer._theObjects" />
        <element api="M:OOAdvantech.PersistenceLayer.ObjectContainer.GetEnumerator" />
        <element api="M:OOAdvantech.PersistenceLayer.ObjectContainer.GetObjectEnumerator" />
        <element api="M:OOAdvantech.PersistenceLayer.ObjectContainer.Init(System.Collections.ICollection)" />
        <element api="M:OOAdvantech.PersistenceLayer.ObjectContainer.#ctor" />
        <element api="P:OOAdvantech.PersistenceLayer.ObjectContainer.theObjects" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.PersistenceLayer" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:OOAdvantech.Transactions.ContainByValue" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:OOAdvantech.PersistenceLayer.ObjectContainer.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.PersistenceLayer" />
        <type api="T:OOAdvantech.PersistenceLayer.ObjectContainer" ref="true" />
      </containers>
    </api>
    <api id="F:OOAdvantech.PersistenceLayer.ObjectContainer._theObjects">
      <apidata name="_theObjects" group="member" subgroup="field" />
      <memberdata visibility="family or assembly" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:OOAdvantech.PersistenceLayer.ObjectCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.PersistenceLayer" />
        <type api="T:OOAdvantech.PersistenceLayer.ObjectContainer" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.PersistenceLayer.ObjectContainer.GetEnumerator">
      <apidata name="GetEnumerator" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Collections.IEnumerator" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.PersistenceLayer" />
        <type api="T:OOAdvantech.PersistenceLayer.ObjectContainer" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.PersistenceLayer.ObjectContainer.GetObjectEnumerator">
      <apidata name="GetObjectEnumerator" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:System.Collections.IEnumerator" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.PersistenceLayer" />
        <type api="T:OOAdvantech.PersistenceLayer.ObjectContainer" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.PersistenceLayer.ObjectContainer.Init(System.Collections.ICollection)">
      <apidata name="Init" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="collection">
          <type api="T:System.Collections.ICollection" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.PersistenceLayer" />
        <type api="T:OOAdvantech.PersistenceLayer.ObjectContainer" ref="true" />
      </containers>
    </api>
    <api id="P:OOAdvantech.PersistenceLayer.ObjectContainer.theObjects">
      <apidata name="theObjects" group="member" subgroup="property" />
      <memberdata visibility="family or assembly" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_theObjects" />
      <returns>
        <type api="T:OOAdvantech.PersistenceLayer.ObjectCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.PersistenceLayer" />
        <type api="T:OOAdvantech.PersistenceLayer.ObjectContainer" ref="true" />
      </containers>
    </api>
    <api id="T:OOAdvantech.PersistenceLayer.ObjectStorage">
      <apidata name="ObjectStorage" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:OOAdvantech.ObjectsContext" ref="true" />
          <type api="T:System.MarshalByRefObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="F:OOAdvantech.PersistenceLayer.ObjectStorage.ReaderWriterLock" />
        <element api="F:OOAdvantech.PersistenceLayer.ObjectStorage._PersistencyService" />
        <element api="M:OOAdvantech.PersistenceLayer.ObjectStorage.NewStorage(OOAdvantech.PersistenceLayer.Storage,System.String,System.String,System.String,System.Boolean)" />
        <element api="M:OOAdvantech.PersistenceLayer.ObjectStorage.NewStorage(OOAdvantech.PersistenceLayer.Storage,System.String,System.String,System.String)" />
        <element api="M:OOAdvantech.PersistenceLayer.ObjectStorage.NewStorage(System.String,System.String,System.String)" />
        <element api="M:OOAdvantech.PersistenceLayer.ObjectStorage.NewStorage(System.String,System.String,System.String,System.Boolean)" />
        <element api="M:OOAdvantech.PersistenceLayer.ObjectStorage.NewStorage(System.String,System.Object,System.String)" />
        <element api="M:OOAdvantech.PersistenceLayer.ObjectStorage.GetStorageCells(OOAdvantech.MetaDataRepository.Classifier,System.DateTime,System.DateTime)" />
        <element api="M:OOAdvantech.PersistenceLayer.ObjectStorage.GetStorageCells(OOAdvantech.MetaDataRepository.Classifier)" />
        <element api="M:OOAdvantech.PersistenceLayer.ObjectStorage.GetLinkedStorageCells(OOAdvantech.MetaDataRepository.AssociationEnd,OOAdvantech.MetaDataRepository.ValueTypePath,OOAdvantech.Collections.Generic.Set{OOAdvantech.MetaDataRepository.StorageCell})" />
        <element api="M:OOAdvantech.PersistenceLayer.ObjectStorage.GetRelationObjectsStorageCells(OOAdvantech.MetaDataRepository.Association,OOAdvantech.Collections.Generic.Set{OOAdvantech.MetaDataRepository.StorageCell},OOAdvantech.MetaDataRepository.Roles)" />
        <element api="M:OOAdvantech.PersistenceLayer.ObjectStorage.GetStorageCell(System.Object)" />
        <element api="M:OOAdvantech.PersistenceLayer.ObjectStorage.DeleteStorage(System.String,System.String,System.String)" />
        <element api="M:OOAdvantech.PersistenceLayer.ObjectStorage.IsPersistent(System.Object)" />
        <element api="M:OOAdvantech.PersistenceLayer.ObjectStorage.NewTransientObject(System.Type,System.Type[],System.Object[])" />
        <element api="M:OOAdvantech.PersistenceLayer.ObjectStorage.NewTransientObject(System.Type)" />
        <element api="M:OOAdvantech.PersistenceLayer.ObjectStorage.Execute(System.String,OOAdvantech.Collections.Generic.Dictionary{System.String,System.Object})" />
        <element api="M:OOAdvantech.PersistenceLayer.ObjectStorage.Execute(System.String)" />
        <element api="M:OOAdvantech.PersistenceLayer.ObjectStorage.Parse(System.String)" />
        <element api="M:OOAdvantech.PersistenceLayer.ObjectStorage.DeleteObject(System.Object)" />
        <element api="M:OOAdvantech.PersistenceLayer.ObjectStorage.DeleteObject(System.Object,OOAdvantech.PersistenceLayer.DeleteOptions)" />
        <element api="M:OOAdvantech.PersistenceLayer.ObjectStorage.Delete(System.Object,OOAdvantech.PersistenceLayer.DeleteOptions)" />
        <element api="M:OOAdvantech.PersistenceLayer.ObjectStorage.CommitObjectState(System.Object)" />
        <element api="M:OOAdvantech.PersistenceLayer.ObjectStorage.NewObject(System.Type,System.Type[],System.Object[])" />
        <element api="M:OOAdvantech.PersistenceLayer.ObjectStorage.NewObject(System.Type)" />
        <element api="M:OOAdvantech.PersistenceLayer.ObjectStorage.OpenStorage(System.String,System.String,System.String,System.Boolean)" />
        <element api="M:OOAdvantech.PersistenceLayer.ObjectStorage.OpenStorage(System.String,System.Object,System.String)" />
        <element api="M:OOAdvantech.PersistenceLayer.ObjectStorage.OpenStorage(System.String,System.String,System.String)" />
        <element api="M:OOAdvantech.PersistenceLayer.ObjectStorage.CommitTransientObjectState(System.Object)" />
        <element api="M:OOAdvantech.PersistenceLayer.ObjectStorage.GetStorageOfObject(System.Object)" />
        <element api="M:OOAdvantech.PersistenceLayer.ObjectStorage.GetStorageOfObject(OOAdvantech.ExtensionProperties)" />
        <element api="M:OOAdvantech.PersistenceLayer.ObjectStorage.GetObjectID(System.Object)" />
        <element api="M:OOAdvantech.PersistenceLayer.ObjectStorage.#ctor" />
        <element api="P:OOAdvantech.PersistenceLayer.ObjectStorage.PersistencyService" />
        <element api="P:OOAdvantech.PersistenceLayer.ObjectStorage.StorageMetaData" />
        <element api="M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="cloneIdentity">
              <type api="T:System.Boolean" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.MarshalByRefObject" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.MarshalByRefObject" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.MarshalByRefObject.GetLifetimeService">
          <apidata name="GetLifetimeService" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.MarshalByRefObject" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Security.Permissions.SecurityPermissionAttribute" ref="true" />
              <argument>
                <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
                <enumValue>
                  <field name="LinkDemand" />
                </enumValue>
              </argument>
              <assignment name="Flags">
                <type api="T:System.Security.Permissions.SecurityPermissionFlag" ref="false" />
                <enumValue>
                  <field name="Infrastructure" />
                </enumValue>
              </assignment>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.MarshalByRefObject.InitializeLifetimeService">
          <apidata name="InitializeLifetimeService" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.MarshalByRefObject" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Security.Permissions.SecurityPermissionAttribute" ref="true" />
              <argument>
                <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
                <enumValue>
                  <field name="LinkDemand" />
                </enumValue>
              </argument>
              <assignment name="Flags">
                <type api="T:System.Security.Permissions.SecurityPermissionFlag" ref="false" />
                <enumValue>
                  <field name="Infrastructure" />
                </enumValue>
              </assignment>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.MarshalByRefObject.CreateObjRef(System.Type)">
          <apidata name="CreateObjRef" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="requestedType">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Runtime.Remoting.ObjRef" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.MarshalByRefObject" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Security.Permissions.SecurityPermissionAttribute" ref="true" />
              <argument>
                <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
                <enumValue>
                  <field name="LinkDemand" />
                </enumValue>
              </argument>
              <assignment name="Flags">
                <type api="T:System.Security.Permissions.SecurityPermissionFlag" ref="false" />
                <enumValue>
                  <field name="Infrastructure" />
                </enumValue>
              </assignment>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.PersistenceLayer" />
      </containers>
    </api>
    <api id="M:OOAdvantech.PersistenceLayer.ObjectStorage.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.PersistenceLayer" />
        <type api="T:OOAdvantech.PersistenceLayer.ObjectStorage" ref="true" />
      </containers>
    </api>
    <api id="F:OOAdvantech.PersistenceLayer.ObjectStorage._PersistencyService">
      <apidata name="_PersistencyService" group="member" subgroup="field" />
      <memberdata visibility="family" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:OOAdvantech.PersistenceLayer.IPersistencyService" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.PersistenceLayer" />
        <type api="T:OOAdvantech.PersistenceLayer.ObjectStorage" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.PersistenceLayer.ObjectStorage.CommitObjectState(System.Object)">
      <apidata name="CommitObjectState" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="Object">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.PersistenceLayer" />
        <type api="T:OOAdvantech.PersistenceLayer.ObjectStorage" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.PersistenceLayer.ObjectStorage.CommitTransientObjectState(System.Object)">
      <apidata name="CommitTransientObjectState" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="Object">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.PersistenceLayer" />
        <type api="T:OOAdvantech.PersistenceLayer.ObjectStorage" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.PersistenceLayer.ObjectStorage.Delete(System.Object,OOAdvantech.PersistenceLayer.DeleteOptions)">
      <apidata name="Delete" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="thePersistentObject">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="deleteOption">
          <type api="T:OOAdvantech.PersistenceLayer.DeleteOptions" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.PersistenceLayer" />
        <type api="T:OOAdvantech.PersistenceLayer.ObjectStorage" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.PersistenceLayer.ObjectStorage.DeleteObject(System.Object)">
      <apidata name="DeleteObject" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="thePersistentObject">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.PersistenceLayer" />
        <type api="T:OOAdvantech.PersistenceLayer.ObjectStorage" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.PersistenceLayer.ObjectStorage.DeleteObject(System.Object,OOAdvantech.PersistenceLayer.DeleteOptions)">
      <apidata name="DeleteObject" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="thePersistentObject">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="deleteOption">
          <type api="T:OOAdvantech.PersistenceLayer.DeleteOptions" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.PersistenceLayer" />
        <type api="T:OOAdvantech.PersistenceLayer.ObjectStorage" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.PersistenceLayer.ObjectStorage.DeleteStorage(System.String,System.String,System.String)">
      <apidata name="DeleteStorage" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="StorageName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="StorageLocation">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="StorageType">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.PersistenceLayer" />
        <type api="T:OOAdvantech.PersistenceLayer.ObjectStorage" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.PersistenceLayer.ObjectStorage.Execute(System.String)">
      <apidata name="Execute" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="OQLStatement">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:OOAdvantech.Collections.StructureSet" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.PersistenceLayer" />
        <type api="T:OOAdvantech.PersistenceLayer.ObjectStorage" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.PersistenceLayer.ObjectStorage.Execute(System.String,OOAdvantech.Collections.Generic.Dictionary{System.String,System.Object})">
      <apidata name="Execute" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="OQLStatement">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="parameters">
          <type api="T:OOAdvantech.Collections.Generic.Dictionary`2" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
              <type api="T:System.Object" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:OOAdvantech.Collections.StructureSet" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.PersistenceLayer" />
        <type api="T:OOAdvantech.PersistenceLayer.ObjectStorage" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.PersistenceLayer.ObjectStorage.GetLinkedStorageCells(OOAdvantech.MetaDataRepository.AssociationEnd,OOAdvantech.MetaDataRepository.ValueTypePath,OOAdvantech.Collections.Generic.Set{OOAdvantech.MetaDataRepository.StorageCell})">
      <apidata name="GetLinkedStorageCells" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="associationEnd">
          <type api="T:OOAdvantech.MetaDataRepository.AssociationEnd" ref="true" />
        </parameter>
        <parameter name="valueTypePath">
          <type api="T:OOAdvantech.MetaDataRepository.ValueTypePath" ref="true" />
        </parameter>
        <parameter name="relatedStorageCell">
          <type api="T:OOAdvantech.Collections.Generic.Set`1" ref="true">
            <specialization>
              <type api="T:OOAdvantech.MetaDataRepository.StorageCell" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:OOAdvantech.Collections.Generic.Set`1" ref="true">
          <specialization>
            <type api="T:OOAdvantech.MetaDataRepository.RelatedStorageCell" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.PersistenceLayer" />
        <type api="T:OOAdvantech.PersistenceLayer.ObjectStorage" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.PersistenceLayer.ObjectStorage.GetObjectID(System.Object)">
      <apidata name="GetObjectID" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="persistentObject">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.PersistenceLayer" />
        <type api="T:OOAdvantech.PersistenceLayer.ObjectStorage" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.PersistenceLayer.ObjectStorage.GetRelationObjectsStorageCells(OOAdvantech.MetaDataRepository.Association,OOAdvantech.Collections.Generic.Set{OOAdvantech.MetaDataRepository.StorageCell},OOAdvantech.MetaDataRepository.Roles)">
      <apidata name="GetRelationObjectsStorageCells" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="association">
          <type api="T:OOAdvantech.MetaDataRepository.Association" ref="true" />
        </parameter>
        <parameter name="relatedStorageCells">
          <type api="T:OOAdvantech.Collections.Generic.Set`1" ref="true">
            <specialization>
              <type api="T:OOAdvantech.MetaDataRepository.StorageCell" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="storageCellsRole">
          <type api="T:OOAdvantech.MetaDataRepository.Roles" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:OOAdvantech.Collections.Generic.Set`1" ref="true">
          <specialization>
            <type api="T:OOAdvantech.MetaDataRepository.StorageCell" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.PersistenceLayer" />
        <type api="T:OOAdvantech.PersistenceLayer.ObjectStorage" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.PersistenceLayer.ObjectStorage.GetStorageCell(System.Object)">
      <apidata name="GetStorageCell" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="ObjectID">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:OOAdvantech.MetaDataRepository.StorageCell" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.PersistenceLayer" />
        <type api="T:OOAdvantech.PersistenceLayer.ObjectStorage" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.PersistenceLayer.ObjectStorage.GetStorageCells(OOAdvantech.MetaDataRepository.Classifier)">
      <apidata name="GetStorageCells" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="classifier">
          <type api="T:OOAdvantech.MetaDataRepository.Classifier" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:OOAdvantech.Collections.Generic.Set`1" ref="true">
          <specialization>
            <type api="T:OOAdvantech.MetaDataRepository.StorageCell" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.PersistenceLayer" />
        <type api="T:OOAdvantech.PersistenceLayer.ObjectStorage" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.PersistenceLayer.ObjectStorage.GetStorageCells(OOAdvantech.MetaDataRepository.Classifier,System.DateTime,System.DateTime)">
      <apidata name="GetStorageCells" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="classifier">
          <type api="T:OOAdvantech.MetaDataRepository.Classifier" ref="true" />
        </parameter>
        <parameter name="timePeriodStartDate">
          <type api="T:System.DateTime" ref="false" />
        </parameter>
        <parameter name="timePeriodEndDate">
          <type api="T:System.DateTime" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:OOAdvantech.Collections.Generic.Set`1" ref="true">
          <specialization>
            <type api="T:OOAdvantech.MetaDataRepository.StorageCell" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.PersistenceLayer" />
        <type api="T:OOAdvantech.PersistenceLayer.ObjectStorage" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.PersistenceLayer.ObjectStorage.GetStorageOfObject(OOAdvantech.ExtensionProperties)">
      <apidata name="GetStorageOfObject" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="extensionProperties">
          <type api="T:OOAdvantech.ExtensionProperties" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:OOAdvantech.PersistenceLayer.ObjectStorage" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.PersistenceLayer" />
        <type api="T:OOAdvantech.PersistenceLayer.ObjectStorage" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.PersistenceLayer.ObjectStorage.GetStorageOfObject(System.Object)">
      <apidata name="GetStorageOfObject" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="_object">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:OOAdvantech.PersistenceLayer.ObjectStorage" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.PersistenceLayer" />
        <type api="T:OOAdvantech.PersistenceLayer.ObjectStorage" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.PersistenceLayer.ObjectStorage.IsPersistent(System.Object)">
      <apidata name="IsPersistent" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="_object">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.PersistenceLayer" />
        <type api="T:OOAdvantech.PersistenceLayer.ObjectStorage" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.PersistenceLayer.ObjectStorage.NewObject(System.Type)">
      <apidata name="NewObject" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.PersistenceLayer" />
        <type api="T:OOAdvantech.PersistenceLayer.ObjectStorage" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.PersistenceLayer.ObjectStorage.NewObject(System.Type,System.Type[],System.Object[])">
      <apidata name="NewObject" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="paramsTypes">
          <arrayOf rank="1">
            <type api="T:System.Type" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="ctorParams" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.PersistenceLayer" />
        <type api="T:OOAdvantech.PersistenceLayer.ObjectStorage" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.PersistenceLayer.ObjectStorage.NewStorage(OOAdvantech.PersistenceLayer.Storage,System.String,System.String,System.String)">
      <apidata name="NewStorage" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="storageMetadata">
          <type api="T:OOAdvantech.PersistenceLayer.Storage" ref="true" />
        </parameter>
        <parameter name="StorageName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="StorageLocation">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="StorageType">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:OOAdvantech.PersistenceLayer.ObjectStorage" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.PersistenceLayer" />
        <type api="T:OOAdvantech.PersistenceLayer.ObjectStorage" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.PersistenceLayer.ObjectStorage.NewStorage(OOAdvantech.PersistenceLayer.Storage,System.String,System.String,System.String,System.Boolean)">
      <apidata name="NewStorage" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="storageMetadata">
          <type api="T:OOAdvantech.PersistenceLayer.Storage" ref="true" />
        </parameter>
        <parameter name="StorageName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="StorageLocation">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="StorageType">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="InProcess">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:OOAdvantech.PersistenceLayer.ObjectStorage" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.PersistenceLayer" />
        <type api="T:OOAdvantech.PersistenceLayer.ObjectStorage" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.PersistenceLayer.ObjectStorage.NewStorage(System.String,System.Object,System.String)">
      <apidata name="NewStorage" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="StorageName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="rawStorageData">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="storageType">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:OOAdvantech.PersistenceLayer.ObjectStorage" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.PersistenceLayer" />
        <type api="T:OOAdvantech.PersistenceLayer.ObjectStorage" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.PersistenceLayer.ObjectStorage.NewStorage(System.String,System.String,System.String)">
      <apidata name="NewStorage" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="StorageName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="StorageLocation">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="StorageType">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:OOAdvantech.PersistenceLayer.ObjectStorage" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.PersistenceLayer" />
        <type api="T:OOAdvantech.PersistenceLayer.ObjectStorage" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.PersistenceLayer.ObjectStorage.NewStorage(System.String,System.String,System.String,System.Boolean)">
      <apidata name="NewStorage" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="StorageName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="StorageLocation">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="StorageType">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="InProcess">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:OOAdvantech.PersistenceLayer.ObjectStorage" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.PersistenceLayer" />
        <type api="T:OOAdvantech.PersistenceLayer.ObjectStorage" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.PersistenceLayer.ObjectStorage.NewTransientObject(System.Type)">
      <apidata name="NewTransientObject" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.PersistenceLayer" />
        <type api="T:OOAdvantech.PersistenceLayer.ObjectStorage" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.PersistenceLayer.ObjectStorage.NewTransientObject(System.Type,System.Type[],System.Object[])">
      <apidata name="NewTransientObject" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="paramsTypes">
          <arrayOf rank="1">
            <type api="T:System.Type" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="ctorParams" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.PersistenceLayer" />
        <type api="T:OOAdvantech.PersistenceLayer.ObjectStorage" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.PersistenceLayer.ObjectStorage.OpenStorage(System.String,System.Object,System.String)">
      <apidata name="OpenStorage" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="storageName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="rawStorageData">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="storageType">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:OOAdvantech.PersistenceLayer.ObjectStorage" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.PersistenceLayer" />
        <type api="T:OOAdvantech.PersistenceLayer.ObjectStorage" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.PersistenceLayer.ObjectStorage.OpenStorage(System.String,System.String,System.String)">
      <apidata name="OpenStorage" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="StorageName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="StorageLocation">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="StorageType">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:OOAdvantech.PersistenceLayer.ObjectStorage" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.PersistenceLayer" />
        <type api="T:OOAdvantech.PersistenceLayer.ObjectStorage" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.PersistenceLayer.ObjectStorage.OpenStorage(System.String,System.String,System.String,System.Boolean)">
      <apidata name="OpenStorage" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="StorageName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="StorageLocation">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="StorageType">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="InProcess">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:OOAdvantech.PersistenceLayer.ObjectStorage" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.PersistenceLayer" />
        <type api="T:OOAdvantech.PersistenceLayer.ObjectStorage" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.PersistenceLayer.ObjectStorage.Parse(System.String)">
      <apidata name="Parse" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="OQLStatement">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:OOAdvantech.Collections.StructureSet" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.PersistenceLayer" />
        <type api="T:OOAdvantech.PersistenceLayer.ObjectStorage" ref="true" />
      </containers>
    </api>
    <api id="P:OOAdvantech.PersistenceLayer.ObjectStorage.PersistencyService">
      <apidata name="PersistencyService" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_PersistencyService" />
      <setter name="set_PersistencyService" />
      <returns>
        <type api="T:OOAdvantech.PersistenceLayer.IPersistencyService" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.PersistenceLayer" />
        <type api="T:OOAdvantech.PersistenceLayer.ObjectStorage" ref="true" />
      </containers>
    </api>
    <api id="F:OOAdvantech.PersistenceLayer.ObjectStorage.ReaderWriterLock">
      <apidata name="ReaderWriterLock" group="member" subgroup="field" />
      <memberdata visibility="family" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:OOAdvantech.Synchronization.ReaderWriterLock" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.PersistenceLayer" />
        <type api="T:OOAdvantech.PersistenceLayer.ObjectStorage" ref="true" />
      </containers>
    </api>
    <api id="P:OOAdvantech.PersistenceLayer.ObjectStorage.StorageMetaData">
      <apidata name="StorageMetaData" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_StorageMetaData" />
      <returns>
        <type api="T:OOAdvantech.PersistenceLayer.Storage" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.PersistenceLayer" />
        <type api="T:OOAdvantech.PersistenceLayer.ObjectStorage" ref="true" />
      </containers>
    </api>
    <api id="T:OOAdvantech.PersistenceLayer.ObjectStorageChangedEventHandler">
      <apidata name="ObjectStorageChangedEventHandler" group="type" subgroup="delegate" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.PersistenceLayer" />
      </containers>
    </api>
    <api id="T:OOAdvantech.PersistenceLayer.Storage">
      <apidata name="Storage" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <implementors>
        <type api="T:OOAdvantech.MetaDataRepository.Storage" ref="true" />
      </implementors>
      <elements>
        <element api="M:OOAdvantech.PersistenceLayer.Storage.RegisterComponent(System.String)" />
        <element api="M:OOAdvantech.PersistenceLayer.Storage.RegisterComponent(System.String[])" />
        <element api="P:OOAdvantech.PersistenceLayer.Storage.StorageIdentity" />
        <element api="P:OOAdvantech.PersistenceLayer.Storage.StorageLocation" />
        <element api="P:OOAdvantech.PersistenceLayer.Storage.StorageType" />
        <element api="P:OOAdvantech.PersistenceLayer.Storage.StorageName" />
      </elements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.PersistenceLayer" />
      </containers>
    </api>
    <api id="M:OOAdvantech.PersistenceLayer.Storage.RegisterComponent(System.String)">
      <apidata name="RegisterComponent" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="assemblyFullName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.PersistenceLayer" />
        <type api="T:OOAdvantech.PersistenceLayer.Storage" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.PersistenceLayer.Storage.RegisterComponent(System.String[])">
      <apidata name="RegisterComponent" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="assembliesFullNames">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.PersistenceLayer" />
        <type api="T:OOAdvantech.PersistenceLayer.Storage" ref="true" />
      </containers>
    </api>
    <api id="P:OOAdvantech.PersistenceLayer.Storage.StorageIdentity">
      <apidata name="StorageIdentity" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_StorageIdentity" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.PersistenceLayer" />
        <type api="T:OOAdvantech.PersistenceLayer.Storage" ref="true" />
      </containers>
    </api>
    <api id="P:OOAdvantech.PersistenceLayer.Storage.StorageLocation">
      <apidata name="StorageLocation" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_StorageLocation" />
      <setter name="set_StorageLocation" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.PersistenceLayer" />
        <type api="T:OOAdvantech.PersistenceLayer.Storage" ref="true" />
      </containers>
    </api>
    <api id="P:OOAdvantech.PersistenceLayer.Storage.StorageName">
      <apidata name="StorageName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_StorageName" />
      <setter name="set_StorageName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.PersistenceLayer" />
        <type api="T:OOAdvantech.PersistenceLayer.Storage" ref="true" />
      </containers>
    </api>
    <api id="P:OOAdvantech.PersistenceLayer.Storage.StorageType">
      <apidata name="StorageType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_StorageType" />
      <setter name="set_StorageType" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.PersistenceLayer" />
        <type api="T:OOAdvantech.PersistenceLayer.Storage" ref="true" />
      </containers>
    </api>
    <api id="T:OOAdvantech.PersistenceLayer.StorageException">
      <apidata name="StorageException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="F:OOAdvantech.PersistenceLayer.StorageException.Reason" />
        <element api="M:OOAdvantech.PersistenceLayer.StorageException.#ctor" />
        <element api="M:OOAdvantech.PersistenceLayer.StorageException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:OOAdvantech.PersistenceLayer.StorageException.#ctor(System.String,OOAdvantech.PersistenceLayer.StorageException.ExceptionReason)" />
        <element api="M:OOAdvantech.PersistenceLayer.StorageException.#ctor(System.String,OOAdvantech.PersistenceLayer.StorageException.ExceptionReason,System.Exception)" />
        <element api="M:OOAdvantech.PersistenceLayer.StorageException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetBaseException">
          <apidata name="GetBaseException" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.GetBaseException">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.ToString">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.ToString">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.GetType">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Message">
          <apidata name="Message" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_Message" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.Message">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Data">
          <apidata name="Data" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_Data" />
          <returns>
            <type api="T:System.Collections.IDictionary" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.InnerException">
          <apidata name="InnerException" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_InnerException" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.InnerException">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.TargetSite">
          <apidata name="TargetSite" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_TargetSite" />
          <returns>
            <type api="T:System.Reflection.MethodBase" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.TargetSite">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.StackTrace">
          <apidata name="StackTrace" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_StackTrace" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.StackTrace">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.HelpLink">
          <apidata name="HelpLink" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_HelpLink" />
          <setter name="set_HelpLink" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.HelpLink">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Source">
          <apidata name="Source" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Source" />
          <setter name="set_Source" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.Source">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.HResult">
          <apidata name="HResult" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_HResult" />
          <setter name="set_HResult" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.PersistenceLayer" />
      </containers>
    </api>
    <api id="M:OOAdvantech.PersistenceLayer.StorageException.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.PersistenceLayer" />
        <type api="T:OOAdvantech.PersistenceLayer.StorageException" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.PersistenceLayer.StorageException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.PersistenceLayer" />
        <type api="T:OOAdvantech.PersistenceLayer.StorageException" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.PersistenceLayer.StorageException.#ctor(System.String,OOAdvantech.PersistenceLayer.StorageException.ExceptionReason)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="reason">
          <type api="T:OOAdvantech.PersistenceLayer.StorageException.ExceptionReason" ref="false">
            <type api="T:OOAdvantech.PersistenceLayer.StorageException" ref="true" />
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.PersistenceLayer" />
        <type api="T:OOAdvantech.PersistenceLayer.StorageException" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.PersistenceLayer.StorageException.#ctor(System.String,OOAdvantech.PersistenceLayer.StorageException.ExceptionReason,System.Exception)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="reason">
          <type api="T:OOAdvantech.PersistenceLayer.StorageException.ExceptionReason" ref="false">
            <type api="T:OOAdvantech.PersistenceLayer.StorageException" ref="true" />
          </type>
        </parameter>
        <parameter name="inerrException">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.PersistenceLayer" />
        <type api="T:OOAdvantech.PersistenceLayer.StorageException" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.PersistenceLayer.StorageException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <apidata name="GetObjectData" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Exception" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
        </member>
        <member api="M:System.Runtime.InteropServices._Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.PersistenceLayer" />
        <type api="T:OOAdvantech.PersistenceLayer.StorageException" ref="true" />
      </containers>
    </api>
    <api id="F:OOAdvantech.PersistenceLayer.StorageException.Reason">
      <apidata name="Reason" group="member" subgroup="field" />
      <memberdata visibility="public" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:OOAdvantech.PersistenceLayer.StorageException.ExceptionReason" ref="false">
          <type api="T:OOAdvantech.PersistenceLayer.StorageException" ref="true" />
        </type>
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.PersistenceLayer" />
        <type api="T:OOAdvantech.PersistenceLayer.StorageException" ref="true" />
      </containers>
    </api>
    <api id="T:OOAdvantech.PersistenceLayer.StorageException.ExceptionReason">
      <apidata name="ExceptionReason" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="F:OOAdvantech.PersistenceLayer.StorageException.ExceptionReason.Unknown" />
        <element api="F:OOAdvantech.PersistenceLayer.StorageException.ExceptionReason.StorageDoesnotExist" />
        <element api="F:OOAdvantech.PersistenceLayer.StorageException.ExceptionReason.CanotConnectWithStorage" />
        <element api="F:OOAdvantech.PersistenceLayer.StorageException.ExceptionReason.StorageProviderError" />
      </elements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.PersistenceLayer" />
        <type api="T:OOAdvantech.PersistenceLayer.StorageException" ref="true" />
      </containers>
    </api>
    <api id="F:OOAdvantech.PersistenceLayer.StorageException.ExceptionReason.CanotConnectWithStorage">
      <apidata name="CanotConnectWithStorage" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:OOAdvantech.PersistenceLayer.StorageException.ExceptionReason" ref="false">
          <type api="T:OOAdvantech.PersistenceLayer.StorageException" ref="true" />
        </type>
      </returns>
      <value>2</value>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.PersistenceLayer" />
        <type api="T:OOAdvantech.PersistenceLayer.StorageException.ExceptionReason" ref="false">
          <type api="T:OOAdvantech.PersistenceLayer.StorageException" ref="true" />
        </type>
      </containers>
    </api>
    <api id="F:OOAdvantech.PersistenceLayer.StorageException.ExceptionReason.StorageDoesnotExist">
      <apidata name="StorageDoesnotExist" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:OOAdvantech.PersistenceLayer.StorageException.ExceptionReason" ref="false">
          <type api="T:OOAdvantech.PersistenceLayer.StorageException" ref="true" />
        </type>
      </returns>
      <value>1</value>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.PersistenceLayer" />
        <type api="T:OOAdvantech.PersistenceLayer.StorageException.ExceptionReason" ref="false">
          <type api="T:OOAdvantech.PersistenceLayer.StorageException" ref="true" />
        </type>
      </containers>
    </api>
    <api id="F:OOAdvantech.PersistenceLayer.StorageException.ExceptionReason.StorageProviderError">
      <apidata name="StorageProviderError" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:OOAdvantech.PersistenceLayer.StorageException.ExceptionReason" ref="false">
          <type api="T:OOAdvantech.PersistenceLayer.StorageException" ref="true" />
        </type>
      </returns>
      <value>3</value>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.PersistenceLayer" />
        <type api="T:OOAdvantech.PersistenceLayer.StorageException.ExceptionReason" ref="false">
          <type api="T:OOAdvantech.PersistenceLayer.StorageException" ref="true" />
        </type>
      </containers>
    </api>
    <api id="F:OOAdvantech.PersistenceLayer.StorageException.ExceptionReason.Unknown">
      <apidata name="Unknown" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:OOAdvantech.PersistenceLayer.StorageException.ExceptionReason" ref="false">
          <type api="T:OOAdvantech.PersistenceLayer.StorageException" ref="true" />
        </type>
      </returns>
      <value>0</value>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.PersistenceLayer" />
        <type api="T:OOAdvantech.PersistenceLayer.StorageException.ExceptionReason" ref="false">
          <type api="T:OOAdvantech.PersistenceLayer.StorageException" ref="true" />
        </type>
      </containers>
    </api>
    <api id="T:OOAdvantech.PersistenceLayer.StorageInstanceRef">
      <apidata name="StorageInstanceRef" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.MarshalByRefObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:OOAdvantech.Remoting.IExtMarshalByRefObject" ref="true" />
      </implements>
      <elements>
        <element api="F:OOAdvantech.PersistenceLayer.StorageInstanceRef._ObjectStorage" />
        <element api="M:OOAdvantech.PersistenceLayer.StorageInstanceRef.GetStorageInstanceRef(System.Object)" />
        <element api="M:OOAdvantech.PersistenceLayer.StorageInstanceRef.GetStorageInstanceRef(OOAdvantech.ExtensionProperties)" />
        <element api="M:OOAdvantech.PersistenceLayer.StorageInstanceRef.GetObjectCollection(OOAdvantech.PersistenceLayer.ObjectContainer)" />
        <element api="M:OOAdvantech.PersistenceLayer.StorageInstanceRef.SetObjectCollection(OOAdvantech.PersistenceLayer.ObjectContainer,OOAdvantech.PersistenceLayer.ObjectCollection)" />
        <element api="M:OOAdvantech.PersistenceLayer.StorageInstanceRef.LazyFetching(System.String,System.Type)" />
        <element api="M:OOAdvantech.PersistenceLayer.StorageInstanceRef.#ctor" />
        <element api="P:OOAdvantech.PersistenceLayer.StorageInstanceRef.ObjectStorage" />
        <element api="P:OOAdvantech.PersistenceLayer.StorageInstanceRef.MemoryInstance" />
        <element api="P:OOAdvantech.PersistenceLayer.StorageInstanceRef.ObjectID" />
        <element api="P:OOAdvantech.PersistenceLayer.StorageInstanceRef.IsPersistent" />
        <element api="M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="cloneIdentity">
              <type api="T:System.Boolean" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.MarshalByRefObject" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.MarshalByRefObject" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.MarshalByRefObject.GetLifetimeService">
          <apidata name="GetLifetimeService" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.MarshalByRefObject" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Security.Permissions.SecurityPermissionAttribute" ref="true" />
              <argument>
                <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
                <enumValue>
                  <field name="LinkDemand" />
                </enumValue>
              </argument>
              <assignment name="Flags">
                <type api="T:System.Security.Permissions.SecurityPermissionFlag" ref="false" />
                <enumValue>
                  <field name="Infrastructure" />
                </enumValue>
              </assignment>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.MarshalByRefObject.InitializeLifetimeService">
          <apidata name="InitializeLifetimeService" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.MarshalByRefObject" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Security.Permissions.SecurityPermissionAttribute" ref="true" />
              <argument>
                <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
                <enumValue>
                  <field name="LinkDemand" />
                </enumValue>
              </argument>
              <assignment name="Flags">
                <type api="T:System.Security.Permissions.SecurityPermissionFlag" ref="false" />
                <enumValue>
                  <field name="Infrastructure" />
                </enumValue>
              </assignment>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.MarshalByRefObject.CreateObjRef(System.Type)">
          <apidata name="CreateObjRef" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="requestedType">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Runtime.Remoting.ObjRef" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.MarshalByRefObject" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Security.Permissions.SecurityPermissionAttribute" ref="true" />
              <argument>
                <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
                <enumValue>
                  <field name="LinkDemand" />
                </enumValue>
              </argument>
              <assignment name="Flags">
                <type api="T:System.Security.Permissions.SecurityPermissionFlag" ref="false" />
                <enumValue>
                  <field name="Infrastructure" />
                </enumValue>
              </assignment>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.PersistenceLayer" />
      </containers>
    </api>
    <api id="M:OOAdvantech.PersistenceLayer.StorageInstanceRef.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.PersistenceLayer" />
        <type api="T:OOAdvantech.PersistenceLayer.StorageInstanceRef" ref="true" />
      </containers>
    </api>
    <api id="F:OOAdvantech.PersistenceLayer.StorageInstanceRef._ObjectStorage">
      <apidata name="_ObjectStorage" group="member" subgroup="field" />
      <memberdata visibility="family" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:OOAdvantech.PersistenceLayer.ObjectStorage" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.PersistenceLayer" />
        <type api="T:OOAdvantech.PersistenceLayer.StorageInstanceRef" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.PersistenceLayer.StorageInstanceRef.GetObjectCollection(OOAdvantech.PersistenceLayer.ObjectContainer)">
      <apidata name="GetObjectCollection" group="member" subgroup="method" />
      <memberdata visibility="family" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="objectContainer">
          <type api="T:OOAdvantech.PersistenceLayer.ObjectContainer" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:OOAdvantech.PersistenceLayer.ObjectCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.PersistenceLayer" />
        <type api="T:OOAdvantech.PersistenceLayer.StorageInstanceRef" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.PersistenceLayer.StorageInstanceRef.GetStorageInstanceRef(OOAdvantech.ExtensionProperties)">
      <apidata name="GetStorageInstanceRef" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="extensionProperties">
          <type api="T:OOAdvantech.ExtensionProperties" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:OOAdvantech.PersistenceLayer.StorageInstanceRef" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.PersistenceLayer" />
        <type api="T:OOAdvantech.PersistenceLayer.StorageInstanceRef" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.PersistenceLayer.StorageInstanceRef.GetStorageInstanceRef(System.Object)">
      <apidata name="GetStorageInstanceRef" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="persistentObject">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:OOAdvantech.PersistenceLayer.StorageInstanceRef" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.PersistenceLayer" />
        <type api="T:OOAdvantech.PersistenceLayer.StorageInstanceRef" ref="true" />
      </containers>
    </api>
    <api id="P:OOAdvantech.PersistenceLayer.StorageInstanceRef.IsPersistent">
      <apidata name="IsPersistent" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_IsPersistent" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.PersistenceLayer" />
        <type api="T:OOAdvantech.PersistenceLayer.StorageInstanceRef" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.PersistenceLayer.StorageInstanceRef.LazyFetching(System.String,System.Type)">
      <apidata name="LazyFetching" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="FieldName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="DeclaringType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.PersistenceLayer" />
        <type api="T:OOAdvantech.PersistenceLayer.StorageInstanceRef" ref="true" />
      </containers>
    </api>
    <api id="P:OOAdvantech.PersistenceLayer.StorageInstanceRef.MemoryInstance">
      <apidata name="MemoryInstance" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_MemoryInstance" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.PersistenceLayer" />
        <type api="T:OOAdvantech.PersistenceLayer.StorageInstanceRef" ref="true" />
      </containers>
    </api>
    <api id="P:OOAdvantech.PersistenceLayer.StorageInstanceRef.ObjectID">
      <apidata name="ObjectID" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_ObjectID" />
      <setter name="set_ObjectID" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.PersistenceLayer" />
        <type api="T:OOAdvantech.PersistenceLayer.StorageInstanceRef" ref="true" />
      </containers>
    </api>
    <api id="P:OOAdvantech.PersistenceLayer.StorageInstanceRef.ObjectStorage">
      <apidata name="ObjectStorage" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ObjectStorage" />
      <returns>
        <type api="T:OOAdvantech.PersistenceLayer.ObjectStorage" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.PersistenceLayer" />
        <type api="T:OOAdvantech.PersistenceLayer.StorageInstanceRef" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.PersistenceLayer.StorageInstanceRef.SetObjectCollection(OOAdvantech.PersistenceLayer.ObjectContainer,OOAdvantech.PersistenceLayer.ObjectCollection)">
      <apidata name="SetObjectCollection" group="member" subgroup="method" />
      <memberdata visibility="family" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="objectContainer">
          <type api="T:OOAdvantech.PersistenceLayer.ObjectContainer" ref="true" />
        </parameter>
        <parameter name="objectCollection">
          <type api="T:OOAdvantech.PersistenceLayer.ObjectCollection" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.PersistenceLayer" />
        <type api="T:OOAdvantech.PersistenceLayer.StorageInstanceRef" ref="true" />
      </containers>
    </api>
    <api id="T:OOAdvantech.PersistenceLayer.StorageInstanceRef.ObjectSate">
      <apidata name="ObjectSate" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:OOAdvantech.PersistenceLayer.StorageInstanceRef.ObjectSate.#ctor(System.Object[],System.Collections.Generic.Dictionary{System.String,System.Int32})" />
        <element api="M:OOAdvantech.PersistenceLayer.StorageInstanceRef.ObjectSate.#ctor(System.Data.DataRow)" />
        <element api="P:OOAdvantech.PersistenceLayer.StorageInstanceRef.ObjectSate.Item(System.String)" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.PersistenceLayer" />
        <type api="T:OOAdvantech.PersistenceLayer.StorageInstanceRef" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.PersistenceLayer.StorageInstanceRef.ObjectSate.#ctor(System.Data.DataRow)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="dbDataRecord">
          <type api="T:System.Data.DataRow" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.PersistenceLayer" />
        <type api="T:OOAdvantech.PersistenceLayer.StorageInstanceRef.ObjectSate" ref="true">
          <type api="T:OOAdvantech.PersistenceLayer.StorageInstanceRef" ref="true" />
        </type>
      </containers>
    </api>
    <api id="M:OOAdvantech.PersistenceLayer.StorageInstanceRef.ObjectSate.#ctor(System.Object[],System.Collections.Generic.Dictionary{System.String,System.Int32})">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="values">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="columnsIndices">
          <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
              <type api="T:System.Int32" ref="false" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.PersistenceLayer" />
        <type api="T:OOAdvantech.PersistenceLayer.StorageInstanceRef.ObjectSate" ref="true">
          <type api="T:OOAdvantech.PersistenceLayer.StorageInstanceRef" ref="true" />
        </type>
      </containers>
    </api>
    <api id="P:OOAdvantech.PersistenceLayer.StorageInstanceRef.ObjectSate.Item(System.String)">
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Item" />
      <parameters>
        <parameter name="index">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.PersistenceLayer" />
        <type api="T:OOAdvantech.PersistenceLayer.StorageInstanceRef.ObjectSate" ref="true">
          <type api="T:OOAdvantech.PersistenceLayer.StorageInstanceRef" ref="true" />
        </type>
      </containers>
    </api>
    <api id="T:OOAdvantech.PersistenceLayer.StorageServerInstanceLocator">
      <apidata name="StorageServerInstanceLocator" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:OOAdvantech.Remoting.MonoStateClass" ref="true" />
          <type api="T:System.MarshalByRefObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:OOAdvantech.PersistenceLayer.StorageServerInstanceLocator.#ctor" />
        <element api="M:OOAdvantech.PersistenceLayer.StorageServerInstanceLocator.GetStorageServerInstanceLocator" />
        <element api="M:OOAdvantech.PersistenceLayer.StorageServerInstanceLocator.GetServiceForInstance(System.String)" />
        <element api="M:OOAdvantech.PersistenceLayer.StorageServerInstanceLocator.Start(System.String)" />
        <element api="M:OOAdvantech.PersistenceLayer.StorageServerInstanceLocator.Stop(System.String)" />
        <element api="M:OOAdvantech.PersistenceLayer.StorageServerInstanceLocator.GetStorageServerInstances" />
        <element api="M:OOAdvantech.PersistenceLayer.StorageServerInstanceLocator.GetPersistencyService(System.String)" />
        <element api="M:OOAdvantech.PersistenceLayer.StorageServerInstanceLocator.GetTCPPort(System.String)" />
        <element api="P:OOAdvantech.PersistenceLayer.StorageServerInstanceLocator.InStorageService" />
        <element api="P:OOAdvantech.PersistenceLayer.StorageServerInstanceLocator.Current" />
        <element api="M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="cloneIdentity">
              <type api="T:System.Boolean" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.MarshalByRefObject" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.MarshalByRefObject" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.MarshalByRefObject.GetLifetimeService">
          <apidata name="GetLifetimeService" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.MarshalByRefObject" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Security.Permissions.SecurityPermissionAttribute" ref="true" />
              <argument>
                <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
                <enumValue>
                  <field name="LinkDemand" />
                </enumValue>
              </argument>
              <assignment name="Flags">
                <type api="T:System.Security.Permissions.SecurityPermissionFlag" ref="false" />
                <enumValue>
                  <field name="Infrastructure" />
                </enumValue>
              </assignment>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.MarshalByRefObject.InitializeLifetimeService">
          <apidata name="InitializeLifetimeService" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.MarshalByRefObject" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Security.Permissions.SecurityPermissionAttribute" ref="true" />
              <argument>
                <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
                <enumValue>
                  <field name="LinkDemand" />
                </enumValue>
              </argument>
              <assignment name="Flags">
                <type api="T:System.Security.Permissions.SecurityPermissionFlag" ref="false" />
                <enumValue>
                  <field name="Infrastructure" />
                </enumValue>
              </assignment>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.MarshalByRefObject.CreateObjRef(System.Type)">
          <apidata name="CreateObjRef" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="requestedType">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Runtime.Remoting.ObjRef" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.MarshalByRefObject" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Security.Permissions.SecurityPermissionAttribute" ref="true" />
              <argument>
                <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
                <enumValue>
                  <field name="LinkDemand" />
                </enumValue>
              </argument>
              <assignment name="Flags">
                <type api="T:System.Security.Permissions.SecurityPermissionFlag" ref="false" />
                <enumValue>
                  <field name="Infrastructure" />
                </enumValue>
              </assignment>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.PersistenceLayer" />
      </containers>
    </api>
    <api id="M:OOAdvantech.PersistenceLayer.StorageServerInstanceLocator.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.PersistenceLayer" />
        <type api="T:OOAdvantech.PersistenceLayer.StorageServerInstanceLocator" ref="true" />
      </containers>
    </api>
    <api id="P:OOAdvantech.PersistenceLayer.StorageServerInstanceLocator.Current">
      <apidata name="Current" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Current" />
      <returns>
        <type api="T:OOAdvantech.PersistenceLayer.StorageServerInstanceLocator" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.PersistenceLayer" />
        <type api="T:OOAdvantech.PersistenceLayer.StorageServerInstanceLocator" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.PersistenceLayer.StorageServerInstanceLocator.GetPersistencyService(System.String)">
      <apidata name="GetPersistencyService" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="instanceName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:OOAdvantech.PersistenceLayer.IPersistencyService" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.PersistenceLayer" />
        <type api="T:OOAdvantech.PersistenceLayer.StorageServerInstanceLocator" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.PersistenceLayer.StorageServerInstanceLocator.GetServiceForInstance(System.String)">
      <apidata name="GetServiceForInstance" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="instanceName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ServiceProcess.ServiceController" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.PersistenceLayer" />
        <type api="T:OOAdvantech.PersistenceLayer.StorageServerInstanceLocator" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.PersistenceLayer.StorageServerInstanceLocator.GetStorageServerInstanceLocator">
      <apidata name="GetStorageServerInstanceLocator" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:OOAdvantech.PersistenceLayer.StorageServerInstanceLocator" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.PersistenceLayer" />
        <type api="T:OOAdvantech.PersistenceLayer.StorageServerInstanceLocator" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.PersistenceLayer.StorageServerInstanceLocator.GetStorageServerInstances">
      <apidata name="GetStorageServerInstances" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.String" ref="true" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.PersistenceLayer" />
        <type api="T:OOAdvantech.PersistenceLayer.StorageServerInstanceLocator" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.PersistenceLayer.StorageServerInstanceLocator.GetTCPPort(System.String)">
      <apidata name="GetTCPPort" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="instanceName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.PersistenceLayer" />
        <type api="T:OOAdvantech.PersistenceLayer.StorageServerInstanceLocator" ref="true" />
      </containers>
    </api>
    <api id="P:OOAdvantech.PersistenceLayer.StorageServerInstanceLocator.InStorageService">
      <apidata name="InStorageService" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="assembly" />
      <getter name="get_InStorageService" />
      <setter name="set_InStorageService" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.PersistenceLayer" />
        <type api="T:OOAdvantech.PersistenceLayer.StorageServerInstanceLocator" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.PersistenceLayer.StorageServerInstanceLocator.Start(System.String)">
      <apidata name="Start" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="instanceName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.PersistenceLayer" />
        <type api="T:OOAdvantech.PersistenceLayer.StorageServerInstanceLocator" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.PersistenceLayer.StorageServerInstanceLocator.Stop(System.String)">
      <apidata name="Stop" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="instanceName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.PersistenceLayer" />
        <type api="T:OOAdvantech.PersistenceLayer.StorageServerInstanceLocator" ref="true" />
      </containers>
    </api>
    <api id="N:OOAdvantech.Remoting">
      <apidata name="OOAdvantech.Remoting" group="namespace" />
      <elements>
        <element api="T:OOAdvantech.Remoting.IExtMarshalByRefObject" />
        <element api="T:OOAdvantech.Remoting.RemoteEventSubscription" />
        <element api="T:OOAdvantech.Remoting.IRemoteEventHandler" />
        <element api="T:OOAdvantech.Remoting.ClientSessionPart" />
        <element api="T:OOAdvantech.Remoting.MonoStateClass" />
        <element api="T:OOAdvantech.Remoting.IObjectValuesCollectorService" />
        <element api="T:OOAdvantech.Remoting.RemoteObjectValuesCollector" />
        <element api="T:OOAdvantech.Remoting.RemoteEventHandler" />
        <element api="T:OOAdvantech.Remoting.RemotingException" />
        <element api="T:OOAdvantech.Remoting.RemotingException.ExceptionCause" />
        <element api="T:OOAdvantech.Remoting.ExtObjectUri" />
        <element api="T:OOAdvantech.Remoting.RemotingServices" />
        <element api="T:OOAdvantech.Remoting.Proxy" />
        <element api="T:OOAdvantech.Remoting.EventSubscrioption" />
        <element api="T:OOAdvantech.Remoting.PendingEvent" />
        <element api="T:OOAdvantech.Remoting.ServerSessionPart" />
        <element api="T:OOAdvantech.Remoting.IPersistentObjectLifeTimeController" />
      </elements>
    </api>
    <api id="T:OOAdvantech.Remoting.ClientSessionPart">
      <apidata name="ClientSessionPart" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.MarshalByRefObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:OOAdvantech.Remoting.IRemoteEventHandler" ref="true" />
      </implements>
      <elements>
        <element api="F:OOAdvantech.Remoting.ClientSessionPart.CollectedProxies" />
        <element api="F:OOAdvantech.Remoting.ClientSessionPart.JustCreatedProxies" />
        <element api="F:OOAdvantech.Remoting.ClientSessionPart.Proxies" />
        <element api="F:OOAdvantech.Remoting.ClientSessionPart.ServerProcessIdentity" />
        <element api="M:OOAdvantech.Remoting.ClientSessionPart.Unsubscribe(OOAdvantech.Remoting.Proxy,System.Reflection.EventInfo)" />
        <element api="M:OOAdvantech.Remoting.ClientSessionPart.Unsubscribe(System.Collections.Generic.List{OOAdvantech.Remoting.RemoteEventSubscription})" />
        <element api="M:OOAdvantech.Remoting.ClientSessionPart.Subscribe(System.Collections.Generic.List{OOAdvantech.Remoting.RemoteEventSubscription})" />
        <element api="M:OOAdvantech.Remoting.ClientSessionPart.Subscribe(OOAdvantech.Remoting.Proxy,System.Reflection.EventInfo,System.Boolean)" />
        <element api="M:OOAdvantech.Remoting.ClientSessionPart.Finalize" />
        <element api="M:OOAdvantech.Remoting.ClientSessionPart.#ctor(System.String)" />
        <element api="M:OOAdvantech.Remoting.ClientSessionPart.EventCallback(System.String,System.Reflection.EventInfo,OOAdvantech.Collections.ArrayList)" />
        <element api="M:OOAdvantech.Remoting.ClientSessionPart.ThereArePendingEvents(System.Int32)" />
        <element api="M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="cloneIdentity">
              <type api="T:System.Boolean" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.MarshalByRefObject" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.MarshalByRefObject" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.MarshalByRefObject.GetLifetimeService">
          <apidata name="GetLifetimeService" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.MarshalByRefObject" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Security.Permissions.SecurityPermissionAttribute" ref="true" />
              <argument>
                <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
                <enumValue>
                  <field name="LinkDemand" />
                </enumValue>
              </argument>
              <assignment name="Flags">
                <type api="T:System.Security.Permissions.SecurityPermissionFlag" ref="false" />
                <enumValue>
                  <field name="Infrastructure" />
                </enumValue>
              </assignment>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.MarshalByRefObject.InitializeLifetimeService">
          <apidata name="InitializeLifetimeService" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.MarshalByRefObject" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Security.Permissions.SecurityPermissionAttribute" ref="true" />
              <argument>
                <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
                <enumValue>
                  <field name="LinkDemand" />
                </enumValue>
              </argument>
              <assignment name="Flags">
                <type api="T:System.Security.Permissions.SecurityPermissionFlag" ref="false" />
                <enumValue>
                  <field name="Infrastructure" />
                </enumValue>
              </assignment>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.MarshalByRefObject.CreateObjRef(System.Type)">
          <apidata name="CreateObjRef" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="requestedType">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Runtime.Remoting.ObjRef" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.MarshalByRefObject" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Security.Permissions.SecurityPermissionAttribute" ref="true" />
              <argument>
                <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
                <enumValue>
                  <field name="LinkDemand" />
                </enumValue>
              </argument>
              <assignment name="Flags">
                <type api="T:System.Security.Permissions.SecurityPermissionFlag" ref="false" />
                <enumValue>
                  <field name="Infrastructure" />
                </enumValue>
              </assignment>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Remoting" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Remoting.ClientSessionPart.#ctor(System.String)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="channelUri">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Remoting" />
        <type api="T:OOAdvantech.Remoting.ClientSessionPart" ref="true" />
      </containers>
    </api>
    <api id="F:OOAdvantech.Remoting.ClientSessionPart.CollectedProxies">
      <apidata name="CollectedProxies" group="member" subgroup="field" />
      <memberdata visibility="family" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Collections.Generic.List`1" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Remoting" />
        <type api="T:OOAdvantech.Remoting.ClientSessionPart" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.IgnoreErrorCheckAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.RoleBMultiplicityRangeAttribute" ref="true" />
          <argument>
            <type api="T:System.UInt64" ref="false" />
            <value>0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.RoleAMultiplicityRangeAttribute" ref="true" />
          <argument>
            <type api="T:System.UInt64" ref="false" />
            <value>0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.AssociationAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:OOAdvantech.Remoting.Proxy" ref="true" />
            </typeValue>
          </argument>
          <argument>
            <type api="T:OOAdvantech.MetaDataRepository.Roles" ref="false" />
            <enumValue>
              <field name="RoleA" />
            </enumValue>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>aeddc231-2938-4c8d-b623-30b7e36baa4c</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:OOAdvantech.Remoting.ClientSessionPart.EventCallback(System.String,System.Reflection.EventInfo,OOAdvantech.Collections.ArrayList)">
      <apidata name="EventCallback" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="objectUri">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="eventInfo">
          <type api="T:System.Reflection.EventInfo" ref="true" />
        </parameter>
        <parameter name="args">
          <type api="T:OOAdvantech.Collections.ArrayList" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Remoting" />
        <type api="T:OOAdvantech.Remoting.ClientSessionPart" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Remoting.ClientSessionPart.Finalize">
      <apidata name="Finalize" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.Finalize">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Remoting" />
        <type api="T:OOAdvantech.Remoting.ClientSessionPart" ref="true" />
      </containers>
    </api>
    <api id="F:OOAdvantech.Remoting.ClientSessionPart.JustCreatedProxies">
      <apidata name="JustCreatedProxies" group="member" subgroup="field" />
      <memberdata visibility="family" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
            <type api="T:System.WeakReference" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Remoting" />
        <type api="T:OOAdvantech.Remoting.ClientSessionPart" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.RoleBMultiplicityRangeAttribute" ref="true" />
          <argument>
            <type api="T:System.UInt64" ref="false" />
            <value>0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.AssociationAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:OOAdvantech.Remoting.Proxy" ref="true" />
            </typeValue>
          </argument>
          <argument>
            <type api="T:OOAdvantech.MetaDataRepository.Roles" ref="false" />
            <enumValue>
              <field name="RoleA" />
            </enumValue>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>59857e21-c10a-4f88-8376-b0c3b86264d2</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.IgnoreErrorCheckAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.RoleAMultiplicityRangeAttribute" ref="true" />
          <argument>
            <type api="T:System.UInt64" ref="false" />
            <value>0</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="F:OOAdvantech.Remoting.ClientSessionPart.Proxies">
      <apidata name="Proxies" group="member" subgroup="field" />
      <memberdata visibility="family" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
            <type api="T:System.WeakReference" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Remoting" />
        <type api="T:OOAdvantech.Remoting.ClientSessionPart" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.AssociationAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>SessionProxies</value>
          </argument>
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:OOAdvantech.Remoting.Proxy" ref="true" />
            </typeValue>
          </argument>
          <argument>
            <type api="T:OOAdvantech.MetaDataRepository.Roles" ref="false" />
            <enumValue>
              <field name="RoleA" />
            </enumValue>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>72d444ac-2dfa-4f93-b43d-e22e3116a58f</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.IgnoreErrorCheckAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.RoleAMultiplicityRangeAttribute" ref="true" />
          <argument>
            <type api="T:System.UInt64" ref="false" />
            <value>1</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.RoleBMultiplicityRangeAttribute" ref="true" />
          <argument>
            <type api="T:System.UInt64" ref="false" />
            <value>0</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="F:OOAdvantech.Remoting.ClientSessionPart.ServerProcessIdentity">
      <apidata name="ServerProcessIdentity" group="member" subgroup="field" />
      <memberdata visibility="public" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Guid" ref="false" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Remoting" />
        <type api="T:OOAdvantech.Remoting.ClientSessionPart" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Remoting.ClientSessionPart.Subscribe(OOAdvantech.Remoting.Proxy,System.Reflection.EventInfo,System.Boolean)">
      <apidata name="Subscribe" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="proxy">
          <type api="T:OOAdvantech.Remoting.Proxy" ref="true" />
        </parameter>
        <parameter name="eventInfo">
          <type api="T:System.Reflection.EventInfo" ref="true" />
        </parameter>
        <parameter name="allowAsynchronous">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Remoting" />
        <type api="T:OOAdvantech.Remoting.ClientSessionPart" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Remoting.ClientSessionPart.Subscribe(System.Collections.Generic.List{OOAdvantech.Remoting.RemoteEventSubscription})">
      <apidata name="Subscribe" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="eventSubscriptions">
          <type api="T:System.Collections.Generic.List`1" ref="true">
            <specialization>
              <type api="T:OOAdvantech.Remoting.RemoteEventSubscription" ref="false" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Remoting" />
        <type api="T:OOAdvantech.Remoting.ClientSessionPart" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Remoting.ClientSessionPart.ThereArePendingEvents(System.Int32)">
      <apidata name="ThereArePendingEvents" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="pendingEventsHandlingCode">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:OOAdvantech.Remoting.IRemoteEventHandler.ThereArePendingEvents(System.Int32)">
          <type api="T:OOAdvantech.Remoting.IRemoteEventHandler" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Remoting" />
        <type api="T:OOAdvantech.Remoting.ClientSessionPart" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Remoting.ClientSessionPart.Unsubscribe(OOAdvantech.Remoting.Proxy,System.Reflection.EventInfo)">
      <apidata name="Unsubscribe" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="proxy">
          <type api="T:OOAdvantech.Remoting.Proxy" ref="true" />
        </parameter>
        <parameter name="eventInfo">
          <type api="T:System.Reflection.EventInfo" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Remoting" />
        <type api="T:OOAdvantech.Remoting.ClientSessionPart" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Remoting.ClientSessionPart.Unsubscribe(System.Collections.Generic.List{OOAdvantech.Remoting.RemoteEventSubscription})">
      <apidata name="Unsubscribe" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="eventSubscriptions">
          <type api="T:System.Collections.Generic.List`1" ref="true">
            <specialization>
              <type api="T:OOAdvantech.Remoting.RemoteEventSubscription" ref="false" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Remoting" />
        <type api="T:OOAdvantech.Remoting.ClientSessionPart" ref="true" />
      </containers>
    </api>
    <api id="T:OOAdvantech.Remoting.EventSubscrioption">
      <apidata name="EventSubscrioption" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" layout="sequential" format="ansi" />
      <elements>
        <element api="F:OOAdvantech.Remoting.EventSubscrioption.EventInfo" />
        <element api="F:OOAdvantech.Remoting.EventSubscrioption.Obj" />
        <element api="F:OOAdvantech.Remoting.EventSubscrioption.Handler" />
        <element api="M:OOAdvantech.Remoting.EventSubscrioption.#ctor(System.Reflection.EventInfo,System.Object,System.Delegate)" />
        <element api="M:System.ValueType.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.Equals(System.Object)">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.ValueType" ref="true" />
          </containers>
        </element>
        <element api="M:System.ValueType.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.GetHashCode">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.ValueType" ref="true" />
          </containers>
        </element>
        <element api="M:System.ValueType.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.ToString">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.ValueType" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Remoting" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Remoting.EventSubscrioption.#ctor(System.Reflection.EventInfo,System.Object,System.Delegate)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="eventInfo">
          <type api="T:System.Reflection.EventInfo" ref="true" />
        </parameter>
        <parameter name="obj">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="handler">
          <type api="T:System.Delegate" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Remoting" />
        <type api="T:OOAdvantech.Remoting.EventSubscrioption" ref="false" />
      </containers>
    </api>
    <api id="F:OOAdvantech.Remoting.EventSubscrioption.EventInfo">
      <apidata name="EventInfo" group="member" subgroup="field" />
      <memberdata visibility="public" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Reflection.EventInfo" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Remoting" />
        <type api="T:OOAdvantech.Remoting.EventSubscrioption" ref="false" />
      </containers>
    </api>
    <api id="F:OOAdvantech.Remoting.EventSubscrioption.Handler">
      <apidata name="Handler" group="member" subgroup="field" />
      <memberdata visibility="public" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Delegate" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Remoting" />
        <type api="T:OOAdvantech.Remoting.EventSubscrioption" ref="false" />
      </containers>
    </api>
    <api id="F:OOAdvantech.Remoting.EventSubscrioption.Obj">
      <apidata name="Obj" group="member" subgroup="field" />
      <memberdata visibility="public" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Remoting" />
        <type api="T:OOAdvantech.Remoting.EventSubscrioption" ref="false" />
      </containers>
    </api>
    <api id="T:OOAdvantech.Remoting.ExtObjectUri">
      <apidata name="ExtObjectUri" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Remoting" />
      </containers>
    </api>
    <api id="T:OOAdvantech.Remoting.IExtMarshalByRefObject">
      <apidata name="IExtMarshalByRefObject" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <implementors>
        <type api="T:OOAdvantech.Remoting.MonoStateClass" ref="true" />
        <type api="T:OOAdvantech.Remoting.RemoteEventHandler" ref="true" />
        <type api="T:OOAdvantech.Remoting.RemotingServices" ref="true" />
        <type api="T:OOAdvantech.Transactions.ServerLockControlSession" ref="true" />
        <type api="T:OOAdvantech.Transactions.Transaction" ref="true" />
        <type api="T:OOAdvantech.Transactions.TransactionManager" ref="true" />
        <type api="T:OOAdvantech.PersistenceLayer.StorageInstanceRef" ref="true" />
        <type api="T:OOAdvantech.MetaDataRepository.MetaObject" ref="true" />
        <type api="T:OOAdvantech.ObjectsContext" ref="true" />
      </implementors>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Remoting" />
      </containers>
    </api>
    <api id="T:OOAdvantech.Remoting.IObjectValuesCollectorService">
      <apidata name="IObjectValuesCollectorService" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:OOAdvantech.Remoting.IObjectValuesCollectorService.GetValues(System.Object,OOAdvantech.Collections.Generic.List{System.String})" />
        <element api="M:OOAdvantech.Remoting.IObjectValuesCollectorService.GetValues(OOAdvantech.Collections.ArrayList,System.Type,OOAdvantech.Collections.Generic.List{System.String})" />
      </elements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Remoting" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Remoting.IObjectValuesCollectorService.GetValues(OOAdvantech.Collections.ArrayList,System.Type,OOAdvantech.Collections.Generic.List{System.String})">
      <apidata name="GetValues" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="objectCollection">
          <type api="T:OOAdvantech.Collections.ArrayList" ref="true" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="paths">
          <type api="T:OOAdvantech.Collections.Generic.List`1" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:OOAdvantech.Collections.StructureSet" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Remoting" />
        <type api="T:OOAdvantech.Remoting.IObjectValuesCollectorService" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Remoting.IObjectValuesCollectorService.GetValues(System.Object,OOAdvantech.Collections.Generic.List{System.String})">
      <apidata name="GetValues" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="_object">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="paths">
          <type api="T:OOAdvantech.Collections.Generic.List`1" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:OOAdvantech.Collections.StructureSet" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Remoting" />
        <type api="T:OOAdvantech.Remoting.IObjectValuesCollectorService" ref="true" />
      </containers>
    </api>
    <api id="T:OOAdvantech.Remoting.IPersistentObjectLifeTimeController">
      <apidata name="IPersistentObjectLifeTimeController" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:OOAdvantech.Remoting.IPersistentObjectLifeTimeController.GetObject(System.String)" />
        <element api="M:OOAdvantech.Remoting.IPersistentObjectLifeTimeController.GetPersistentObjectUri(System.Object)" />
      </elements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Remoting" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Remoting.IPersistentObjectLifeTimeController.GetObject(System.String)">
      <apidata name="GetObject" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="persistentObjectUri">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Remoting" />
        <type api="T:OOAdvantech.Remoting.IPersistentObjectLifeTimeController" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Remoting.IPersistentObjectLifeTimeController.GetPersistentObjectUri(System.Object)">
      <apidata name="GetPersistentObjectUri" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="obj">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Remoting" />
        <type api="T:OOAdvantech.Remoting.IPersistentObjectLifeTimeController" ref="true" />
      </containers>
    </api>
    <api id="T:OOAdvantech.Remoting.IRemoteEventHandler">
      <apidata name="IRemoteEventHandler" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <implementors>
        <type api="T:OOAdvantech.Remoting.ClientSessionPart" ref="true" />
        <type api="T:OOAdvantech.Remoting.RemoteEventHandler" ref="true" />
      </implementors>
      <elements>
        <element api="M:OOAdvantech.Remoting.IRemoteEventHandler.ThereArePendingEvents(System.Int32)" />
      </elements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Remoting" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Remoting.IRemoteEventHandler.ThereArePendingEvents(System.Int32)">
      <apidata name="ThereArePendingEvents" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="pendingEventsHandlingCode">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Remoting" />
        <type api="T:OOAdvantech.Remoting.IRemoteEventHandler" ref="true" />
      </containers>
    </api>
    <api id="T:OOAdvantech.Remoting.MonoStateClass">
      <apidata name="MonoStateClass" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.MarshalByRefObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:OOAdvantech.PersistenceLayer.StorageServerInstanceLocator" ref="true" />
        </descendents>
      </family>
      <implements>
        <type api="T:OOAdvantech.Remoting.IExtMarshalByRefObject" ref="true" />
      </implements>
      <elements>
        <element api="M:OOAdvantech.Remoting.MonoStateClass.#ctor" />
        <element api="M:OOAdvantech.Remoting.MonoStateClass.GetInstance(System.Type)" />
        <element api="M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="cloneIdentity">
              <type api="T:System.Boolean" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.MarshalByRefObject" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.MarshalByRefObject" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.MarshalByRefObject.GetLifetimeService">
          <apidata name="GetLifetimeService" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.MarshalByRefObject" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Security.Permissions.SecurityPermissionAttribute" ref="true" />
              <argument>
                <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
                <enumValue>
                  <field name="LinkDemand" />
                </enumValue>
              </argument>
              <assignment name="Flags">
                <type api="T:System.Security.Permissions.SecurityPermissionFlag" ref="false" />
                <enumValue>
                  <field name="Infrastructure" />
                </enumValue>
              </assignment>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.MarshalByRefObject.InitializeLifetimeService">
          <apidata name="InitializeLifetimeService" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.MarshalByRefObject" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Security.Permissions.SecurityPermissionAttribute" ref="true" />
              <argument>
                <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
                <enumValue>
                  <field name="LinkDemand" />
                </enumValue>
              </argument>
              <assignment name="Flags">
                <type api="T:System.Security.Permissions.SecurityPermissionFlag" ref="false" />
                <enumValue>
                  <field name="Infrastructure" />
                </enumValue>
              </assignment>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.MarshalByRefObject.CreateObjRef(System.Type)">
          <apidata name="CreateObjRef" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="requestedType">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Runtime.Remoting.ObjRef" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.MarshalByRefObject" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Security.Permissions.SecurityPermissionAttribute" ref="true" />
              <argument>
                <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
                <enumValue>
                  <field name="LinkDemand" />
                </enumValue>
              </argument>
              <assignment name="Flags">
                <type api="T:System.Security.Permissions.SecurityPermissionFlag" ref="false" />
                <enumValue>
                  <field name="Infrastructure" />
                </enumValue>
              </assignment>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Remoting" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Remoting.MonoStateClass.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Remoting" />
        <type api="T:OOAdvantech.Remoting.MonoStateClass" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Remoting.MonoStateClass.GetInstance(System.Type)">
      <apidata name="GetInstance" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:OOAdvantech.Remoting.MonoStateClass" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Remoting" />
        <type api="T:OOAdvantech.Remoting.MonoStateClass" ref="true" />
      </containers>
    </api>
    <api id="T:OOAdvantech.Remoting.PendingEvent">
      <apidata name="PendingEvent" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Runtime.Remoting.Messaging.ILogicalThreadAffinative" ref="true" />
      </implements>
      <elements>
        <element api="F:OOAdvantech.Remoting.PendingEvent.Pending" />
        <element api="M:OOAdvantech.Remoting.PendingEvent.#ctor(System.Boolean)" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Remoting" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Remoting.PendingEvent.#ctor(System.Boolean)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="pending">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Remoting" />
        <type api="T:OOAdvantech.Remoting.PendingEvent" ref="true" />
      </containers>
    </api>
    <api id="F:OOAdvantech.Remoting.PendingEvent.Pending">
      <apidata name="Pending" group="member" subgroup="field" />
      <memberdata visibility="public" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Remoting" />
        <type api="T:OOAdvantech.Remoting.PendingEvent" ref="true" />
      </containers>
    </api>
    <api id="T:OOAdvantech.Remoting.Proxy">
      <apidata name="Proxy" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Runtime.Remoting.Proxies.RealProxy" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Runtime.Remoting.IRemotingTypeInfo" ref="true" />
      </implements>
      <elements>
        <element api="F:OOAdvantech.Remoting.Proxy.URI" />
        <element api="F:OOAdvantech.Remoting.Proxy.ChannelUri" />
        <element api="M:OOAdvantech.Remoting.Proxy.CreateObjRef(System.Type)" />
        <element api="M:OOAdvantech.Remoting.Proxy.GetCOMIUnknown(System.Boolean)" />
        <element api="M:OOAdvantech.Remoting.Proxy.SetCOMIUnknown(System.IntPtr)" />
        <element api="M:OOAdvantech.Remoting.Proxy.SupportsInterface(System.Guid@)" />
        <element api="M:OOAdvantech.Remoting.Proxy.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:OOAdvantech.Remoting.Proxy.ControlLifeTime(System.Object)" />
        <element api="M:OOAdvantech.Remoting.Proxy.GetObject(System.String,System.String)" />
        <element api="M:OOAdvantech.Remoting.Proxy.GetObject(OOAdvantech.Remoting.IExtMarshalByRefObject)" />
        <element api="M:OOAdvantech.Remoting.Proxy.CanCastTo(System.Type,System.Object)" />
        <element api="M:OOAdvantech.Remoting.Proxy.#ctor(OOAdvantech.Remoting.IExtMarshalByRefObject)" />
        <element api="M:OOAdvantech.Remoting.Proxy.Finalize" />
        <element api="M:OOAdvantech.Remoting.Proxy.TryInvokeLocal(System.Runtime.Remoting.Messaging.IMessage,System.Boolean@)" />
        <element api="M:OOAdvantech.Remoting.Proxy.Invoke(System.Runtime.Remoting.Messaging.IMessage)" />
        <element api="P:OOAdvantech.Remoting.Proxy.RealTransparentProxy" />
        <element api="P:OOAdvantech.Remoting.Proxy.TypeName" />
        <element api="M:System.Runtime.Remoting.Proxies.RealProxy.InitializeServerObject(System.Runtime.Remoting.Activation.IConstructionCallMessage)">
          <apidata name="InitializeServerObject" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="ctorMsg">
              <type api="T:System.Runtime.Remoting.Activation.IConstructionCallMessage" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Runtime.Remoting.Activation.IConstructionReturnMessage" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Runtime.Remoting.Proxies" />
            <type api="T:System.Runtime.Remoting.Proxies.RealProxy" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
              <argument>
                <type api="T:System.Boolean" ref="false" />
                <value>True</value>
              </argument>
            </attribute>
            <attribute>
              <type api="T:System.Security.Permissions.SecurityPermissionAttribute" ref="true" />
              <argument>
                <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
                <enumValue>
                  <field name="LinkDemand" />
                </enumValue>
              </argument>
              <assignment name="Flags">
                <type api="T:System.Security.Permissions.SecurityPermissionFlag" ref="false" />
                <enumValue>
                  <field name="UnmanagedCode" />
                </enumValue>
              </assignment>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Runtime.Remoting.Proxies.RealProxy.GetUnwrappedServer">
          <apidata name="GetUnwrappedServer" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.MarshalByRefObject" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Runtime.Remoting.Proxies" />
            <type api="T:System.Runtime.Remoting.Proxies.RealProxy" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Security.Permissions.SecurityPermissionAttribute" ref="true" />
              <argument>
                <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
                <enumValue>
                  <field name="LinkDemand" />
                </enumValue>
              </argument>
              <assignment name="Flags">
                <type api="T:System.Security.Permissions.SecurityPermissionFlag" ref="false" />
                <enumValue>
                  <field name="UnmanagedCode" />
                </enumValue>
              </assignment>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Runtime.Remoting.Proxies.RealProxy.DetachServer">
          <apidata name="DetachServer" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.MarshalByRefObject" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Runtime.Remoting.Proxies" />
            <type api="T:System.Runtime.Remoting.Proxies.RealProxy" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Security.Permissions.SecurityPermissionAttribute" ref="true" />
              <argument>
                <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
                <enumValue>
                  <field name="LinkDemand" />
                </enumValue>
              </argument>
              <assignment name="Flags">
                <type api="T:System.Security.Permissions.SecurityPermissionFlag" ref="false" />
                <enumValue>
                  <field name="UnmanagedCode" />
                </enumValue>
              </assignment>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Runtime.Remoting.Proxies.RealProxy.AttachServer(System.MarshalByRefObject)">
          <apidata name="AttachServer" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="s">
              <type api="T:System.MarshalByRefObject" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Runtime.Remoting.Proxies" />
            <type api="T:System.Runtime.Remoting.Proxies.RealProxy" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Security.Permissions.SecurityPermissionAttribute" ref="true" />
              <argument>
                <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
                <enumValue>
                  <field name="LinkDemand" />
                </enumValue>
              </argument>
              <assignment name="Flags">
                <type api="T:System.Security.Permissions.SecurityPermissionFlag" ref="false" />
                <enumValue>
                  <field name="UnmanagedCode" />
                </enumValue>
              </assignment>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Runtime.Remoting.Proxies.RealProxy.GetProxiedType">
          <apidata name="GetProxiedType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Runtime.Remoting.Proxies" />
            <type api="T:System.Runtime.Remoting.Proxies.RealProxy" ref="true" />
          </containers>
        </element>
        <element api="M:System.Runtime.Remoting.Proxies.RealProxy.GetTransparentProxy">
          <apidata name="GetTransparentProxy" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Runtime.Remoting.Proxies" />
            <type api="T:System.Runtime.Remoting.Proxies.RealProxy" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Remoting" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Remoting.Proxy.#ctor(OOAdvantech.Remoting.IExtMarshalByRefObject)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="theRealObject">
          <type api="T:OOAdvantech.Remoting.IExtMarshalByRefObject" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Remoting" />
        <type api="T:OOAdvantech.Remoting.Proxy" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Remoting.Proxy.CanCastTo(System.Type,System.Object)">
      <apidata name="CanCastTo" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="castType">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="o">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Runtime.Remoting.IRemotingTypeInfo.CanCastTo(System.Type,System.Object)">
          <type api="T:System.Runtime.Remoting.IRemotingTypeInfo" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Remoting" />
        <type api="T:OOAdvantech.Remoting.Proxy" ref="true" />
      </containers>
    </api>
    <api id="F:OOAdvantech.Remoting.Proxy.ChannelUri">
      <apidata name="ChannelUri" group="member" subgroup="field" />
      <memberdata visibility="family or assembly" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Remoting" />
        <type api="T:OOAdvantech.Remoting.Proxy" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Remoting.Proxy.ControlLifeTime(System.Object)">
      <apidata name="ControlLifeTime" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="obj">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Remoting" />
        <type api="T:OOAdvantech.Remoting.Proxy" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Remoting.Proxy.CreateObjRef(System.Type)">
      <apidata name="CreateObjRef" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Runtime.Remoting.Proxies.RealProxy.CreateObjRef(System.Type)">
          <type api="T:System.Runtime.Remoting.Proxies.RealProxy" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="requestedType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Runtime.Remoting.ObjRef" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Remoting" />
        <type api="T:OOAdvantech.Remoting.Proxy" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Remoting.Proxy.Finalize">
      <apidata name="Finalize" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.Finalize">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Remoting" />
        <type api="T:OOAdvantech.Remoting.Proxy" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Remoting.Proxy.GetCOMIUnknown(System.Boolean)">
      <apidata name="GetCOMIUnknown" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Runtime.Remoting.Proxies.RealProxy.GetCOMIUnknown(System.Boolean)">
          <type api="T:System.Runtime.Remoting.Proxies.RealProxy" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="fIsMarshalled">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IntPtr" ref="false" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Remoting" />
        <type api="T:OOAdvantech.Remoting.Proxy" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Remoting.Proxy.GetObject(OOAdvantech.Remoting.IExtMarshalByRefObject)">
      <apidata name="GetObject" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="theRealObject">
          <type api="T:OOAdvantech.Remoting.IExtMarshalByRefObject" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Remoting" />
        <type api="T:OOAdvantech.Remoting.Proxy" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Remoting.Proxy.GetObject(System.String,System.String)">
      <apidata name="GetObject" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="channelUri">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="objectUri">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Remoting" />
        <type api="T:OOAdvantech.Remoting.Proxy" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Remoting.Proxy.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <apidata name="GetObjectData" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Runtime.Remoting.Proxies.RealProxy.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Runtime.Remoting.Proxies.RealProxy" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Remoting" />
        <type api="T:OOAdvantech.Remoting.Proxy" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Remoting.Proxy.Invoke(System.Runtime.Remoting.Messaging.IMessage)">
      <apidata name="Invoke" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Runtime.Remoting.Proxies.RealProxy.Invoke(System.Runtime.Remoting.Messaging.IMessage)">
          <type api="T:System.Runtime.Remoting.Proxies.RealProxy" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="msg">
          <type api="T:System.Runtime.Remoting.Messaging.IMessage" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Runtime.Remoting.Messaging.IMessage" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Remoting" />
        <type api="T:OOAdvantech.Remoting.Proxy" ref="true" />
      </containers>
    </api>
    <api id="P:OOAdvantech.Remoting.Proxy.RealTransparentProxy">
      <apidata name="RealTransparentProxy" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_RealTransparentProxy" />
      <setter name="set_RealTransparentProxy" />
      <returns>
        <type api="T:System.MarshalByRefObject" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Remoting" />
        <type api="T:OOAdvantech.Remoting.Proxy" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Remoting.Proxy.SetCOMIUnknown(System.IntPtr)">
      <apidata name="SetCOMIUnknown" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Runtime.Remoting.Proxies.RealProxy.SetCOMIUnknown(System.IntPtr)">
          <type api="T:System.Runtime.Remoting.Proxies.RealProxy" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="i">
          <type api="T:System.IntPtr" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Remoting" />
        <type api="T:OOAdvantech.Remoting.Proxy" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Remoting.Proxy.SupportsInterface(System.Guid@)">
      <apidata name="SupportsInterface" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Runtime.Remoting.Proxies.RealProxy.SupportsInterface(System.Guid@)">
          <type api="T:System.Runtime.Remoting.Proxies.RealProxy" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="iid">
          <referenceTo>
            <type api="T:System.Guid" ref="false" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IntPtr" ref="false" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Remoting" />
        <type api="T:OOAdvantech.Remoting.Proxy" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Remoting.Proxy.TryInvokeLocal(System.Runtime.Remoting.Messaging.IMessage,System.Boolean@)">
      <apidata name="TryInvokeLocal" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="msg">
          <type api="T:System.Runtime.Remoting.Messaging.IMessage" ref="true" />
        </parameter>
        <parameter name="localCall" out="true">
          <referenceTo>
            <type api="T:System.Boolean" ref="false" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Runtime.Remoting.Messaging.IMessage" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Remoting" />
        <type api="T:OOAdvantech.Remoting.Proxy" ref="true" />
      </containers>
    </api>
    <api id="P:OOAdvantech.Remoting.Proxy.TypeName">
      <apidata name="TypeName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" set="true" />
      <getter name="get_TypeName" />
      <setter name="set_TypeName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <implements>
        <member api="P:System.Runtime.Remoting.IRemotingTypeInfo.TypeName">
          <type api="T:System.Runtime.Remoting.IRemotingTypeInfo" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Remoting" />
        <type api="T:OOAdvantech.Remoting.Proxy" ref="true" />
      </containers>
    </api>
    <api id="F:OOAdvantech.Remoting.Proxy.URI">
      <apidata name="URI" group="member" subgroup="field" />
      <memberdata visibility="family or assembly" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:OOAdvantech.Remoting.ExtObjectUri" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Remoting" />
        <type api="T:OOAdvantech.Remoting.Proxy" ref="true" />
      </containers>
    </api>
    <api id="T:OOAdvantech.Remoting.RemoteEventHandler">
      <apidata name="RemoteEventHandler" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.MarshalByRefObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:OOAdvantech.Remoting.IRemoteEventHandler" ref="true" />
        <type api="T:OOAdvantech.Remoting.IExtMarshalByRefObject" ref="true" />
      </implements>
      <elements>
        <element api="M:OOAdvantech.Remoting.RemoteEventHandler.#ctor(OOAdvantech.Remoting.IRemoteEventHandler)" />
        <element api="M:OOAdvantech.Remoting.RemoteEventHandler.ThereArePendingEvents(System.Int32)" />
        <element api="M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="cloneIdentity">
              <type api="T:System.Boolean" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.MarshalByRefObject" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.MarshalByRefObject" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.MarshalByRefObject.GetLifetimeService">
          <apidata name="GetLifetimeService" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.MarshalByRefObject" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Security.Permissions.SecurityPermissionAttribute" ref="true" />
              <argument>
                <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
                <enumValue>
                  <field name="LinkDemand" />
                </enumValue>
              </argument>
              <assignment name="Flags">
                <type api="T:System.Security.Permissions.SecurityPermissionFlag" ref="false" />
                <enumValue>
                  <field name="Infrastructure" />
                </enumValue>
              </assignment>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.MarshalByRefObject.InitializeLifetimeService">
          <apidata name="InitializeLifetimeService" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.MarshalByRefObject" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Security.Permissions.SecurityPermissionAttribute" ref="true" />
              <argument>
                <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
                <enumValue>
                  <field name="LinkDemand" />
                </enumValue>
              </argument>
              <assignment name="Flags">
                <type api="T:System.Security.Permissions.SecurityPermissionFlag" ref="false" />
                <enumValue>
                  <field name="Infrastructure" />
                </enumValue>
              </assignment>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.MarshalByRefObject.CreateObjRef(System.Type)">
          <apidata name="CreateObjRef" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="requestedType">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Runtime.Remoting.ObjRef" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.MarshalByRefObject" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Security.Permissions.SecurityPermissionAttribute" ref="true" />
              <argument>
                <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
                <enumValue>
                  <field name="LinkDemand" />
                </enumValue>
              </argument>
              <assignment name="Flags">
                <type api="T:System.Security.Permissions.SecurityPermissionFlag" ref="false" />
                <enumValue>
                  <field name="Infrastructure" />
                </enumValue>
              </assignment>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Remoting" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Remoting.RemoteEventHandler.#ctor(OOAdvantech.Remoting.IRemoteEventHandler)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="localHostProcessEventHandler">
          <type api="T:OOAdvantech.Remoting.IRemoteEventHandler" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Remoting" />
        <type api="T:OOAdvantech.Remoting.RemoteEventHandler" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Remoting.RemoteEventHandler.ThereArePendingEvents(System.Int32)">
      <apidata name="ThereArePendingEvents" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="pendingEventsHandlingCode">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:OOAdvantech.Remoting.IRemoteEventHandler.ThereArePendingEvents(System.Int32)">
          <type api="T:OOAdvantech.Remoting.IRemoteEventHandler" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Remoting" />
        <type api="T:OOAdvantech.Remoting.RemoteEventHandler" ref="true" />
      </containers>
    </api>
    <api id="T:OOAdvantech.Remoting.RemoteEventSubscription">
      <apidata name="RemoteEventSubscription" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="true" layout="sequential" format="ansi" />
      <elements>
        <element api="F:OOAdvantech.Remoting.RemoteEventSubscription.ExtObjectUri" />
        <element api="F:OOAdvantech.Remoting.RemoteEventSubscription.eventInfo" />
        <element api="F:OOAdvantech.Remoting.RemoteEventSubscription.AllowAsynchronous" />
        <element api="M:System.ValueType.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.Equals(System.Object)">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.ValueType" ref="true" />
          </containers>
        </element>
        <element api="M:System.ValueType.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.GetHashCode">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.ValueType" ref="true" />
          </containers>
        </element>
        <element api="M:System.ValueType.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.ToString">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.ValueType" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Remoting" />
      </containers>
    </api>
    <api id="F:OOAdvantech.Remoting.RemoteEventSubscription.AllowAsynchronous">
      <apidata name="AllowAsynchronous" group="member" subgroup="field" />
      <memberdata visibility="public" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Remoting" />
        <type api="T:OOAdvantech.Remoting.RemoteEventSubscription" ref="false" />
      </containers>
    </api>
    <api id="F:OOAdvantech.Remoting.RemoteEventSubscription.eventInfo">
      <apidata name="eventInfo" group="member" subgroup="field" />
      <memberdata visibility="public" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Reflection.EventInfo" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Remoting" />
        <type api="T:OOAdvantech.Remoting.RemoteEventSubscription" ref="false" />
      </containers>
    </api>
    <api id="F:OOAdvantech.Remoting.RemoteEventSubscription.ExtObjectUri">
      <apidata name="ExtObjectUri" group="member" subgroup="field" />
      <memberdata visibility="public" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:OOAdvantech.Remoting.ExtObjectUri" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Remoting" />
        <type api="T:OOAdvantech.Remoting.RemoteEventSubscription" ref="false" />
      </containers>
    </api>
    <api id="T:OOAdvantech.Remoting.RemoteObjectValuesCollector">
      <apidata name="RemoteObjectValuesCollector" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.MarshalByRefObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:OOAdvantech.Remoting.RemoteObjectValuesCollector.GetValues(System.MarshalByRefObject,OOAdvantech.Collections.Generic.List{System.String})" />
        <element api="M:OOAdvantech.Remoting.RemoteObjectValuesCollector.GetValues(System.Collections.IEnumerable,System.Type,OOAdvantech.Collections.Generic.List{System.String})" />
        <element api="M:OOAdvantech.Remoting.RemoteObjectValuesCollector.#ctor" />
        <element api="M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="cloneIdentity">
              <type api="T:System.Boolean" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.MarshalByRefObject" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.MarshalByRefObject" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.MarshalByRefObject.GetLifetimeService">
          <apidata name="GetLifetimeService" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.MarshalByRefObject" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Security.Permissions.SecurityPermissionAttribute" ref="true" />
              <argument>
                <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
                <enumValue>
                  <field name="LinkDemand" />
                </enumValue>
              </argument>
              <assignment name="Flags">
                <type api="T:System.Security.Permissions.SecurityPermissionFlag" ref="false" />
                <enumValue>
                  <field name="Infrastructure" />
                </enumValue>
              </assignment>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.MarshalByRefObject.InitializeLifetimeService">
          <apidata name="InitializeLifetimeService" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.MarshalByRefObject" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Security.Permissions.SecurityPermissionAttribute" ref="true" />
              <argument>
                <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
                <enumValue>
                  <field name="LinkDemand" />
                </enumValue>
              </argument>
              <assignment name="Flags">
                <type api="T:System.Security.Permissions.SecurityPermissionFlag" ref="false" />
                <enumValue>
                  <field name="Infrastructure" />
                </enumValue>
              </assignment>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.MarshalByRefObject.CreateObjRef(System.Type)">
          <apidata name="CreateObjRef" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="requestedType">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Runtime.Remoting.ObjRef" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.MarshalByRefObject" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Security.Permissions.SecurityPermissionAttribute" ref="true" />
              <argument>
                <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
                <enumValue>
                  <field name="LinkDemand" />
                </enumValue>
              </argument>
              <assignment name="Flags">
                <type api="T:System.Security.Permissions.SecurityPermissionFlag" ref="false" />
                <enumValue>
                  <field name="Infrastructure" />
                </enumValue>
              </assignment>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Remoting" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Remoting.RemoteObjectValuesCollector.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Remoting" />
        <type api="T:OOAdvantech.Remoting.RemoteObjectValuesCollector" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Remoting.RemoteObjectValuesCollector.GetValues(System.Collections.IEnumerable,System.Type,OOAdvantech.Collections.Generic.List{System.String})">
      <apidata name="GetValues" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="objectCollection">
          <type api="T:System.Collections.IEnumerable" ref="true" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="paths">
          <type api="T:OOAdvantech.Collections.Generic.List`1" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:OOAdvantech.Collections.StructureSet" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Remoting" />
        <type api="T:OOAdvantech.Remoting.RemoteObjectValuesCollector" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Remoting.RemoteObjectValuesCollector.GetValues(System.MarshalByRefObject,OOAdvantech.Collections.Generic.List{System.String})">
      <apidata name="GetValues" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="remoteObject">
          <type api="T:System.MarshalByRefObject" ref="true" />
        </parameter>
        <parameter name="paths">
          <type api="T:OOAdvantech.Collections.Generic.List`1" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:OOAdvantech.Collections.StructureSet" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Remoting" />
        <type api="T:OOAdvantech.Remoting.RemoteObjectValuesCollector" ref="true" />
      </containers>
    </api>
    <api id="T:OOAdvantech.Remoting.RemotingException">
      <apidata name="RemotingException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="F:OOAdvantech.Remoting.RemotingException.RemotingExceptionCause" />
        <element api="M:OOAdvantech.Remoting.RemotingException.#ctor(OOAdvantech.Remoting.RemotingException.ExceptionCause,System.String,System.Exception)" />
        <element api="M:OOAdvantech.Remoting.RemotingException.#ctor(OOAdvantech.Remoting.RemotingException.ExceptionCause,System.String)" />
        <element api="M:OOAdvantech.Remoting.RemotingException.#ctor(OOAdvantech.Remoting.RemotingException.ExceptionCause)" />
        <element api="M:System.Exception.GetBaseException">
          <apidata name="GetBaseException" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.GetBaseException">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.ToString">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.ToString">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <apidata name="GetObjectData" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="info">
              <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
            </parameter>
            <parameter name="context">
              <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
              <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
            </member>
            <member api="M:System.Runtime.InteropServices._Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Security.Permissions.SecurityPermissionAttribute" ref="true" />
              <argument>
                <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
                <enumValue>
                  <field name="LinkDemand" />
                </enumValue>
              </argument>
              <assignment name="Flags">
                <type api="T:System.Security.Permissions.SecurityPermissionFlag" ref="false" />
                <enumValue>
                  <field name="SerializationFormatter" />
                </enumValue>
              </assignment>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Exception.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.GetType">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Message">
          <apidata name="Message" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_Message" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.Message">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Data">
          <apidata name="Data" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_Data" />
          <returns>
            <type api="T:System.Collections.IDictionary" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.InnerException">
          <apidata name="InnerException" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_InnerException" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.InnerException">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.TargetSite">
          <apidata name="TargetSite" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_TargetSite" />
          <returns>
            <type api="T:System.Reflection.MethodBase" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.TargetSite">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.StackTrace">
          <apidata name="StackTrace" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_StackTrace" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.StackTrace">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.HelpLink">
          <apidata name="HelpLink" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_HelpLink" />
          <setter name="set_HelpLink" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.HelpLink">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Source">
          <apidata name="Source" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Source" />
          <setter name="set_Source" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.Source">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.HResult">
          <apidata name="HResult" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_HResult" />
          <setter name="set_HResult" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Remoting" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Remoting.RemotingException.#ctor(OOAdvantech.Remoting.RemotingException.ExceptionCause)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="exceptionCause">
          <type api="T:OOAdvantech.Remoting.RemotingException.ExceptionCause" ref="false">
            <type api="T:OOAdvantech.Remoting.RemotingException" ref="true" />
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Remoting" />
        <type api="T:OOAdvantech.Remoting.RemotingException" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Remoting.RemotingException.#ctor(OOAdvantech.Remoting.RemotingException.ExceptionCause,System.String)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="exceptionCause">
          <type api="T:OOAdvantech.Remoting.RemotingException.ExceptionCause" ref="false">
            <type api="T:OOAdvantech.Remoting.RemotingException" ref="true" />
          </type>
        </parameter>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Remoting" />
        <type api="T:OOAdvantech.Remoting.RemotingException" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Remoting.RemotingException.#ctor(OOAdvantech.Remoting.RemotingException.ExceptionCause,System.String,System.Exception)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="exceptionCause">
          <type api="T:OOAdvantech.Remoting.RemotingException.ExceptionCause" ref="false">
            <type api="T:OOAdvantech.Remoting.RemotingException" ref="true" />
          </type>
        </parameter>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="innerException">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Remoting" />
        <type api="T:OOAdvantech.Remoting.RemotingException" ref="true" />
      </containers>
    </api>
    <api id="F:OOAdvantech.Remoting.RemotingException.RemotingExceptionCause">
      <apidata name="RemotingExceptionCause" group="member" subgroup="field" />
      <memberdata visibility="public" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:OOAdvantech.Remoting.RemotingException.ExceptionCause" ref="false">
          <type api="T:OOAdvantech.Remoting.RemotingException" ref="true" />
        </type>
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Remoting" />
        <type api="T:OOAdvantech.Remoting.RemotingException" ref="true" />
      </containers>
    </api>
    <api id="T:OOAdvantech.Remoting.RemotingException.ExceptionCause">
      <apidata name="ExceptionCause" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="F:OOAdvantech.Remoting.RemotingException.ExceptionCause.CannotReconnect" />
        <element api="F:OOAdvantech.Remoting.RemotingException.ExceptionCause.ParameterLostConnection" />
        <element api="F:OOAdvantech.Remoting.RemotingException.ExceptionCause.ExceptionCatcher" />
      </elements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Remoting" />
        <type api="T:OOAdvantech.Remoting.RemotingException" ref="true" />
      </containers>
    </api>
    <api id="F:OOAdvantech.Remoting.RemotingException.ExceptionCause.CannotReconnect">
      <apidata name="CannotReconnect" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:OOAdvantech.Remoting.RemotingException.ExceptionCause" ref="false">
          <type api="T:OOAdvantech.Remoting.RemotingException" ref="true" />
        </type>
      </returns>
      <value>0</value>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Remoting" />
        <type api="T:OOAdvantech.Remoting.RemotingException.ExceptionCause" ref="false">
          <type api="T:OOAdvantech.Remoting.RemotingException" ref="true" />
        </type>
      </containers>
    </api>
    <api id="F:OOAdvantech.Remoting.RemotingException.ExceptionCause.ExceptionCatcher">
      <apidata name="ExceptionCatcher" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:OOAdvantech.Remoting.RemotingException.ExceptionCause" ref="false">
          <type api="T:OOAdvantech.Remoting.RemotingException" ref="true" />
        </type>
      </returns>
      <value>2</value>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Remoting" />
        <type api="T:OOAdvantech.Remoting.RemotingException.ExceptionCause" ref="false">
          <type api="T:OOAdvantech.Remoting.RemotingException" ref="true" />
        </type>
      </containers>
    </api>
    <api id="F:OOAdvantech.Remoting.RemotingException.ExceptionCause.ParameterLostConnection">
      <apidata name="ParameterLostConnection" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:OOAdvantech.Remoting.RemotingException.ExceptionCause" ref="false">
          <type api="T:OOAdvantech.Remoting.RemotingException" ref="true" />
        </type>
      </returns>
      <value>1</value>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Remoting" />
        <type api="T:OOAdvantech.Remoting.RemotingException.ExceptionCause" ref="false">
          <type api="T:OOAdvantech.Remoting.RemotingException" ref="true" />
        </type>
      </containers>
    </api>
    <api id="T:OOAdvantech.Remoting.RemotingServices">
      <apidata name="RemotingServices" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.MarshalByRefObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:OOAdvantech.Remoting.IExtMarshalByRefObject" ref="true" />
      </implements>
      <elements>
        <element api="F:OOAdvantech.Remoting.RemotingServices.Sessions" />
        <element api="F:OOAdvantech.Remoting.RemotingServices.ProcessIdentity" />
        <element api="F:OOAdvantech.Remoting.RemotingServices.PersistentObjectLifeTimeController" />
        <element api="F:OOAdvantech.Remoting.RemotingServices.ClientChannelSinkProviderChain" />
        <element api="F:OOAdvantech.Remoting.RemotingServices.ServerChannelSinkProviderChain" />
        <element api="M:OOAdvantech.Remoting.RemotingServices.GetRemotingServices(System.String)" />
        <element api="M:OOAdvantech.Remoting.RemotingServices.RegisterChannel(System.Int32,System.String)" />
        <element api="M:OOAdvantech.Remoting.RemotingServices.IsTheLocalMachine(System.String)" />
        <element api="M:OOAdvantech.Remoting.RemotingServices.IsInRemoteMachine(System.MarshalByRefObject)" />
        <element api="M:OOAdvantech.Remoting.RemotingServices.IsOutOfProcess(System.MarshalByRefObject)" />
        <element api="M:OOAdvantech.Remoting.RemotingServices.GetObjectUri(System.MarshalByRefObject)" />
        <element api="M:OOAdvantech.Remoting.RemotingServices.GetOrgObject(System.MarshalByRefObject)" />
        <element api="M:OOAdvantech.Remoting.RemotingServices.GetChannelUri(System.MarshalByRefObject)" />
        <element api="M:OOAdvantech.Remoting.RemotingServices.ReconnectWithObject(OOAdvantech.Remoting.ExtObjectUri)" />
        <element api="M:OOAdvantech.Remoting.RemotingServices.RenewObjects(System.Collections.ArrayList@)" />
        <element api="M:OOAdvantech.Remoting.RemotingServices.CreateInstance(System.String,System.String,System.Type[],System.Object[])" />
        <element api="M:OOAdvantech.Remoting.RemotingServices.CreateInstance``1(System.String,System.Type[],System.Object[])" />
        <element api="M:OOAdvantech.Remoting.RemotingServices.CreateInstance(System.String,System.String,System.String,System.Type[],System.Object[])" />
        <element api="M:OOAdvantech.Remoting.RemotingServices.CreateInstance``1(System.String)" />
        <element api="M:OOAdvantech.Remoting.RemotingServices.CreateInstance(System.String,System.String,System.String)" />
        <element api="M:OOAdvantech.Remoting.RemotingServices.CreateInstance(System.String,System.String)" />
        <element api="M:OOAdvantech.Remoting.RemotingServices.AddServerChannelUri(System.String)" />
        <element api="M:OOAdvantech.Remoting.RemotingServices.GetServerChannelUris" />
        <element api="M:OOAdvantech.Remoting.RemotingServices.GetServerSession(System.Guid)" />
        <element api="M:OOAdvantech.Remoting.RemotingServices.SubscribeEventConsumers(System.Collections.Generic.List{OOAdvantech.Remoting.EventSubscrioption})" />
        <element api="M:OOAdvantech.Remoting.RemotingServices.UnsubscribeEventConsumers(System.Collections.Generic.List{OOAdvantech.Remoting.EventSubscrioption})" />
        <element api="M:OOAdvantech.Remoting.RemotingServices.#ctor" />
        <element api="M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="cloneIdentity">
              <type api="T:System.Boolean" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.MarshalByRefObject" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.MarshalByRefObject" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.MarshalByRefObject.GetLifetimeService">
          <apidata name="GetLifetimeService" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.MarshalByRefObject" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Security.Permissions.SecurityPermissionAttribute" ref="true" />
              <argument>
                <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
                <enumValue>
                  <field name="LinkDemand" />
                </enumValue>
              </argument>
              <assignment name="Flags">
                <type api="T:System.Security.Permissions.SecurityPermissionFlag" ref="false" />
                <enumValue>
                  <field name="Infrastructure" />
                </enumValue>
              </assignment>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.MarshalByRefObject.InitializeLifetimeService">
          <apidata name="InitializeLifetimeService" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.MarshalByRefObject" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Security.Permissions.SecurityPermissionAttribute" ref="true" />
              <argument>
                <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
                <enumValue>
                  <field name="LinkDemand" />
                </enumValue>
              </argument>
              <assignment name="Flags">
                <type api="T:System.Security.Permissions.SecurityPermissionFlag" ref="false" />
                <enumValue>
                  <field name="Infrastructure" />
                </enumValue>
              </assignment>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.MarshalByRefObject.CreateObjRef(System.Type)">
          <apidata name="CreateObjRef" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="requestedType">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Runtime.Remoting.ObjRef" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.MarshalByRefObject" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Security.Permissions.SecurityPermissionAttribute" ref="true" />
              <argument>
                <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
                <enumValue>
                  <field name="LinkDemand" />
                </enumValue>
              </argument>
              <assignment name="Flags">
                <type api="T:System.Security.Permissions.SecurityPermissionFlag" ref="false" />
                <enumValue>
                  <field name="Infrastructure" />
                </enumValue>
              </assignment>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Remoting" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Remoting.RemotingServices.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Remoting" />
        <type api="T:OOAdvantech.Remoting.RemotingServices" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Remoting.RemotingServices.AddServerChannelUri(System.String)">
      <apidata name="AddServerChannelUri" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="ChannelUri">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Remoting" />
        <type api="T:OOAdvantech.Remoting.RemotingServices" ref="true" />
      </containers>
    </api>
    <api id="F:OOAdvantech.Remoting.RemotingServices.ClientChannelSinkProviderChain">
      <apidata name="ClientChannelSinkProviderChain" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Runtime.Remoting.Channels.IClientChannelSinkProvider" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Remoting" />
        <type api="T:OOAdvantech.Remoting.RemotingServices" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Remoting.RemotingServices.CreateInstance``1(System.String)">
      <apidata name="CreateInstance" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T">
          <constrained ref="true" />
        </template>
      </templates>
      <parameters>
        <parameter name="ChannelUri">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="M:OOAdvantech.Remoting.RemotingServices.CreateInstance``1(System.String)" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Remoting" />
        <type api="T:OOAdvantech.Remoting.RemotingServices" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.BackwardCompatibilityID" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>+1</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:OOAdvantech.Remoting.RemotingServices.CreateInstance(System.String,System.String)">
      <apidata name="CreateInstance" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="TypeFullName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="assemblyData">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Remoting" />
        <type api="T:OOAdvantech.Remoting.RemotingServices" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Remoting.RemotingServices.CreateInstance(System.String,System.String,System.String)">
      <apidata name="CreateInstance" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="ChannelUri">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="TypeFullName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="assemblyData">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Remoting" />
        <type api="T:OOAdvantech.Remoting.RemotingServices" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Remoting.RemotingServices.CreateInstance(System.String,System.String,System.String,System.Type[],System.Object[])">
      <apidata name="CreateInstance" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="ChannelUri">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="TypeFullName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="assemblyData">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="paramsTypes">
          <arrayOf rank="1">
            <type api="T:System.Type" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="ctorParams" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Remoting" />
        <type api="T:OOAdvantech.Remoting.RemotingServices" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Remoting.RemotingServices.CreateInstance(System.String,System.String,System.Type[],System.Object[])">
      <apidata name="CreateInstance" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="TypeFullName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="assemblyData">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="paramsTypes">
          <arrayOf rank="1">
            <type api="T:System.Type" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="ctorParams" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Remoting" />
        <type api="T:OOAdvantech.Remoting.RemotingServices" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Remoting.RemotingServices.CreateInstance``1(System.String,System.Type[],System.Object[])">
      <apidata name="CreateInstance" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T">
          <constrained ref="true" />
        </template>
      </templates>
      <parameters>
        <parameter name="ChannelUri">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="paramsTypes">
          <arrayOf rank="1">
            <type api="T:System.Type" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="ctorParams" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="M:OOAdvantech.Remoting.RemotingServices.CreateInstance``1(System.String,System.Type[],System.Object[])" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Remoting" />
        <type api="T:OOAdvantech.Remoting.RemotingServices" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.BackwardCompatibilityID" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>+2</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:OOAdvantech.Remoting.RemotingServices.GetChannelUri(System.MarshalByRefObject)">
      <apidata name="GetChannelUri" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="marshalByRefObject">
          <type api="T:System.MarshalByRefObject" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Remoting" />
        <type api="T:OOAdvantech.Remoting.RemotingServices" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Remoting.RemotingServices.GetObjectUri(System.MarshalByRefObject)">
      <apidata name="GetObjectUri" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="marshalByRefObject">
          <type api="T:System.MarshalByRefObject" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Remoting" />
        <type api="T:OOAdvantech.Remoting.RemotingServices" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Remoting.RemotingServices.GetOrgObject(System.MarshalByRefObject)">
      <apidata name="GetOrgObject" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="marshalByRefObject">
          <type api="T:System.MarshalByRefObject" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Remoting" />
        <type api="T:OOAdvantech.Remoting.RemotingServices" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Remoting.RemotingServices.GetRemotingServices(System.String)">
      <apidata name="GetRemotingServices" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="ChannelUri">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:OOAdvantech.Remoting.RemotingServices" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Remoting" />
        <type api="T:OOAdvantech.Remoting.RemotingServices" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Remoting.RemotingServices.GetServerChannelUris">
      <apidata name="GetServerChannelUris" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Collections.ArrayList" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Remoting" />
        <type api="T:OOAdvantech.Remoting.RemotingServices" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Remoting.RemotingServices.GetServerSession(System.Guid)">
      <apidata name="GetServerSession" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="clientProcessIdentity">
          <type api="T:System.Guid" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:OOAdvantech.Remoting.ServerSessionPart" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Remoting" />
        <type api="T:OOAdvantech.Remoting.RemotingServices" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Remoting.RemotingServices.IsInRemoteMachine(System.MarshalByRefObject)">
      <apidata name="IsInRemoteMachine" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="marshalByRefObject">
          <type api="T:System.MarshalByRefObject" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Remoting" />
        <type api="T:OOAdvantech.Remoting.RemotingServices" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Remoting.RemotingServices.IsOutOfProcess(System.MarshalByRefObject)">
      <apidata name="IsOutOfProcess" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="marshalByRefObject">
          <type api="T:System.MarshalByRefObject" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Remoting" />
        <type api="T:OOAdvantech.Remoting.RemotingServices" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Remoting.RemotingServices.IsTheLocalMachine(System.String)">
      <apidata name="IsTheLocalMachine" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="computerName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Remoting" />
        <type api="T:OOAdvantech.Remoting.RemotingServices" ref="true" />
      </containers>
    </api>
    <api id="F:OOAdvantech.Remoting.RemotingServices.PersistentObjectLifeTimeController">
      <apidata name="PersistentObjectLifeTimeController" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:OOAdvantech.Remoting.IPersistentObjectLifeTimeController" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Remoting" />
        <type api="T:OOAdvantech.Remoting.RemotingServices" ref="true" />
      </containers>
    </api>
    <api id="F:OOAdvantech.Remoting.RemotingServices.ProcessIdentity">
      <apidata name="ProcessIdentity" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Guid" ref="false" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Remoting" />
        <type api="T:OOAdvantech.Remoting.RemotingServices" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Remoting.RemotingServices.ReconnectWithObject(OOAdvantech.Remoting.ExtObjectUri)">
      <apidata name="ReconnectWithObject" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="extObjectUri">
          <type api="T:OOAdvantech.Remoting.ExtObjectUri" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:OOAdvantech.Remoting.IExtMarshalByRefObject" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Remoting" />
        <type api="T:OOAdvantech.Remoting.RemotingServices" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Remoting.RemotingServices.RegisterChannel(System.Int32,System.String)">
      <apidata name="RegisterChannel" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="tcpPort">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="ipcPort">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Remoting" />
        <type api="T:OOAdvantech.Remoting.RemotingServices" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Remoting.RemotingServices.RenewObjects(System.Collections.ArrayList@)">
      <apidata name="RenewObjects" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="MarshaledByRefObjects">
          <referenceTo>
            <type api="T:System.Collections.ArrayList" ref="true" />
          </referenceTo>
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Remoting" />
        <type api="T:OOAdvantech.Remoting.RemotingServices" ref="true" />
      </containers>
    </api>
    <api id="F:OOAdvantech.Remoting.RemotingServices.ServerChannelSinkProviderChain">
      <apidata name="ServerChannelSinkProviderChain" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Runtime.Remoting.Channels.IServerChannelSinkProvider" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Remoting" />
        <type api="T:OOAdvantech.Remoting.RemotingServices" ref="true" />
      </containers>
    </api>
    <api id="F:OOAdvantech.Remoting.RemotingServices.Sessions">
      <apidata name="Sessions" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
          <specialization>
            <type api="T:System.Guid" ref="false" />
            <type api="T:System.WeakReference" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Remoting" />
        <type api="T:OOAdvantech.Remoting.RemotingServices" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.RoleBMultiplicityRangeAttribute" ref="true" />
          <argument>
            <type api="T:System.UInt64" ref="false" />
            <value>1</value>
          </argument>
          <argument>
            <type api="T:System.UInt64" ref="false" />
            <value>1</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.RoleAMultiplicityRangeAttribute" ref="true" />
          <argument>
            <type api="T:System.UInt64" ref="false" />
            <value>0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.AssociationAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:OOAdvantech.Remoting.ServerSessionPart" ref="true" />
            </typeValue>
          </argument>
          <argument>
            <type api="T:OOAdvantech.MetaDataRepository.Roles" ref="false" />
            <enumValue>
              <field name="RoleA" />
            </enumValue>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>fc866fc9-8270-4d58-a0d5-8725d14c127c</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.IgnoreErrorCheckAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:OOAdvantech.Remoting.RemotingServices.SubscribeEventConsumers(System.Collections.Generic.List{OOAdvantech.Remoting.EventSubscrioption})">
      <apidata name="SubscribeEventConsumers" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="subscriptions">
          <type api="T:System.Collections.Generic.List`1" ref="true">
            <specialization>
              <type api="T:OOAdvantech.Remoting.EventSubscrioption" ref="false" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Remoting" />
        <type api="T:OOAdvantech.Remoting.RemotingServices" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Remoting.RemotingServices.UnsubscribeEventConsumers(System.Collections.Generic.List{OOAdvantech.Remoting.EventSubscrioption})">
      <apidata name="UnsubscribeEventConsumers" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="unsubscriptions">
          <type api="T:System.Collections.Generic.List`1" ref="true">
            <specialization>
              <type api="T:OOAdvantech.Remoting.EventSubscrioption" ref="false" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Remoting" />
        <type api="T:OOAdvantech.Remoting.RemotingServices" ref="true" />
      </containers>
    </api>
    <api id="T:OOAdvantech.Remoting.ServerSessionPart">
      <apidata name="ServerSessionPart" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.MarshalByRefObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="F:OOAdvantech.Remoting.ServerSessionPart.ControlledObjects" />
        <element api="F:OOAdvantech.Remoting.ServerSessionPart.ClientProcessIdentity" />
        <element api="M:OOAdvantech.Remoting.ServerSessionPart.#ctor(System.Guid)" />
        <element api="M:OOAdvantech.Remoting.ServerSessionPart.Finalize" />
        <element api="M:OOAdvantech.Remoting.ServerSessionPart.GetPendingEvents" />
        <element api="M:OOAdvantech.Remoting.ServerSessionPart.Unsubscribe(OOAdvantech.Remoting.ExtObjectUri,System.Reflection.EventInfo)" />
        <element api="M:OOAdvantech.Remoting.ServerSessionPart.Unsubscribe(System.Collections.Generic.List{OOAdvantech.Remoting.RemoteEventSubscription})" />
        <element api="M:OOAdvantech.Remoting.ServerSessionPart.Subscribe(OOAdvantech.Remoting.ExtObjectUri,System.Reflection.EventInfo)" />
        <element api="M:OOAdvantech.Remoting.ServerSessionPart.Subscribe(OOAdvantech.Remoting.ExtObjectUri,System.Reflection.EventInfo,OOAdvantech.Remoting.IRemoteEventHandler)" />
        <element api="M:OOAdvantech.Remoting.ServerSessionPart.Subscribe(System.Collections.Generic.List{OOAdvantech.Remoting.RemoteEventSubscription})" />
        <element api="M:OOAdvantech.Remoting.ServerSessionPart.Subscribe(System.Collections.Generic.List{OOAdvantech.Remoting.RemoteEventSubscription},OOAdvantech.Remoting.IRemoteEventHandler)" />
        <element api="M:OOAdvantech.Remoting.ServerSessionPart.ClientProcessTerminates" />
        <element api="M:OOAdvantech.Remoting.ServerSessionPart.Update(System.Collections.Generic.List{OOAdvantech.Remoting.ExtObjectUri}@,System.Collections.Generic.List{System.String},System.Collections.Generic.Dictionary{System.String,OOAdvantech.Collections.Generic.Dictionary{System.Reflection.EventInfo,OOAdvantech.Collections.ArrayList}}@)" />
        <element api="P:OOAdvantech.Remoting.ServerSessionPart.ServerProcessIdentity" />
        <element api="M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="cloneIdentity">
              <type api="T:System.Boolean" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.MarshalByRefObject" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.MarshalByRefObject" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.MarshalByRefObject.GetLifetimeService">
          <apidata name="GetLifetimeService" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.MarshalByRefObject" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Security.Permissions.SecurityPermissionAttribute" ref="true" />
              <argument>
                <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
                <enumValue>
                  <field name="LinkDemand" />
                </enumValue>
              </argument>
              <assignment name="Flags">
                <type api="T:System.Security.Permissions.SecurityPermissionFlag" ref="false" />
                <enumValue>
                  <field name="Infrastructure" />
                </enumValue>
              </assignment>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.MarshalByRefObject.InitializeLifetimeService">
          <apidata name="InitializeLifetimeService" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.MarshalByRefObject" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Security.Permissions.SecurityPermissionAttribute" ref="true" />
              <argument>
                <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
                <enumValue>
                  <field name="LinkDemand" />
                </enumValue>
              </argument>
              <assignment name="Flags">
                <type api="T:System.Security.Permissions.SecurityPermissionFlag" ref="false" />
                <enumValue>
                  <field name="Infrastructure" />
                </enumValue>
              </assignment>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.MarshalByRefObject.CreateObjRef(System.Type)">
          <apidata name="CreateObjRef" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="requestedType">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Runtime.Remoting.ObjRef" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.MarshalByRefObject" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Security.Permissions.SecurityPermissionAttribute" ref="true" />
              <argument>
                <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
                <enumValue>
                  <field name="LinkDemand" />
                </enumValue>
              </argument>
              <assignment name="Flags">
                <type api="T:System.Security.Permissions.SecurityPermissionFlag" ref="false" />
                <enumValue>
                  <field name="Infrastructure" />
                </enumValue>
              </assignment>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Remoting" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Remoting.ServerSessionPart.#ctor(System.Guid)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="clientProcessIdentity">
          <type api="T:System.Guid" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Remoting" />
        <type api="T:OOAdvantech.Remoting.ServerSessionPart" ref="true" />
      </containers>
    </api>
    <api id="F:OOAdvantech.Remoting.ServerSessionPart.ClientProcessIdentity">
      <apidata name="ClientProcessIdentity" group="member" subgroup="field" />
      <memberdata visibility="public" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Guid" ref="false" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Remoting" />
        <type api="T:OOAdvantech.Remoting.ServerSessionPart" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Remoting.ServerSessionPart.ClientProcessTerminates">
      <apidata name="ClientProcessTerminates" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Remoting" />
        <type api="T:OOAdvantech.Remoting.ServerSessionPart" ref="true" />
      </containers>
    </api>
    <api id="F:OOAdvantech.Remoting.ServerSessionPart.ControlledObjects">
      <apidata name="ControlledObjects" group="member" subgroup="field" />
      <memberdata visibility="public" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
            <type api="T:System.MarshalByRefObject" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Remoting" />
        <type api="T:OOAdvantech.Remoting.ServerSessionPart" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.RoleAMultiplicityRangeAttribute" ref="true" />
          <argument>
            <type api="T:System.UInt64" ref="false" />
            <value>0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.IgnoreErrorCheckAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.RoleBMultiplicityRangeAttribute" ref="true" />
          <argument>
            <type api="T:System.UInt64" ref="false" />
            <value>0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:OOAdvantech.MetaDataRepository.AssociationAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:System.MarshalByRefObject" ref="true" />
            </typeValue>
          </argument>
          <argument>
            <type api="T:OOAdvantech.MetaDataRepository.Roles" ref="false" />
            <enumValue>
              <field name="RoleA" />
            </enumValue>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4b681cd1-0fb9-4a60-ac81-3cca474fc034</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:OOAdvantech.Remoting.ServerSessionPart.Finalize">
      <apidata name="Finalize" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.Finalize">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Remoting" />
        <type api="T:OOAdvantech.Remoting.ServerSessionPart" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Remoting.ServerSessionPart.GetPendingEvents">
      <apidata name="GetPendingEvents" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
            <type api="T:OOAdvantech.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <type api="T:System.Reflection.EventInfo" ref="true" />
                <type api="T:OOAdvantech.Collections.ArrayList" ref="true" />
              </specialization>
            </type>
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Remoting" />
        <type api="T:OOAdvantech.Remoting.ServerSessionPart" ref="true" />
      </containers>
    </api>
    <api id="P:OOAdvantech.Remoting.ServerSessionPart.ServerProcessIdentity">
      <apidata name="ServerProcessIdentity" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ServerProcessIdentity" />
      <returns>
        <type api="T:System.Guid" ref="false" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Remoting" />
        <type api="T:OOAdvantech.Remoting.ServerSessionPart" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Remoting.ServerSessionPart.Subscribe(OOAdvantech.Remoting.ExtObjectUri,System.Reflection.EventInfo)">
      <apidata name="Subscribe" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="eventPublisherUri">
          <type api="T:OOAdvantech.Remoting.ExtObjectUri" ref="true" />
        </parameter>
        <parameter name="eventInfo">
          <type api="T:System.Reflection.EventInfo" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Remoting" />
        <type api="T:OOAdvantech.Remoting.ServerSessionPart" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Remoting.ServerSessionPart.Subscribe(OOAdvantech.Remoting.ExtObjectUri,System.Reflection.EventInfo,OOAdvantech.Remoting.IRemoteEventHandler)">
      <apidata name="Subscribe" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="eventPublisherUri">
          <type api="T:OOAdvantech.Remoting.ExtObjectUri" ref="true" />
        </parameter>
        <parameter name="eventInfo">
          <type api="T:System.Reflection.EventInfo" ref="true" />
        </parameter>
        <parameter name="clientSessionPart">
          <type api="T:OOAdvantech.Remoting.IRemoteEventHandler" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Remoting" />
        <type api="T:OOAdvantech.Remoting.ServerSessionPart" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Remoting.ServerSessionPart.Subscribe(System.Collections.Generic.List{OOAdvantech.Remoting.RemoteEventSubscription})">
      <apidata name="Subscribe" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="eventSubscriptions">
          <type api="T:System.Collections.Generic.List`1" ref="true">
            <specialization>
              <type api="T:OOAdvantech.Remoting.RemoteEventSubscription" ref="false" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Remoting" />
        <type api="T:OOAdvantech.Remoting.ServerSessionPart" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Remoting.ServerSessionPart.Subscribe(System.Collections.Generic.List{OOAdvantech.Remoting.RemoteEventSubscription},OOAdvantech.Remoting.IRemoteEventHandler)">
      <apidata name="Subscribe" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="eventSubscriptions">
          <type api="T:System.Collections.Generic.List`1" ref="true">
            <specialization>
              <type api="T:OOAdvantech.Remoting.RemoteEventSubscription" ref="false" />
            </specialization>
          </type>
        </parameter>
        <parameter name="remoteEventHandler">
          <type api="T:OOAdvantech.Remoting.IRemoteEventHandler" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Remoting" />
        <type api="T:OOAdvantech.Remoting.ServerSessionPart" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Remoting.ServerSessionPart.Unsubscribe(OOAdvantech.Remoting.ExtObjectUri,System.Reflection.EventInfo)">
      <apidata name="Unsubscribe" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="eventPublisherUri">
          <type api="T:OOAdvantech.Remoting.ExtObjectUri" ref="true" />
        </parameter>
        <parameter name="eventInfo">
          <type api="T:System.Reflection.EventInfo" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Remoting" />
        <type api="T:OOAdvantech.Remoting.ServerSessionPart" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Remoting.ServerSessionPart.Unsubscribe(System.Collections.Generic.List{OOAdvantech.Remoting.RemoteEventSubscription})">
      <apidata name="Unsubscribe" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="eventSubscriptions">
          <type api="T:System.Collections.Generic.List`1" ref="true">
            <specialization>
              <type api="T:OOAdvantech.Remoting.RemoteEventSubscription" ref="false" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Remoting" />
        <type api="T:OOAdvantech.Remoting.ServerSessionPart" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Remoting.ServerSessionPart.Update(System.Collections.Generic.List{OOAdvantech.Remoting.ExtObjectUri}@,System.Collections.Generic.List{System.String},System.Collections.Generic.Dictionary{System.String,OOAdvantech.Collections.Generic.Dictionary{System.Reflection.EventInfo,OOAdvantech.Collections.ArrayList}}@)">
      <apidata name="Update" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="jastCreatedProxies">
          <referenceTo>
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <type api="T:OOAdvantech.Remoting.ExtObjectUri" ref="true" />
              </specialization>
            </type>
          </referenceTo>
        </parameter>
        <parameter name="collectedProxies">
          <type api="T:System.Collections.Generic.List`1" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="pendingEvents" out="true">
          <referenceTo>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:OOAdvantech.Collections.Generic.Dictionary`2" ref="true">
                  <specialization>
                    <type api="T:System.Reflection.EventInfo" ref="true" />
                    <type api="T:OOAdvantech.Collections.ArrayList" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </referenceTo>
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Remoting" />
        <type api="T:OOAdvantech.Remoting.ServerSessionPart" ref="true" />
      </containers>
    </api>
    <api id="N:OOAdvantech.Remoting.Sinks">
      <apidata name="OOAdvantech.Remoting.Sinks" group="namespace" />
      <elements>
        <element api="T:OOAdvantech.Remoting.Sinks.SinkType" />
        <element api="T:OOAdvantech.Remoting.Sinks.SupportSinkAttribute" />
        <element api="T:OOAdvantech.Remoting.Sinks.ClientSinkProvider" />
      </elements>
    </api>
    <api id="T:OOAdvantech.Remoting.Sinks.ClientSinkProvider">
      <apidata name="ClientSinkProvider" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Runtime.Remoting.Channels.IClientChannelSinkProvider" ref="true" />
        <type api="T:System.ICloneable" ref="true" />
      </implements>
      <elements>
        <element api="M:OOAdvantech.Remoting.Sinks.ClientSinkProvider.CreateSink(System.Runtime.Remoting.Channels.IChannelSender,System.String,System.Object)" />
        <element api="M:OOAdvantech.Remoting.Sinks.ClientSinkProvider.Clone" />
        <element api="M:OOAdvantech.Remoting.Sinks.ClientSinkProvider.#ctor" />
        <element api="P:OOAdvantech.Remoting.Sinks.ClientSinkProvider.Next" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Remoting.Sinks" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Remoting.Sinks.ClientSinkProvider.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Remoting.Sinks" />
        <type api="T:OOAdvantech.Remoting.Sinks.ClientSinkProvider" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Remoting.Sinks.ClientSinkProvider.Clone">
      <apidata name="Clone" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ICloneable.Clone">
          <type api="T:System.ICloneable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Remoting.Sinks" />
        <type api="T:OOAdvantech.Remoting.Sinks.ClientSinkProvider" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Remoting.Sinks.ClientSinkProvider.CreateSink(System.Runtime.Remoting.Channels.IChannelSender,System.String,System.Object)">
      <apidata name="CreateSink" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="channel">
          <type api="T:System.Runtime.Remoting.Channels.IChannelSender" ref="true" />
        </parameter>
        <parameter name="url">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="remoteChannelData">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Runtime.Remoting.Channels.IClientChannelSink" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Runtime.Remoting.Channels.IClientChannelSinkProvider.CreateSink(System.Runtime.Remoting.Channels.IChannelSender,System.String,System.Object)">
          <type api="T:System.Runtime.Remoting.Channels.IClientChannelSinkProvider" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Remoting.Sinks" />
        <type api="T:OOAdvantech.Remoting.Sinks.ClientSinkProvider" ref="true" />
      </containers>
    </api>
    <api id="P:OOAdvantech.Remoting.Sinks.ClientSinkProvider.Next">
      <apidata name="Next" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Next" />
      <setter name="set_Next" />
      <returns>
        <type api="T:System.Runtime.Remoting.Channels.IClientChannelSinkProvider" ref="true" />
      </returns>
      <implements>
        <member api="P:System.Runtime.Remoting.Channels.IClientChannelSinkProvider.Next">
          <type api="T:System.Runtime.Remoting.Channels.IClientChannelSinkProvider" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Remoting.Sinks" />
        <type api="T:OOAdvantech.Remoting.Sinks.ClientSinkProvider" ref="true" />
      </containers>
    </api>
    <api id="T:OOAdvantech.Remoting.Sinks.SinkType">
      <apidata name="SinkType" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="F:OOAdvantech.Remoting.Sinks.SinkType.MessageSink" />
        <element api="F:OOAdvantech.Remoting.Sinks.SinkType.StreamSink" />
      </elements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Remoting.Sinks" />
      </containers>
    </api>
    <api id="F:OOAdvantech.Remoting.Sinks.SinkType.MessageSink">
      <apidata name="MessageSink" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:OOAdvantech.Remoting.Sinks.SinkType" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Remoting.Sinks" />
        <type api="T:OOAdvantech.Remoting.Sinks.SinkType" ref="false" />
      </containers>
    </api>
    <api id="F:OOAdvantech.Remoting.Sinks.SinkType.StreamSink">
      <apidata name="StreamSink" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:OOAdvantech.Remoting.Sinks.SinkType" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Remoting.Sinks" />
        <type api="T:OOAdvantech.Remoting.Sinks.SinkType" ref="false" />
      </containers>
    </api>
    <api id="T:OOAdvantech.Remoting.Sinks.SupportSinkAttribute">
      <apidata name="SupportSinkAttribute" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:OOAdvantech.Remoting.Sinks.SupportSinkAttribute.#ctor(System.Type,OOAdvantech.Remoting.Sinks.SinkType,System.Type,OOAdvantech.Remoting.Sinks.SinkType)" />
        <element api="M:OOAdvantech.Remoting.Sinks.SupportSinkAttribute.CreateClientSinkProvider" />
        <element api="M:OOAdvantech.Remoting.Sinks.SupportSinkAttribute.CreateServerSinkProvider" />
        <element api="M:System.Attribute.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.Equals(System.Object)">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.GetHashCode">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.Match(System.Object)">
          <apidata name="Match" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.IsDefaultAttribute">
          <apidata name="IsDefaultAttribute" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)">
          <apidata name="GetTypeInfoCount" group="member" subgroup="method" />
          <memberdata visibility="private" />
          <proceduredata virtual="true" final="true" eii="true" />
          <parameters>
            <parameter name="pcTInfo" out="true">
              <referenceTo>
                <type api="T:System.UInt32" ref="false" />
              </referenceTo>
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Runtime.InteropServices._Attribute.GetTypeInfoCount(System.UInt32@)">
              <type api="T:System.Runtime.InteropServices._Attribute" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)">
          <apidata name="GetTypeInfo" group="member" subgroup="method" />
          <memberdata visibility="private" />
          <proceduredata virtual="true" final="true" eii="true" />
          <parameters>
            <parameter name="iTInfo">
              <type api="T:System.UInt32" ref="false" />
            </parameter>
            <parameter name="lcid">
              <type api="T:System.UInt32" ref="false" />
            </parameter>
            <parameter name="ppTInfo">
              <type api="T:System.IntPtr" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Runtime.InteropServices._Attribute.GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)">
              <type api="T:System.Runtime.InteropServices._Attribute" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)">
          <apidata name="GetIDsOfNames" group="member" subgroup="method" />
          <memberdata visibility="private" />
          <proceduredata virtual="true" final="true" eii="true" />
          <parameters>
            <parameter name="riid" in="true">
              <referenceTo>
                <type api="T:System.Guid" ref="false" />
              </referenceTo>
            </parameter>
            <parameter name="rgszNames">
              <type api="T:System.IntPtr" ref="false" />
            </parameter>
            <parameter name="cNames">
              <type api="T:System.UInt32" ref="false" />
            </parameter>
            <parameter name="lcid">
              <type api="T:System.UInt32" ref="false" />
            </parameter>
            <parameter name="rgDispId">
              <type api="T:System.IntPtr" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Runtime.InteropServices._Attribute.GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)">
              <type api="T:System.Runtime.InteropServices._Attribute" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)">
          <apidata name="Invoke" group="member" subgroup="method" />
          <memberdata visibility="private" />
          <proceduredata virtual="true" final="true" eii="true" />
          <parameters>
            <parameter name="dispIdMember">
              <type api="T:System.UInt32" ref="false" />
            </parameter>
            <parameter name="riid" in="true">
              <referenceTo>
                <type api="T:System.Guid" ref="false" />
              </referenceTo>
            </parameter>
            <parameter name="lcid">
              <type api="T:System.UInt32" ref="false" />
            </parameter>
            <parameter name="wFlags">
              <type api="T:System.Int16" ref="false" />
            </parameter>
            <parameter name="pDispParams">
              <type api="T:System.IntPtr" ref="false" />
            </parameter>
            <parameter name="pVarResult">
              <type api="T:System.IntPtr" ref="false" />
            </parameter>
            <parameter name="pExcepInfo">
              <type api="T:System.IntPtr" ref="false" />
            </parameter>
            <parameter name="puArgErr">
              <type api="T:System.IntPtr" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Runtime.InteropServices._Attribute.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)">
              <type api="T:System.Runtime.InteropServices._Attribute" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="P:System.Attribute.TypeId">
          <apidata name="TypeId" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_TypeId" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Remoting.Sinks" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Assembly" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:OOAdvantech.Remoting.Sinks.SupportSinkAttribute.#ctor(System.Type,OOAdvantech.Remoting.Sinks.SinkType,System.Type,OOAdvantech.Remoting.Sinks.SinkType)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="clientSinkProviderType">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="clientSinkType">
          <type api="T:OOAdvantech.Remoting.Sinks.SinkType" ref="false" />
        </parameter>
        <parameter name="serverSinkProviderType">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="serverSinkType">
          <type api="T:OOAdvantech.Remoting.Sinks.SinkType" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Remoting.Sinks" />
        <type api="T:OOAdvantech.Remoting.Sinks.SupportSinkAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Remoting.Sinks.SupportSinkAttribute.CreateClientSinkProvider">
      <apidata name="CreateClientSinkProvider" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Runtime.Remoting.Channels.IClientChannelSinkProvider" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Remoting.Sinks" />
        <type api="T:OOAdvantech.Remoting.Sinks.SupportSinkAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Remoting.Sinks.SupportSinkAttribute.CreateServerSinkProvider">
      <apidata name="CreateServerSinkProvider" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Runtime.Remoting.Channels.IServerChannelSinkProvider" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Remoting.Sinks" />
        <type api="T:OOAdvantech.Remoting.Sinks.SupportSinkAttribute" ref="true" />
      </containers>
    </api>
    <api id="N:OOAdvantech.Synchronization">
      <apidata name="OOAdvantech.Synchronization" group="namespace" />
      <elements>
        <element api="T:OOAdvantech.Synchronization.LockCookie" />
        <element api="T:OOAdvantech.Synchronization.ReaderWriterLock" />
        <element api="T:OOAdvantech.Synchronization.InternalReaderWriterLock" />
        <element api="T:OOAdvantech.Synchronization.InternalReaderWriterLock.CallData" />
        <element api="T:OOAdvantech.Synchronization.InternalLockCookie" />
        <element api="T:OOAdvantech.Synchronization.LogicalThreadReaderWriterLock" />
      </elements>
    </api>
    <api id="T:OOAdvantech.Synchronization.InternalLockCookie">
      <apidata name="InternalLockCookie" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" layout="sequential" format="ansi" />
      <elements>
        <element api="M:System.ValueType.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.Equals(System.Object)">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.ValueType" ref="true" />
          </containers>
        </element>
        <element api="M:System.ValueType.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.GetHashCode">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.ValueType" ref="true" />
          </containers>
        </element>
        <element api="M:System.ValueType.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.ToString">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.ValueType" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Synchronization" />
      </containers>
    </api>
    <api id="T:OOAdvantech.Synchronization.InternalReaderWriterLock">
      <apidata name="InternalReaderWriterLock" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:OOAdvantech.Synchronization.InternalReaderWriterLock.#ctor(System.Boolean)" />
        <element api="M:OOAdvantech.Synchronization.InternalReaderWriterLock.AcquireReaderLock(System.Double)" />
        <element api="M:OOAdvantech.Synchronization.InternalReaderWriterLock.AcquireWriterLock(System.Double)" />
        <element api="M:OOAdvantech.Synchronization.InternalReaderWriterLock.UpgradeToWriterLock(System.Double)" />
        <element api="M:OOAdvantech.Synchronization.InternalReaderWriterLock.DowngradeFromWriterLock(OOAdvantech.Synchronization.InternalLockCookie@)" />
        <element api="M:OOAdvantech.Synchronization.InternalReaderWriterLock.ReleaseReaderLock" />
        <element api="M:OOAdvantech.Synchronization.InternalReaderWriterLock.ReleaseWriterLock" />
        <element api="M:OOAdvantech.Synchronization.InternalReaderWriterLock.ReleaseLock" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Synchronization" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Synchronization.InternalReaderWriterLock.#ctor(System.Boolean)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="deadLockDebug">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Synchronization" />
        <type api="T:OOAdvantech.Synchronization.InternalReaderWriterLock" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Synchronization.InternalReaderWriterLock.AcquireReaderLock(System.Double)">
      <apidata name="AcquireReaderLock" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="millisecondsTimeout">
          <type api="T:System.Double" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Synchronization" />
        <type api="T:OOAdvantech.Synchronization.InternalReaderWriterLock" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Synchronization.InternalReaderWriterLock.AcquireWriterLock(System.Double)">
      <apidata name="AcquireWriterLock" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="millisecondsTimeout">
          <type api="T:System.Double" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Synchronization" />
        <type api="T:OOAdvantech.Synchronization.InternalReaderWriterLock" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Synchronization.InternalReaderWriterLock.DowngradeFromWriterLock(OOAdvantech.Synchronization.InternalLockCookie@)">
      <apidata name="DowngradeFromWriterLock" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="lockCookie">
          <referenceTo>
            <type api="T:OOAdvantech.Synchronization.InternalLockCookie" ref="false" />
          </referenceTo>
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Synchronization" />
        <type api="T:OOAdvantech.Synchronization.InternalReaderWriterLock" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Synchronization.InternalReaderWriterLock.ReleaseLock">
      <apidata name="ReleaseLock" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:OOAdvantech.Synchronization.InternalLockCookie" ref="false" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Synchronization" />
        <type api="T:OOAdvantech.Synchronization.InternalReaderWriterLock" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Synchronization.InternalReaderWriterLock.ReleaseReaderLock">
      <apidata name="ReleaseReaderLock" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Synchronization" />
        <type api="T:OOAdvantech.Synchronization.InternalReaderWriterLock" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Synchronization.InternalReaderWriterLock.ReleaseWriterLock">
      <apidata name="ReleaseWriterLock" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Synchronization" />
        <type api="T:OOAdvantech.Synchronization.InternalReaderWriterLock" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Synchronization.InternalReaderWriterLock.UpgradeToWriterLock(System.Double)">
      <apidata name="UpgradeToWriterLock" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="millisecondsTimeout">
          <type api="T:System.Double" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:OOAdvantech.Synchronization.InternalLockCookie" ref="false" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Synchronization" />
        <type api="T:OOAdvantech.Synchronization.InternalReaderWriterLock" ref="true" />
      </containers>
    </api>
    <api id="T:OOAdvantech.Synchronization.InternalReaderWriterLock.CallData">
      <apidata name="CallData" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" layout="sequential" format="ansi" />
      <elements>
        <element api="F:OOAdvantech.Synchronization.InternalReaderWriterLock.CallData.StackTrace" />
        <element api="F:OOAdvantech.Synchronization.InternalReaderWriterLock.CallData.ThreadID" />
        <element api="M:System.ValueType.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.Equals(System.Object)">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.ValueType" ref="true" />
          </containers>
        </element>
        <element api="M:System.ValueType.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.GetHashCode">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.ValueType" ref="true" />
          </containers>
        </element>
        <element api="M:System.ValueType.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.ToString">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.ValueType" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Synchronization" />
        <type api="T:OOAdvantech.Synchronization.InternalReaderWriterLock" ref="true" />
      </containers>
    </api>
    <api id="F:OOAdvantech.Synchronization.InternalReaderWriterLock.CallData.StackTrace">
      <apidata name="StackTrace" group="member" subgroup="field" />
      <memberdata visibility="public" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.StackTrace" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Synchronization" />
        <type api="T:OOAdvantech.Synchronization.InternalReaderWriterLock.CallData" ref="false">
          <type api="T:OOAdvantech.Synchronization.InternalReaderWriterLock" ref="true" />
        </type>
      </containers>
    </api>
    <api id="F:OOAdvantech.Synchronization.InternalReaderWriterLock.CallData.ThreadID">
      <apidata name="ThreadID" group="member" subgroup="field" />
      <memberdata visibility="public" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Synchronization" />
        <type api="T:OOAdvantech.Synchronization.InternalReaderWriterLock.CallData" ref="false">
          <type api="T:OOAdvantech.Synchronization.InternalReaderWriterLock" ref="true" />
        </type>
      </containers>
    </api>
    <api id="T:OOAdvantech.Synchronization.LockCookie">
      <apidata name="LockCookie" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" layout="sequential" format="ansi" />
      <elements>
        <element api="M:System.ValueType.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.Equals(System.Object)">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.ValueType" ref="true" />
          </containers>
        </element>
        <element api="M:System.ValueType.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.GetHashCode">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.ValueType" ref="true" />
          </containers>
        </element>
        <element api="M:System.ValueType.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.ToString">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.ValueType" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Synchronization" />
      </containers>
    </api>
    <api id="T:OOAdvantech.Synchronization.LogicalThreadReaderWriterLock">
      <apidata name="LogicalThreadReaderWriterLock" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:OOAdvantech.Synchronization.LogicalThreadReaderWriterLock.#ctor" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Synchronization" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Synchronization.LogicalThreadReaderWriterLock.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Synchronization" />
        <type api="T:OOAdvantech.Synchronization.LogicalThreadReaderWriterLock" ref="true" />
      </containers>
    </api>
    <api id="T:OOAdvantech.Synchronization.ReaderWriterLock">
      <apidata name="ReaderWriterLock" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:OOAdvantech.Synchronization.ReaderWriterLock.#ctor" />
        <element api="M:OOAdvantech.Synchronization.ReaderWriterLock.#ctor(System.Boolean)" />
        <element api="M:OOAdvantech.Synchronization.ReaderWriterLock.AcquireReaderLock(System.Int32)" />
        <element api="M:OOAdvantech.Synchronization.ReaderWriterLock.AcquireReaderLock(System.TimeSpan)" />
        <element api="M:OOAdvantech.Synchronization.ReaderWriterLock.AcquireWriterLock(System.Int32)" />
        <element api="M:OOAdvantech.Synchronization.ReaderWriterLock.AcquireWriterLock(System.TimeSpan)" />
        <element api="M:OOAdvantech.Synchronization.ReaderWriterLock.UpgradeToWriterLock(System.Int32)" />
        <element api="M:OOAdvantech.Synchronization.ReaderWriterLock.UpgradeToWriterLock(System.TimeSpan)" />
        <element api="M:OOAdvantech.Synchronization.ReaderWriterLock.ReleaseReaderLock" />
        <element api="M:OOAdvantech.Synchronization.ReaderWriterLock.ReleaseWriterLock" />
        <element api="M:OOAdvantech.Synchronization.ReaderWriterLock.DowngradeFromWriterLock(OOAdvantech.Synchronization.LockCookie@)" />
        <element api="M:OOAdvantech.Synchronization.ReaderWriterLock.ReleaseLock" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Synchronization" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Synchronization.ReaderWriterLock.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Synchronization" />
        <type api="T:OOAdvantech.Synchronization.ReaderWriterLock" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Synchronization.ReaderWriterLock.#ctor(System.Boolean)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="debugMode">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Synchronization" />
        <type api="T:OOAdvantech.Synchronization.ReaderWriterLock" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Synchronization.ReaderWriterLock.AcquireReaderLock(System.Int32)">
      <apidata name="AcquireReaderLock" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="millisecondsTimeout">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Synchronization" />
        <type api="T:OOAdvantech.Synchronization.ReaderWriterLock" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Synchronization.ReaderWriterLock.AcquireReaderLock(System.TimeSpan)">
      <apidata name="AcquireReaderLock" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="timeout">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Synchronization" />
        <type api="T:OOAdvantech.Synchronization.ReaderWriterLock" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Synchronization.ReaderWriterLock.AcquireWriterLock(System.Int32)">
      <apidata name="AcquireWriterLock" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="millisecondsTimeout">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Synchronization" />
        <type api="T:OOAdvantech.Synchronization.ReaderWriterLock" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Synchronization.ReaderWriterLock.AcquireWriterLock(System.TimeSpan)">
      <apidata name="AcquireWriterLock" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="timeout">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Synchronization" />
        <type api="T:OOAdvantech.Synchronization.ReaderWriterLock" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Synchronization.ReaderWriterLock.DowngradeFromWriterLock(OOAdvantech.Synchronization.LockCookie@)">
      <apidata name="DowngradeFromWriterLock" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="lockCookie">
          <referenceTo>
            <type api="T:OOAdvantech.Synchronization.LockCookie" ref="false" />
          </referenceTo>
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Synchronization" />
        <type api="T:OOAdvantech.Synchronization.ReaderWriterLock" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Synchronization.ReaderWriterLock.ReleaseLock">
      <apidata name="ReleaseLock" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:OOAdvantech.Synchronization.LockCookie" ref="false" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Synchronization" />
        <type api="T:OOAdvantech.Synchronization.ReaderWriterLock" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Synchronization.ReaderWriterLock.ReleaseReaderLock">
      <apidata name="ReleaseReaderLock" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Synchronization" />
        <type api="T:OOAdvantech.Synchronization.ReaderWriterLock" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Synchronization.ReaderWriterLock.ReleaseWriterLock">
      <apidata name="ReleaseWriterLock" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Synchronization" />
        <type api="T:OOAdvantech.Synchronization.ReaderWriterLock" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Synchronization.ReaderWriterLock.UpgradeToWriterLock(System.Int32)">
      <apidata name="UpgradeToWriterLock" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="millisecondsTimeout">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:OOAdvantech.Synchronization.LockCookie" ref="false" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Synchronization" />
        <type api="T:OOAdvantech.Synchronization.ReaderWriterLock" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Synchronization.ReaderWriterLock.UpgradeToWriterLock(System.TimeSpan)">
      <apidata name="UpgradeToWriterLock" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="timeout">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:OOAdvantech.Synchronization.LockCookie" ref="false" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Synchronization" />
        <type api="T:OOAdvantech.Synchronization.ReaderWriterLock" ref="true" />
      </containers>
    </api>
    <api id="N:OOAdvantech.Transactions">
      <apidata name="OOAdvantech.Transactions" group="namespace" />
      <elements>
        <element api="T:OOAdvantech.Transactions.ServerLockControlSession" />
        <element api="T:OOAdvantech.Transactions.ServerLockControlSession.ObjectLockEventHandler" />
        <element api="T:OOAdvantech.Transactions.ITransactionContextExtender" />
        <element api="T:OOAdvantech.Transactions.ITransactionalObject" />
        <element api="T:OOAdvantech.Transactions.SystemStateTransition" />
        <element api="T:OOAdvantech.Transactions.TransactionalAttribute" />
        <element api="T:OOAdvantech.Transactions.Exception" />
        <element api="T:OOAdvantech.Transactions.ObjectsStateManagerStatus" />
        <element api="T:OOAdvantech.Transactions.TransactionCompletedEventHandler" />
        <element api="T:OOAdvantech.Transactions.TransactionDistributedEventHandler" />
        <element api="T:OOAdvantech.Transactions.Transaction" />
        <element api="T:OOAdvantech.Transactions.CommittableTransaction" />
        <element api="T:OOAdvantech.Transactions.ITransactionContext" />
        <element api="T:OOAdvantech.Transactions.LockType" />
        <element api="T:OOAdvantech.Transactions.TransactionManager" />
        <element api="T:OOAdvantech.Transactions.ITransactionContextProvider" />
        <element api="T:OOAdvantech.Transactions.ObjectStateTransition" />
        <element api="T:OOAdvantech.Transactions.ContainByValue" />
        <element api="T:OOAdvantech.Transactions.LockOptions" />
        <element api="T:OOAdvantech.Transactions.TransactionalMemberAttribute" />
        <element api="T:OOAdvantech.Transactions.TransactionInterop" />
        <element api="T:OOAdvantech.Transactions.TransactionOption" />
        <element api="T:OOAdvantech.Transactions.TransactionStatus" />
      </elements>
    </api>
    <api id="T:OOAdvantech.Transactions.CommittableTransaction">
      <apidata name="CommittableTransaction" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:OOAdvantech.Transactions.Transaction" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:OOAdvantech.Transactions.CommittableTransaction.#ctor" />
        <element api="M:OOAdvantech.Transactions.CommittableTransaction.#ctor(OOAdvantech.Transactions.Transaction)" />
        <element api="M:OOAdvantech.Transactions.CommittableTransaction.Commit" />
        <element api="M:OOAdvantech.Transactions.CommittableTransaction.WaitToComplete(System.Int32)" />
        <element api="M:OOAdvantech.Transactions.CommittableTransaction.WaitToComplete(System.TimeSpan)" />
        <element api="P:OOAdvantech.Transactions.CommittableTransaction.Transaction" />
        <element api="P:OOAdvantech.Transactions.CommittableTransaction.NestedTransactions" />
        <element api="P:OOAdvantech.Transactions.CommittableTransaction.OriginTransaction" />
        <element api="E:OOAdvantech.Transactions.CommittableTransaction.TransactionCompleted" />
        <element api="E:OOAdvantech.Transactions.CommittableTransaction.TransactionDistributed" />
        <element api="F:OOAdvantech.Transactions.Transaction.InternalTransaction" />
        <element api="M:OOAdvantech.Transactions.Transaction.Equals(System.Object)" />
        <element api="M:OOAdvantech.Transactions.Transaction.GetHashCode" />
        <element api="M:OOAdvantech.Transactions.Transaction.Abort(System.Exception)" />
        <element api="M:OOAdvantech.Transactions.Transaction.Abort" />
        <element api="P:OOAdvantech.Transactions.Transaction.Status" />
        <element api="P:OOAdvantech.Transactions.Transaction.LocalTransactionUri" />
        <element api="P:OOAdvantech.Transactions.Transaction.GlobalTransactionUri" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Transactions" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Transactions.CommittableTransaction.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Transactions" />
        <type api="T:OOAdvantech.Transactions.CommittableTransaction" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Transactions.CommittableTransaction.#ctor(OOAdvantech.Transactions.Transaction)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="transaction">
          <type api="T:OOAdvantech.Transactions.Transaction" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Transactions" />
        <type api="T:OOAdvantech.Transactions.CommittableTransaction" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Transactions.CommittableTransaction.Commit">
      <apidata name="Commit" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Transactions" />
        <type api="T:OOAdvantech.Transactions.CommittableTransaction" ref="true" />
      </containers>
    </api>
    <api id="P:OOAdvantech.Transactions.CommittableTransaction.NestedTransactions">
      <apidata name="NestedTransactions" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:OOAdvantech.Transactions.Transaction.NestedTransactions">
          <type api="T:OOAdvantech.Transactions.Transaction" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_NestedTransactions" />
      <returns>
        <type api="T:System.Collections.Generic.List`1" ref="true">
          <specialization>
            <type api="T:OOAdvantech.Transactions.Transaction" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Transactions" />
        <type api="T:OOAdvantech.Transactions.CommittableTransaction" ref="true" />
      </containers>
    </api>
    <api id="P:OOAdvantech.Transactions.CommittableTransaction.OriginTransaction">
      <apidata name="OriginTransaction" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:OOAdvantech.Transactions.Transaction.OriginTransaction">
          <type api="T:OOAdvantech.Transactions.Transaction" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_OriginTransaction" />
      <returns>
        <type api="T:OOAdvantech.Transactions.Transaction" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Transactions" />
        <type api="T:OOAdvantech.Transactions.CommittableTransaction" ref="true" />
      </containers>
    </api>
    <api id="P:OOAdvantech.Transactions.CommittableTransaction.Transaction">
      <apidata name="Transaction" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Transaction" />
      <returns>
        <type api="T:OOAdvantech.Transactions.Transaction" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Transactions" />
        <type api="T:OOAdvantech.Transactions.CommittableTransaction" ref="true" />
      </containers>
    </api>
    <api id="E:OOAdvantech.Transactions.CommittableTransaction.TransactionCompleted">
      <apidata name="TransactionCompleted" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="E:OOAdvantech.Transactions.Transaction.TransactionCompleted">
          <type api="T:OOAdvantech.Transactions.Transaction" ref="true" />
        </member>
      </overrides>
      <eventdata add="true" remove="true" />
      <adder name="add_TransactionCompleted" />
      <remover name="remove_TransactionCompleted" />
      <eventhandler>
        <type api="T:OOAdvantech.Transactions.TransactionCompletedEventHandler" ref="true" />
      </eventhandler>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Transactions" />
        <type api="T:OOAdvantech.Transactions.CommittableTransaction" ref="true" />
      </containers>
    </api>
    <api id="E:OOAdvantech.Transactions.CommittableTransaction.TransactionDistributed">
      <apidata name="TransactionDistributed" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="E:OOAdvantech.Transactions.Transaction.TransactionDistributed">
          <type api="T:OOAdvantech.Transactions.Transaction" ref="true" />
        </member>
      </overrides>
      <eventdata add="true" remove="true" />
      <adder name="add_TransactionDistributed" />
      <remover name="remove_TransactionDistributed" />
      <eventhandler>
        <type api="T:OOAdvantech.Transactions.TransactionDistributedEventHandler" ref="true" />
      </eventhandler>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Transactions" />
        <type api="T:OOAdvantech.Transactions.CommittableTransaction" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Transactions.CommittableTransaction.WaitToComplete(System.Int32)">
      <apidata name="WaitToComplete" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:OOAdvantech.Transactions.Transaction.WaitToComplete(System.Int32)">
          <type api="T:OOAdvantech.Transactions.Transaction" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="millisecondsTimeout">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Transactions" />
        <type api="T:OOAdvantech.Transactions.CommittableTransaction" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Transactions.CommittableTransaction.WaitToComplete(System.TimeSpan)">
      <apidata name="WaitToComplete" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:OOAdvantech.Transactions.Transaction.WaitToComplete(System.TimeSpan)">
          <type api="T:OOAdvantech.Transactions.Transaction" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="timeout">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Transactions" />
        <type api="T:OOAdvantech.Transactions.CommittableTransaction" ref="true" />
      </containers>
    </api>
    <api id="T:OOAdvantech.Transactions.ContainByValue">
      <apidata name="ContainByValue" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:OOAdvantech.Transactions.ContainByValue.#ctor" />
        <element api="M:System.Attribute.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.Equals(System.Object)">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.GetHashCode">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.Match(System.Object)">
          <apidata name="Match" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.IsDefaultAttribute">
          <apidata name="IsDefaultAttribute" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)">
          <apidata name="GetTypeInfoCount" group="member" subgroup="method" />
          <memberdata visibility="private" />
          <proceduredata virtual="true" final="true" eii="true" />
          <parameters>
            <parameter name="pcTInfo" out="true">
              <referenceTo>
                <type api="T:System.UInt32" ref="false" />
              </referenceTo>
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Runtime.InteropServices._Attribute.GetTypeInfoCount(System.UInt32@)">
              <type api="T:System.Runtime.InteropServices._Attribute" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)">
          <apidata name="GetTypeInfo" group="member" subgroup="method" />
          <memberdata visibility="private" />
          <proceduredata virtual="true" final="true" eii="true" />
          <parameters>
            <parameter name="iTInfo">
              <type api="T:System.UInt32" ref="false" />
            </parameter>
            <parameter name="lcid">
              <type api="T:System.UInt32" ref="false" />
            </parameter>
            <parameter name="ppTInfo">
              <type api="T:System.IntPtr" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Runtime.InteropServices._Attribute.GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)">
              <type api="T:System.Runtime.InteropServices._Attribute" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)">
          <apidata name="GetIDsOfNames" group="member" subgroup="method" />
          <memberdata visibility="private" />
          <proceduredata virtual="true" final="true" eii="true" />
          <parameters>
            <parameter name="riid" in="true">
              <referenceTo>
                <type api="T:System.Guid" ref="false" />
              </referenceTo>
            </parameter>
            <parameter name="rgszNames">
              <type api="T:System.IntPtr" ref="false" />
            </parameter>
            <parameter name="cNames">
              <type api="T:System.UInt32" ref="false" />
            </parameter>
            <parameter name="lcid">
              <type api="T:System.UInt32" ref="false" />
            </parameter>
            <parameter name="rgDispId">
              <type api="T:System.IntPtr" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Runtime.InteropServices._Attribute.GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)">
              <type api="T:System.Runtime.InteropServices._Attribute" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)">
          <apidata name="Invoke" group="member" subgroup="method" />
          <memberdata visibility="private" />
          <proceduredata virtual="true" final="true" eii="true" />
          <parameters>
            <parameter name="dispIdMember">
              <type api="T:System.UInt32" ref="false" />
            </parameter>
            <parameter name="riid" in="true">
              <referenceTo>
                <type api="T:System.Guid" ref="false" />
              </referenceTo>
            </parameter>
            <parameter name="lcid">
              <type api="T:System.UInt32" ref="false" />
            </parameter>
            <parameter name="wFlags">
              <type api="T:System.Int16" ref="false" />
            </parameter>
            <parameter name="pDispParams">
              <type api="T:System.IntPtr" ref="false" />
            </parameter>
            <parameter name="pVarResult">
              <type api="T:System.IntPtr" ref="false" />
            </parameter>
            <parameter name="pExcepInfo">
              <type api="T:System.IntPtr" ref="false" />
            </parameter>
            <parameter name="puArgErr">
              <type api="T:System.IntPtr" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Runtime.InteropServices._Attribute.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)">
              <type api="T:System.Runtime.InteropServices._Attribute" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="P:System.Attribute.TypeId">
          <apidata name="TypeId" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_TypeId" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Transactions" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Class" />
              <field name="Field" />
              <field name="Interface" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:OOAdvantech.Transactions.ContainByValue.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Transactions" />
        <type api="T:OOAdvantech.Transactions.ContainByValue" ref="true" />
      </containers>
    </api>
    <api id="T:OOAdvantech.Transactions.Exception">
      <apidata name="Exception" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="F:OOAdvantech.Transactions.Exception.AbortReasons" />
        <element api="M:OOAdvantech.Transactions.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:OOAdvantech.Transactions.Exception.#ctor(OOAdvantech.Collections.Generic.List{System.Exception},System.String,System.Exception)" />
        <element api="M:OOAdvantech.Transactions.Exception.#ctor(OOAdvantech.Collections.Generic.List{System.Exception},System.String)" />
        <element api="M:OOAdvantech.Transactions.Exception.#ctor(OOAdvantech.Collections.Generic.List{System.Exception})" />
        <element api="M:OOAdvantech.Transactions.Exception.#ctor" />
        <element api="M:System.Exception.GetBaseException">
          <apidata name="GetBaseException" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.GetBaseException">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.ToString">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.ToString">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.GetType">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Message">
          <apidata name="Message" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_Message" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.Message">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Data">
          <apidata name="Data" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_Data" />
          <returns>
            <type api="T:System.Collections.IDictionary" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.InnerException">
          <apidata name="InnerException" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_InnerException" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.InnerException">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.TargetSite">
          <apidata name="TargetSite" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_TargetSite" />
          <returns>
            <type api="T:System.Reflection.MethodBase" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.TargetSite">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.StackTrace">
          <apidata name="StackTrace" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_StackTrace" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.StackTrace">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.HelpLink">
          <apidata name="HelpLink" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_HelpLink" />
          <setter name="set_HelpLink" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.HelpLink">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Source">
          <apidata name="Source" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Source" />
          <setter name="set_Source" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.Source">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.HResult">
          <apidata name="HResult" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_HResult" />
          <setter name="set_HResult" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Transactions" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Transactions.Exception.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Transactions" />
        <type api="T:OOAdvantech.Transactions.Exception" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Transactions.Exception.#ctor(OOAdvantech.Collections.Generic.List{System.Exception})">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="abortReasons">
          <type api="T:OOAdvantech.Collections.Generic.List`1" ref="true">
            <specialization>
              <type api="T:System.Exception" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Transactions" />
        <type api="T:OOAdvantech.Transactions.Exception" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Transactions.Exception.#ctor(OOAdvantech.Collections.Generic.List{System.Exception},System.String)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="abortReasons">
          <type api="T:OOAdvantech.Collections.Generic.List`1" ref="true">
            <specialization>
              <type api="T:System.Exception" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Transactions" />
        <type api="T:OOAdvantech.Transactions.Exception" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Transactions.Exception.#ctor(OOAdvantech.Collections.Generic.List{System.Exception},System.String,System.Exception)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="abortReasons">
          <type api="T:OOAdvantech.Collections.Generic.List`1" ref="true">
            <specialization>
              <type api="T:System.Exception" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="innerException">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Transactions" />
        <type api="T:OOAdvantech.Transactions.Exception" ref="true" />
      </containers>
    </api>
    <api id="F:OOAdvantech.Transactions.Exception.AbortReasons">
      <apidata name="AbortReasons" group="member" subgroup="field" />
      <memberdata visibility="public" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:OOAdvantech.Collections.Generic.List`1" ref="true">
          <specialization>
            <type api="T:System.Exception" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Transactions" />
        <type api="T:OOAdvantech.Transactions.Exception" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Transactions.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <apidata name="GetObjectData" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Exception" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
        </member>
        <member api="M:System.Runtime.InteropServices._Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Transactions" />
        <type api="T:OOAdvantech.Transactions.Exception" ref="true" />
      </containers>
    </api>
    <api id="T:OOAdvantech.Transactions.ITransactionalObject">
      <apidata name="ITransactionalObject" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <implementors>
        <type api="T:OOAdvantech.Collections.Generic.Set`1" ref="true" />
        <type api="T:OOAdvantech.PersistenceLayer.ObjectCollection" ref="true" />
        <type api="T:OOAdvantech.MetaDataRepository.MetaObjectCollectionA" ref="true" />
        <type api="T:OOAdvantech.Member`1" ref="true" />
        <type api="T:OOAdvantech.ExtensionProperties" ref="true" />
      </implementors>
      <elements>
        <element api="M:OOAdvantech.Transactions.ITransactionalObject.MergeChanges(OOAdvantech.Transactions.Transaction,OOAdvantech.Transactions.Transaction)" />
        <element api="M:OOAdvantech.Transactions.ITransactionalObject.MarkChanges(OOAdvantech.Transactions.Transaction)" />
        <element api="M:OOAdvantech.Transactions.ITransactionalObject.MarkChanges(OOAdvantech.Transactions.Transaction,System.Reflection.FieldInfo[])" />
        <element api="M:OOAdvantech.Transactions.ITransactionalObject.UndoChanges(OOAdvantech.Transactions.Transaction)" />
        <element api="M:OOAdvantech.Transactions.ITransactionalObject.CommitChanges(OOAdvantech.Transactions.Transaction)" />
      </elements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Transactions" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Transactions.ITransactionalObject.CommitChanges(OOAdvantech.Transactions.Transaction)">
      <apidata name="CommitChanges" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="transaction">
          <type api="T:OOAdvantech.Transactions.Transaction" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Transactions" />
        <type api="T:OOAdvantech.Transactions.ITransactionalObject" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Transactions.ITransactionalObject.MarkChanges(OOAdvantech.Transactions.Transaction)">
      <apidata name="MarkChanges" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="transaction">
          <type api="T:OOAdvantech.Transactions.Transaction" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Transactions" />
        <type api="T:OOAdvantech.Transactions.ITransactionalObject" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Transactions.ITransactionalObject.MarkChanges(OOAdvantech.Transactions.Transaction,System.Reflection.FieldInfo[])">
      <apidata name="MarkChanges" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="transaction">
          <type api="T:OOAdvantech.Transactions.Transaction" ref="true" />
        </parameter>
        <parameter name="fields">
          <arrayOf rank="1">
            <type api="T:System.Reflection.FieldInfo" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Transactions" />
        <type api="T:OOAdvantech.Transactions.ITransactionalObject" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Transactions.ITransactionalObject.MergeChanges(OOAdvantech.Transactions.Transaction,OOAdvantech.Transactions.Transaction)">
      <apidata name="MergeChanges" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="masterTransaction">
          <type api="T:OOAdvantech.Transactions.Transaction" ref="true" />
        </parameter>
        <parameter name="nestedTransaction">
          <type api="T:OOAdvantech.Transactions.Transaction" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Transactions" />
        <type api="T:OOAdvantech.Transactions.ITransactionalObject" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Transactions.ITransactionalObject.UndoChanges(OOAdvantech.Transactions.Transaction)">
      <apidata name="UndoChanges" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="transaction">
          <type api="T:OOAdvantech.Transactions.Transaction" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Transactions" />
        <type api="T:OOAdvantech.Transactions.ITransactionalObject" ref="true" />
      </containers>
    </api>
    <api id="T:OOAdvantech.Transactions.ITransactionContext">
      <apidata name="ITransactionContext" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:OOAdvantech.Transactions.ITransactionContext.Extenders" />
        <element api="P:OOAdvantech.Transactions.ITransactionContext.Status" />
      </elements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Transactions" />
      </containers>
    </api>
    <api id="P:OOAdvantech.Transactions.ITransactionContext.Extenders">
      <apidata name="Extenders" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_Extenders" />
      <returns>
        <type api="T:OOAdvantech.Collections.Generic.List`1" ref="true">
          <specialization>
            <type api="T:OOAdvantech.Transactions.ITransactionContextExtender" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Transactions" />
        <type api="T:OOAdvantech.Transactions.ITransactionContext" ref="true" />
      </containers>
    </api>
    <api id="P:OOAdvantech.Transactions.ITransactionContext.Status">
      <apidata name="Status" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Status" />
      <setter name="set_Status" />
      <returns>
        <type api="T:OOAdvantech.Transactions.ObjectsStateManagerStatus" ref="false" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Transactions" />
        <type api="T:OOAdvantech.Transactions.ITransactionContext" ref="true" />
      </containers>
    </api>
    <api id="T:OOAdvantech.Transactions.ITransactionContextExtender">
      <apidata name="ITransactionContextExtender" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:OOAdvantech.Transactions.ITransactionContextExtender.EnlistObject(System.Object,System.Reflection.FieldInfo)" />
        <element api="M:OOAdvantech.Transactions.ITransactionContextExtender.Abort" />
        <element api="M:OOAdvantech.Transactions.ITransactionContextExtender.Commit" />
        <element api="M:OOAdvantech.Transactions.ITransactionContextExtender.Prepare" />
      </elements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Transactions" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Transactions.ITransactionContextExtender.Abort">
      <apidata name="Abort" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Transactions" />
        <type api="T:OOAdvantech.Transactions.ITransactionContextExtender" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Transactions.ITransactionContextExtender.Commit">
      <apidata name="Commit" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Transactions" />
        <type api="T:OOAdvantech.Transactions.ITransactionContextExtender" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Transactions.ITransactionContextExtender.EnlistObject(System.Object,System.Reflection.FieldInfo)">
      <apidata name="EnlistObject" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="TransactionedObject">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="fieldInfo">
          <type api="T:System.Reflection.FieldInfo" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Transactions" />
        <type api="T:OOAdvantech.Transactions.ITransactionContextExtender" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Transactions.ITransactionContextExtender.Prepare">
      <apidata name="Prepare" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Transactions" />
        <type api="T:OOAdvantech.Transactions.ITransactionContextExtender" ref="true" />
      </containers>
    </api>
    <api id="T:OOAdvantech.Transactions.ITransactionContextProvider">
      <apidata name="ITransactionContextProvider" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:OOAdvantech.Transactions.ITransactionContextProvider.CreateTransactionContext(OOAdvantech.Transactions.Transaction)" />
      </elements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Transactions" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Transactions.ITransactionContextProvider.CreateTransactionContext(OOAdvantech.Transactions.Transaction)">
      <apidata name="CreateTransactionContext" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="transaction">
          <type api="T:OOAdvantech.Transactions.Transaction" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:OOAdvantech.Transactions.ITransactionContextExtender" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Transactions" />
        <type api="T:OOAdvantech.Transactions.ITransactionContextProvider" ref="true" />
      </containers>
    </api>
    <api id="T:OOAdvantech.Transactions.LockOptions">
      <apidata name="LockOptions" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="F:OOAdvantech.Transactions.LockOptions.Shared" />
        <element api="F:OOAdvantech.Transactions.LockOptions.Exclusive" />
      </elements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Transactions" />
      </containers>
    </api>
    <api id="F:OOAdvantech.Transactions.LockOptions.Exclusive">
      <apidata name="Exclusive" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:OOAdvantech.Transactions.LockOptions" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Transactions" />
        <type api="T:OOAdvantech.Transactions.LockOptions" ref="false" />
      </containers>
    </api>
    <api id="F:OOAdvantech.Transactions.LockOptions.Shared">
      <apidata name="Shared" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:OOAdvantech.Transactions.LockOptions" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Transactions" />
        <type api="T:OOAdvantech.Transactions.LockOptions" ref="false" />
      </containers>
    </api>
    <api id="T:OOAdvantech.Transactions.LockType">
      <apidata name="LockType" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="F:OOAdvantech.Transactions.LockType.SharedFieldsParticipation" />
        <element api="F:OOAdvantech.Transactions.LockType.ExclusiveObjectLock" />
        <element api="F:OOAdvantech.Transactions.LockType.ObjectLock" />
        <element api="F:OOAdvantech.Transactions.LockType.PartialObjectLock" />
        <element api="F:OOAdvantech.Transactions.LockType.Unlocked" />
      </elements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Transactions" />
      </containers>
    </api>
    <api id="F:OOAdvantech.Transactions.LockType.ExclusiveObjectLock">
      <apidata name="ExclusiveObjectLock" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:OOAdvantech.Transactions.LockType" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Transactions" />
        <type api="T:OOAdvantech.Transactions.LockType" ref="false" />
      </containers>
    </api>
    <api id="F:OOAdvantech.Transactions.LockType.ObjectLock">
      <apidata name="ObjectLock" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:OOAdvantech.Transactions.LockType" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Transactions" />
        <type api="T:OOAdvantech.Transactions.LockType" ref="false" />
      </containers>
    </api>
    <api id="F:OOAdvantech.Transactions.LockType.PartialObjectLock">
      <apidata name="PartialObjectLock" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:OOAdvantech.Transactions.LockType" ref="false" />
      </returns>
      <value>3</value>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Transactions" />
        <type api="T:OOAdvantech.Transactions.LockType" ref="false" />
      </containers>
    </api>
    <api id="F:OOAdvantech.Transactions.LockType.SharedFieldsParticipation">
      <apidata name="SharedFieldsParticipation" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:OOAdvantech.Transactions.LockType" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Transactions" />
        <type api="T:OOAdvantech.Transactions.LockType" ref="false" />
      </containers>
    </api>
    <api id="F:OOAdvantech.Transactions.LockType.Unlocked">
      <apidata name="Unlocked" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:OOAdvantech.Transactions.LockType" ref="false" />
      </returns>
      <value>4</value>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Transactions" />
        <type api="T:OOAdvantech.Transactions.LockType" ref="false" />
      </containers>
    </api>
    <api id="T:OOAdvantech.Transactions.ObjectsStateManagerStatus">
      <apidata name="ObjectsStateManagerStatus" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="F:OOAdvantech.Transactions.ObjectsStateManagerStatus.OnAction" />
        <element api="F:OOAdvantech.Transactions.ObjectsStateManagerStatus.PrepareRequest" />
        <element api="F:OOAdvantech.Transactions.ObjectsStateManagerStatus.PrepareDone" />
        <element api="F:OOAdvantech.Transactions.ObjectsStateManagerStatus.CommitRequest" />
        <element api="F:OOAdvantech.Transactions.ObjectsStateManagerStatus.CommitDone" />
        <element api="F:OOAdvantech.Transactions.ObjectsStateManagerStatus.AbortRequest" />
        <element api="F:OOAdvantech.Transactions.ObjectsStateManagerStatus.AbortDone" />
      </elements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Transactions" />
      </containers>
    </api>
    <api id="F:OOAdvantech.Transactions.ObjectsStateManagerStatus.AbortDone">
      <apidata name="AbortDone" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:OOAdvantech.Transactions.ObjectsStateManagerStatus" ref="false" />
      </returns>
      <value>6</value>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Transactions" />
        <type api="T:OOAdvantech.Transactions.ObjectsStateManagerStatus" ref="false" />
      </containers>
    </api>
    <api id="F:OOAdvantech.Transactions.ObjectsStateManagerStatus.AbortRequest">
      <apidata name="AbortRequest" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:OOAdvantech.Transactions.ObjectsStateManagerStatus" ref="false" />
      </returns>
      <value>5</value>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Transactions" />
        <type api="T:OOAdvantech.Transactions.ObjectsStateManagerStatus" ref="false" />
      </containers>
    </api>
    <api id="F:OOAdvantech.Transactions.ObjectsStateManagerStatus.CommitDone">
      <apidata name="CommitDone" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:OOAdvantech.Transactions.ObjectsStateManagerStatus" ref="false" />
      </returns>
      <value>4</value>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Transactions" />
        <type api="T:OOAdvantech.Transactions.ObjectsStateManagerStatus" ref="false" />
      </containers>
    </api>
    <api id="F:OOAdvantech.Transactions.ObjectsStateManagerStatus.CommitRequest">
      <apidata name="CommitRequest" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:OOAdvantech.Transactions.ObjectsStateManagerStatus" ref="false" />
      </returns>
      <value>3</value>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Transactions" />
        <type api="T:OOAdvantech.Transactions.ObjectsStateManagerStatus" ref="false" />
      </containers>
    </api>
    <api id="F:OOAdvantech.Transactions.ObjectsStateManagerStatus.OnAction">
      <apidata name="OnAction" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:OOAdvantech.Transactions.ObjectsStateManagerStatus" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Transactions" />
        <type api="T:OOAdvantech.Transactions.ObjectsStateManagerStatus" ref="false" />
      </containers>
    </api>
    <api id="F:OOAdvantech.Transactions.ObjectsStateManagerStatus.PrepareDone">
      <apidata name="PrepareDone" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:OOAdvantech.Transactions.ObjectsStateManagerStatus" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Transactions" />
        <type api="T:OOAdvantech.Transactions.ObjectsStateManagerStatus" ref="false" />
      </containers>
    </api>
    <api id="F:OOAdvantech.Transactions.ObjectsStateManagerStatus.PrepareRequest">
      <apidata name="PrepareRequest" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:OOAdvantech.Transactions.ObjectsStateManagerStatus" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Transactions" />
        <type api="T:OOAdvantech.Transactions.ObjectsStateManagerStatus" ref="false" />
      </containers>
    </api>
    <api id="T:OOAdvantech.Transactions.ObjectStateTransition">
      <apidata name="ObjectStateTransition" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.IDisposable" ref="true" />
      </implements>
      <elements>
        <element api="M:OOAdvantech.Transactions.ObjectStateTransition.Dispose" />
        <element api="M:OOAdvantech.Transactions.ObjectStateTransition.#ctor(System.Object,OOAdvantech.Transactions.TransactionOption)" />
        <element api="M:OOAdvantech.Transactions.ObjectStateTransition.#ctor(System.Object)" />
        <element api="M:OOAdvantech.Transactions.ObjectStateTransition.#ctor(System.Object,System.String,OOAdvantech.Transactions.TransactionOption)" />
        <element api="M:OOAdvantech.Transactions.ObjectStateTransition.#ctor(System.Object,System.String)" />
        <element api="M:OOAdvantech.Transactions.ObjectStateTransition.#ctor(System.Object,System.Reflection.MemberInfo,OOAdvantech.Transactions.TransactionOption)" />
        <element api="M:OOAdvantech.Transactions.ObjectStateTransition.#ctor(System.Object,System.Reflection.MemberInfo)" />
        <element api="M:OOAdvantech.Transactions.ObjectStateTransition.#ctor(OOAdvantech.Transactions.Transaction)" />
        <element api="M:OOAdvantech.Transactions.ObjectStateTransition.#ctor(System.Object,System.TimeSpan)" />
        <element api="M:OOAdvantech.Transactions.ObjectStateTransition.#ctor(System.Object,OOAdvantech.Transactions.TransactionOption,System.TimeSpan)" />
        <element api="M:OOAdvantech.Transactions.ObjectStateTransition.#ctor(System.Object,System.String,OOAdvantech.Transactions.TransactionOption,System.TimeSpan)" />
        <element api="M:OOAdvantech.Transactions.ObjectStateTransition.#ctor(System.Object,System.String,System.TimeSpan)" />
        <element api="M:OOAdvantech.Transactions.ObjectStateTransition.#ctor(System.Object,System.Reflection.MemberInfo,OOAdvantech.Transactions.TransactionOption,System.TimeSpan)" />
        <element api="M:OOAdvantech.Transactions.ObjectStateTransition.#ctor(System.Object,System.Reflection.MemberInfo,System.TimeSpan)" />
        <element api="M:OOAdvantech.Transactions.ObjectStateTransition.IsLocked(System.Object)" />
        <element api="M:OOAdvantech.Transactions.ObjectStateTransition.IsLocked(System.Object,System.String)" />
        <element api="M:OOAdvantech.Transactions.ObjectStateTransition.GetLockTransactions(OOAdvantech.Transactions.Transaction,System.Collections.Generic.List{System.Object})" />
        <element api="M:OOAdvantech.Transactions.ObjectStateTransition.GetTransactionLockType(System.Object)" />
        <element api="M:OOAdvantech.Transactions.ObjectStateTransition.GetTransaction(System.Object)" />
        <element api="P:OOAdvantech.Transactions.ObjectStateTransition.Consistent" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Transactions" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Transactions.ObjectStateTransition.#ctor(OOAdvantech.Transactions.Transaction)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="transaction">
          <type api="T:OOAdvantech.Transactions.Transaction" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Transactions" />
        <type api="T:OOAdvantech.Transactions.ObjectStateTransition" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System can't manipulate a transaction as transactional object</value>
          </argument>
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:OOAdvantech.Transactions.ObjectStateTransition.#ctor(System.Object)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="objectUnderStateTransition">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Transactions" />
        <type api="T:OOAdvantech.Transactions.ObjectStateTransition" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Transactions.ObjectStateTransition.#ctor(System.Object,OOAdvantech.Transactions.TransactionOption)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="objectUnderStateTransition">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="transactionOption">
          <type api="T:OOAdvantech.Transactions.TransactionOption" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Transactions" />
        <type api="T:OOAdvantech.Transactions.ObjectStateTransition" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Transactions.ObjectStateTransition.#ctor(System.Object,OOAdvantech.Transactions.TransactionOption,System.TimeSpan)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="objectUnderStateTransition">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="transactionOption">
          <type api="T:OOAdvantech.Transactions.TransactionOption" ref="false" />
        </parameter>
        <parameter name="transactionObjectLockTimeOut">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Transactions" />
        <type api="T:OOAdvantech.Transactions.ObjectStateTransition" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Transactions.ObjectStateTransition.#ctor(System.Object,System.Reflection.MemberInfo)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="objectUnderStateTransition">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="memberInfo">
          <type api="T:System.Reflection.MemberInfo" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Transactions" />
        <type api="T:OOAdvantech.Transactions.ObjectStateTransition" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Transactions.ObjectStateTransition.#ctor(System.Object,System.Reflection.MemberInfo,OOAdvantech.Transactions.TransactionOption)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="objectUnderStateTransition">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="memberInfo">
          <type api="T:System.Reflection.MemberInfo" ref="true" />
        </parameter>
        <parameter name="transactionOption">
          <type api="T:OOAdvantech.Transactions.TransactionOption" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Transactions" />
        <type api="T:OOAdvantech.Transactions.ObjectStateTransition" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Transactions.ObjectStateTransition.#ctor(System.Object,System.Reflection.MemberInfo,OOAdvantech.Transactions.TransactionOption,System.TimeSpan)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="objectUnderStateTransition">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="memberInfo">
          <type api="T:System.Reflection.MemberInfo" ref="true" />
        </parameter>
        <parameter name="transactionOption">
          <type api="T:OOAdvantech.Transactions.TransactionOption" ref="false" />
        </parameter>
        <parameter name="transactionObjectLockTimeOut">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Transactions" />
        <type api="T:OOAdvantech.Transactions.ObjectStateTransition" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Transactions.ObjectStateTransition.#ctor(System.Object,System.Reflection.MemberInfo,System.TimeSpan)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="objectUnderStateTransition">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="memberInfo">
          <type api="T:System.Reflection.MemberInfo" ref="true" />
        </parameter>
        <parameter name="transactionObjectLockTimeOut">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Transactions" />
        <type api="T:OOAdvantech.Transactions.ObjectStateTransition" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Transactions.ObjectStateTransition.#ctor(System.Object,System.String)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="objectUnderStateTransition">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="memberName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Transactions" />
        <type api="T:OOAdvantech.Transactions.ObjectStateTransition" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Transactions.ObjectStateTransition.#ctor(System.Object,System.String,OOAdvantech.Transactions.TransactionOption)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="objectUnderStateTransition">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="memberName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="transactionOption">
          <type api="T:OOAdvantech.Transactions.TransactionOption" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Transactions" />
        <type api="T:OOAdvantech.Transactions.ObjectStateTransition" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Transactions.ObjectStateTransition.#ctor(System.Object,System.String,OOAdvantech.Transactions.TransactionOption,System.TimeSpan)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="objectUnderStateTransition">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="memberName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="transactionOption">
          <type api="T:OOAdvantech.Transactions.TransactionOption" ref="false" />
        </parameter>
        <parameter name="transactionObjectLockTimeOut">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Transactions" />
        <type api="T:OOAdvantech.Transactions.ObjectStateTransition" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Transactions.ObjectStateTransition.#ctor(System.Object,System.String,System.TimeSpan)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="objectUnderStateTransition">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="memberName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="transactionObjectLockTimeOut">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Transactions" />
        <type api="T:OOAdvantech.Transactions.ObjectStateTransition" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Transactions.ObjectStateTransition.#ctor(System.Object,System.TimeSpan)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="objectUnderStateTransition">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="transactionObjectLockTimeOut">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Transactions" />
        <type api="T:OOAdvantech.Transactions.ObjectStateTransition" ref="true" />
      </containers>
    </api>
    <api id="P:OOAdvantech.Transactions.ObjectStateTransition.Consistent">
      <apidata name="Consistent" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Consistent" />
      <setter name="set_Consistent" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Transactions" />
        <type api="T:OOAdvantech.Transactions.ObjectStateTransition" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Transactions.ObjectStateTransition.Dispose">
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.IDisposable.Dispose">
          <type api="T:System.IDisposable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Transactions" />
        <type api="T:OOAdvantech.Transactions.ObjectStateTransition" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Transactions.ObjectStateTransition.GetLockTransactions(OOAdvantech.Transactions.Transaction,System.Collections.Generic.List{System.Object})">
      <apidata name="GetLockTransactions" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="sessionTransaction">
          <type api="T:OOAdvantech.Transactions.Transaction" ref="true" />
        </parameter>
        <parameter name="_objects">
          <type api="T:System.Collections.Generic.List`1" ref="true">
            <specialization>
              <type api="T:System.Object" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
          <specialization>
            <type api="T:System.Object" ref="true" />
            <type api="T:OOAdvantech.Transactions.Transaction" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Transactions" />
        <type api="T:OOAdvantech.Transactions.ObjectStateTransition" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Transactions.ObjectStateTransition.GetTransaction(System.Object)">
      <apidata name="GetTransaction" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="_object">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.List`1" ref="true">
          <specialization>
            <type api="T:OOAdvantech.Transactions.Transaction" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Transactions" />
        <type api="T:OOAdvantech.Transactions.ObjectStateTransition" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Transactions.ObjectStateTransition.GetTransactionLockType(System.Object)">
      <apidata name="GetTransactionLockType" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="_object">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:OOAdvantech.Transactions.LockType" ref="false" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Transactions" />
        <type api="T:OOAdvantech.Transactions.ObjectStateTransition" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Transactions.ObjectStateTransition.IsLocked(System.Object)">
      <apidata name="IsLocked" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="transactionalObject">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Transactions" />
        <type api="T:OOAdvantech.Transactions.ObjectStateTransition" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Transactions.ObjectStateTransition.IsLocked(System.Object,System.String)">
      <apidata name="IsLocked" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="transactionalObject">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="memberName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Transactions" />
        <type api="T:OOAdvantech.Transactions.ObjectStateTransition" ref="true" />
      </containers>
    </api>
    <api id="T:OOAdvantech.Transactions.ServerLockControlSession">
      <apidata name="ServerLockControlSession" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.MarshalByRefObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:OOAdvantech.Remoting.IExtMarshalByRefObject" ref="true" />
      </implements>
      <elements>
        <element api="M:OOAdvantech.Transactions.ServerLockControlSession.#ctor" />
        <element api="M:OOAdvantech.Transactions.ServerLockControlSession.Finalize" />
        <element api="M:OOAdvantech.Transactions.ServerLockControlSession.Assign(OOAdvantech.Collections.Generic.List{System.Object},System.Boolean)" />
        <element api="E:OOAdvantech.Transactions.ServerLockControlSession.ObjectLocked" />
        <element api="M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="cloneIdentity">
              <type api="T:System.Boolean" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.MarshalByRefObject" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.MarshalByRefObject" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.MarshalByRefObject.GetLifetimeService">
          <apidata name="GetLifetimeService" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.MarshalByRefObject" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Security.Permissions.SecurityPermissionAttribute" ref="true" />
              <argument>
                <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
                <enumValue>
                  <field name="LinkDemand" />
                </enumValue>
              </argument>
              <assignment name="Flags">
                <type api="T:System.Security.Permissions.SecurityPermissionFlag" ref="false" />
                <enumValue>
                  <field name="Infrastructure" />
                </enumValue>
              </assignment>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.MarshalByRefObject.InitializeLifetimeService">
          <apidata name="InitializeLifetimeService" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.MarshalByRefObject" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Security.Permissions.SecurityPermissionAttribute" ref="true" />
              <argument>
                <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
                <enumValue>
                  <field name="LinkDemand" />
                </enumValue>
              </argument>
              <assignment name="Flags">
                <type api="T:System.Security.Permissions.SecurityPermissionFlag" ref="false" />
                <enumValue>
                  <field name="Infrastructure" />
                </enumValue>
              </assignment>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.MarshalByRefObject.CreateObjRef(System.Type)">
          <apidata name="CreateObjRef" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="requestedType">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Runtime.Remoting.ObjRef" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.MarshalByRefObject" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Security.Permissions.SecurityPermissionAttribute" ref="true" />
              <argument>
                <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
                <enumValue>
                  <field name="LinkDemand" />
                </enumValue>
              </argument>
              <assignment name="Flags">
                <type api="T:System.Security.Permissions.SecurityPermissionFlag" ref="false" />
                <enumValue>
                  <field name="Infrastructure" />
                </enumValue>
              </assignment>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Transactions" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Transactions.ServerLockControlSession.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Transactions" />
        <type api="T:OOAdvantech.Transactions.ServerLockControlSession" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Transactions.ServerLockControlSession.Assign(OOAdvantech.Collections.Generic.List{System.Object},System.Boolean)">
      <apidata name="Assign" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="lockRequestObjects">
          <type api="T:OOAdvantech.Collections.Generic.List`1" ref="true">
            <specialization>
              <type api="T:System.Object" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="remoteCall">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:OOAdvantech.Collections.Generic.Dictionary`2" ref="true">
          <specialization>
            <type api="T:System.Object" ref="true" />
            <type api="T:System.Object" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Transactions" />
        <type api="T:OOAdvantech.Transactions.ServerLockControlSession" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Transactions.ServerLockControlSession.Finalize">
      <apidata name="Finalize" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.Finalize">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Transactions" />
        <type api="T:OOAdvantech.Transactions.ServerLockControlSession" ref="true" />
      </containers>
    </api>
    <api id="E:OOAdvantech.Transactions.ServerLockControlSession.ObjectLocked">
      <apidata name="ObjectLocked" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_ObjectLocked" />
      <remover name="remove_ObjectLocked" />
      <eventhandler>
        <type api="T:OOAdvantech.Transactions.ServerLockControlSession.ObjectLockEventHandler" ref="true">
          <type api="T:OOAdvantech.Transactions.ServerLockControlSession" ref="true" />
        </type>
      </eventhandler>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Transactions" />
        <type api="T:OOAdvantech.Transactions.ServerLockControlSession" ref="true" />
      </containers>
    </api>
    <api id="T:OOAdvantech.Transactions.ServerLockControlSession.ObjectLockEventHandler">
      <apidata name="ObjectLockEventHandler" group="type" subgroup="delegate" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <parameters>
        <parameter name="_object">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="membersNames">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="transaction">
          <type api="T:OOAdvantech.Transactions.Transaction" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Transactions" />
        <type api="T:OOAdvantech.Transactions.ServerLockControlSession" ref="true" />
      </containers>
    </api>
    <api id="T:OOAdvantech.Transactions.SystemStateTransition">
      <apidata name="SystemStateTransition" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.IDisposable" ref="true" />
      </implements>
      <elements>
        <element api="F:OOAdvantech.Transactions.SystemStateTransition.StateTransitionTransaction" />
        <element api="M:OOAdvantech.Transactions.SystemStateTransition.#ctor(OOAdvantech.Transactions.TransactionOption)" />
        <element api="M:OOAdvantech.Transactions.SystemStateTransition.#ctor(OOAdvantech.Transactions.Transaction)" />
        <element api="M:OOAdvantech.Transactions.SystemStateTransition.#ctor" />
        <element api="M:OOAdvantech.Transactions.SystemStateTransition.#ctor(System.TimeSpan)" />
        <element api="M:OOAdvantech.Transactions.SystemStateTransition.#ctor(OOAdvantech.Transactions.Transaction,System.TimeSpan)" />
        <element api="M:OOAdvantech.Transactions.SystemStateTransition.#ctor(OOAdvantech.Transactions.TransactionOption,System.TimeSpan)" />
        <element api="M:OOAdvantech.Transactions.SystemStateTransition.Dispose" />
        <element api="P:OOAdvantech.Transactions.SystemStateTransition.Consistent" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Transactions" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Transactions.SystemStateTransition.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Transactions" />
        <type api="T:OOAdvantech.Transactions.SystemStateTransition" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Transactions.SystemStateTransition.#ctor(OOAdvantech.Transactions.Transaction)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="transaction">
          <type api="T:OOAdvantech.Transactions.Transaction" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Transactions" />
        <type api="T:OOAdvantech.Transactions.SystemStateTransition" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Transactions.SystemStateTransition.#ctor(OOAdvantech.Transactions.Transaction,System.TimeSpan)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="transaction">
          <type api="T:OOAdvantech.Transactions.Transaction" ref="true" />
        </parameter>
        <parameter name="transactionObjectLockTimeOut">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Transactions" />
        <type api="T:OOAdvantech.Transactions.SystemStateTransition" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Transactions.SystemStateTransition.#ctor(OOAdvantech.Transactions.TransactionOption)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="transactionOption">
          <type api="T:OOAdvantech.Transactions.TransactionOption" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Transactions" />
        <type api="T:OOAdvantech.Transactions.SystemStateTransition" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Transactions.SystemStateTransition.#ctor(OOAdvantech.Transactions.TransactionOption,System.TimeSpan)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="transactionOption">
          <type api="T:OOAdvantech.Transactions.TransactionOption" ref="false" />
        </parameter>
        <parameter name="transactionObjectLockTimeOut">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Transactions" />
        <type api="T:OOAdvantech.Transactions.SystemStateTransition" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Transactions.SystemStateTransition.#ctor(System.TimeSpan)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="transactionObjectLockTimeOut">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Transactions" />
        <type api="T:OOAdvantech.Transactions.SystemStateTransition" ref="true" />
      </containers>
    </api>
    <api id="P:OOAdvantech.Transactions.SystemStateTransition.Consistent">
      <apidata name="Consistent" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Consistent" />
      <setter name="set_Consistent" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Transactions" />
        <type api="T:OOAdvantech.Transactions.SystemStateTransition" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Transactions.SystemStateTransition.Dispose">
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.IDisposable.Dispose">
          <type api="T:System.IDisposable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Transactions" />
        <type api="T:OOAdvantech.Transactions.SystemStateTransition" ref="true" />
      </containers>
    </api>
    <api id="F:OOAdvantech.Transactions.SystemStateTransition.StateTransitionTransaction">
      <apidata name="StateTransitionTransaction" group="member" subgroup="field" />
      <memberdata visibility="public" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:OOAdvantech.Transactions.Transaction" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Transactions" />
        <type api="T:OOAdvantech.Transactions.SystemStateTransition" ref="true" />
      </containers>
    </api>
    <api id="T:OOAdvantech.Transactions.Transaction">
      <apidata name="Transaction" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:OOAdvantech.Transactions.CommittableTransaction" ref="true" />
        </descendents>
      </family>
      <implements>
        <type api="T:OOAdvantech.Remoting.IExtMarshalByRefObject" ref="true" />
      </implements>
      <elements>
        <element api="F:OOAdvantech.Transactions.Transaction.InternalTransaction" />
        <element api="M:OOAdvantech.Transactions.Transaction.Equals(System.Object)" />
        <element api="M:OOAdvantech.Transactions.Transaction.GetHashCode" />
        <element api="M:OOAdvantech.Transactions.Transaction.op_Equality(OOAdvantech.Transactions.Transaction,OOAdvantech.Transactions.Transaction)" />
        <element api="M:OOAdvantech.Transactions.Transaction.op_Inequality(OOAdvantech.Transactions.Transaction,OOAdvantech.Transactions.Transaction)" />
        <element api="M:OOAdvantech.Transactions.Transaction.WaitToComplete(System.Int32)" />
        <element api="M:OOAdvantech.Transactions.Transaction.WaitToComplete(System.TimeSpan)" />
        <element api="M:OOAdvantech.Transactions.Transaction.Abort(System.Exception)" />
        <element api="M:OOAdvantech.Transactions.Transaction.Abort" />
        <element api="P:OOAdvantech.Transactions.Transaction.Current" />
        <element api="P:OOAdvantech.Transactions.Transaction.OriginTransaction" />
        <element api="P:OOAdvantech.Transactions.Transaction.NestedTransactions" />
        <element api="P:OOAdvantech.Transactions.Transaction.Status" />
        <element api="P:OOAdvantech.Transactions.Transaction.LocalTransactionUri" />
        <element api="P:OOAdvantech.Transactions.Transaction.GlobalTransactionUri" />
        <element api="E:OOAdvantech.Transactions.Transaction.TransactionCompleted" />
        <element api="E:OOAdvantech.Transactions.Transaction.TransactionDistributed" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Transactions" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Transactions.Transaction.Abort">
      <apidata name="Abort" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Transactions" />
        <type api="T:OOAdvantech.Transactions.Transaction" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Transactions.Transaction.Abort(System.Exception)">
      <apidata name="Abort" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="exception">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Transactions" />
        <type api="T:OOAdvantech.Transactions.Transaction" ref="true" />
      </containers>
    </api>
    <api id="P:OOAdvantech.Transactions.Transaction.Current">
      <apidata name="Current" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Current" />
      <returns>
        <type api="T:OOAdvantech.Transactions.Transaction" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Transactions" />
        <type api="T:OOAdvantech.Transactions.Transaction" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Transactions.Transaction.Equals(System.Object)">
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.Equals(System.Object)">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="obj">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Transactions" />
        <type api="T:OOAdvantech.Transactions.Transaction" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Transactions.Transaction.GetHashCode">
      <apidata name="GetHashCode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.GetHashCode">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Transactions" />
        <type api="T:OOAdvantech.Transactions.Transaction" ref="true" />
      </containers>
    </api>
    <api id="P:OOAdvantech.Transactions.Transaction.GlobalTransactionUri">
      <apidata name="GlobalTransactionUri" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_GlobalTransactionUri" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Transactions" />
        <type api="T:OOAdvantech.Transactions.Transaction" ref="true" />
      </containers>
    </api>
    <api id="F:OOAdvantech.Transactions.Transaction.InternalTransaction">
      <apidata name="InternalTransaction" group="member" subgroup="field" />
      <memberdata visibility="family or assembly" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:OOAdvantech.Transactions.Transaction" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Transactions" />
        <type api="T:OOAdvantech.Transactions.Transaction" ref="true" />
      </containers>
    </api>
    <api id="P:OOAdvantech.Transactions.Transaction.LocalTransactionUri">
      <apidata name="LocalTransactionUri" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_LocalTransactionUri" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Transactions" />
        <type api="T:OOAdvantech.Transactions.Transaction" ref="true" />
      </containers>
    </api>
    <api id="P:OOAdvantech.Transactions.Transaction.NestedTransactions">
      <apidata name="NestedTransactions" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_NestedTransactions" />
      <returns>
        <type api="T:System.Collections.Generic.List`1" ref="true">
          <specialization>
            <type api="T:OOAdvantech.Transactions.Transaction" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Transactions" />
        <type api="T:OOAdvantech.Transactions.Transaction" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Transactions.Transaction.op_Equality(OOAdvantech.Transactions.Transaction,OOAdvantech.Transactions.Transaction)">
      <apidata name="Equality" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="left">
          <type api="T:OOAdvantech.Transactions.Transaction" ref="true" />
        </parameter>
        <parameter name="right">
          <type api="T:OOAdvantech.Transactions.Transaction" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Transactions" />
        <type api="T:OOAdvantech.Transactions.Transaction" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Transactions.Transaction.op_Inequality(OOAdvantech.Transactions.Transaction,OOAdvantech.Transactions.Transaction)">
      <apidata name="Inequality" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="left">
          <type api="T:OOAdvantech.Transactions.Transaction" ref="true" />
        </parameter>
        <parameter name="right">
          <type api="T:OOAdvantech.Transactions.Transaction" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Transactions" />
        <type api="T:OOAdvantech.Transactions.Transaction" ref="true" />
      </containers>
    </api>
    <api id="P:OOAdvantech.Transactions.Transaction.OriginTransaction">
      <apidata name="OriginTransaction" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_OriginTransaction" />
      <returns>
        <type api="T:OOAdvantech.Transactions.Transaction" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Transactions" />
        <type api="T:OOAdvantech.Transactions.Transaction" ref="true" />
      </containers>
    </api>
    <api id="P:OOAdvantech.Transactions.Transaction.Status">
      <apidata name="Status" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_Status" />
      <returns>
        <type api="T:OOAdvantech.Transactions.TransactionStatus" ref="false" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Transactions" />
        <type api="T:OOAdvantech.Transactions.Transaction" ref="true" />
      </containers>
    </api>
    <api id="E:OOAdvantech.Transactions.Transaction.TransactionCompleted">
      <apidata name="TransactionCompleted" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <eventdata add="true" remove="true" />
      <adder name="add_TransactionCompleted" />
      <remover name="remove_TransactionCompleted" />
      <eventhandler>
        <type api="T:OOAdvantech.Transactions.TransactionCompletedEventHandler" ref="true" />
      </eventhandler>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Transactions" />
        <type api="T:OOAdvantech.Transactions.Transaction" ref="true" />
      </containers>
    </api>
    <api id="E:OOAdvantech.Transactions.Transaction.TransactionDistributed">
      <apidata name="TransactionDistributed" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <eventdata add="true" remove="true" />
      <adder name="add_TransactionDistributed" />
      <remover name="remove_TransactionDistributed" />
      <eventhandler>
        <type api="T:OOAdvantech.Transactions.TransactionDistributedEventHandler" ref="true" />
      </eventhandler>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Transactions" />
        <type api="T:OOAdvantech.Transactions.Transaction" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Transactions.Transaction.WaitToComplete(System.Int32)">
      <apidata name="WaitToComplete" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="millisecondsTimeout">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Transactions" />
        <type api="T:OOAdvantech.Transactions.Transaction" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Transactions.Transaction.WaitToComplete(System.TimeSpan)">
      <apidata name="WaitToComplete" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="timeout">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Transactions" />
        <type api="T:OOAdvantech.Transactions.Transaction" ref="true" />
      </containers>
    </api>
    <api id="T:OOAdvantech.Transactions.TransactionalAttribute">
      <apidata name="TransactionalAttribute" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:OOAdvantech.MetaDataRepository.Persistent" ref="true" />
        </descendents>
      </family>
      <elements>
        <element api="M:OOAdvantech.Transactions.TransactionalAttribute.#ctor" />
        <element api="M:System.Attribute.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.Equals(System.Object)">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.GetHashCode">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.Match(System.Object)">
          <apidata name="Match" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.IsDefaultAttribute">
          <apidata name="IsDefaultAttribute" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)">
          <apidata name="GetTypeInfoCount" group="member" subgroup="method" />
          <memberdata visibility="private" />
          <proceduredata virtual="true" final="true" eii="true" />
          <parameters>
            <parameter name="pcTInfo" out="true">
              <referenceTo>
                <type api="T:System.UInt32" ref="false" />
              </referenceTo>
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Runtime.InteropServices._Attribute.GetTypeInfoCount(System.UInt32@)">
              <type api="T:System.Runtime.InteropServices._Attribute" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)">
          <apidata name="GetTypeInfo" group="member" subgroup="method" />
          <memberdata visibility="private" />
          <proceduredata virtual="true" final="true" eii="true" />
          <parameters>
            <parameter name="iTInfo">
              <type api="T:System.UInt32" ref="false" />
            </parameter>
            <parameter name="lcid">
              <type api="T:System.UInt32" ref="false" />
            </parameter>
            <parameter name="ppTInfo">
              <type api="T:System.IntPtr" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Runtime.InteropServices._Attribute.GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)">
              <type api="T:System.Runtime.InteropServices._Attribute" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)">
          <apidata name="GetIDsOfNames" group="member" subgroup="method" />
          <memberdata visibility="private" />
          <proceduredata virtual="true" final="true" eii="true" />
          <parameters>
            <parameter name="riid" in="true">
              <referenceTo>
                <type api="T:System.Guid" ref="false" />
              </referenceTo>
            </parameter>
            <parameter name="rgszNames">
              <type api="T:System.IntPtr" ref="false" />
            </parameter>
            <parameter name="cNames">
              <type api="T:System.UInt32" ref="false" />
            </parameter>
            <parameter name="lcid">
              <type api="T:System.UInt32" ref="false" />
            </parameter>
            <parameter name="rgDispId">
              <type api="T:System.IntPtr" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Runtime.InteropServices._Attribute.GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)">
              <type api="T:System.Runtime.InteropServices._Attribute" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)">
          <apidata name="Invoke" group="member" subgroup="method" />
          <memberdata visibility="private" />
          <proceduredata virtual="true" final="true" eii="true" />
          <parameters>
            <parameter name="dispIdMember">
              <type api="T:System.UInt32" ref="false" />
            </parameter>
            <parameter name="riid" in="true">
              <referenceTo>
                <type api="T:System.Guid" ref="false" />
              </referenceTo>
            </parameter>
            <parameter name="lcid">
              <type api="T:System.UInt32" ref="false" />
            </parameter>
            <parameter name="wFlags">
              <type api="T:System.Int16" ref="false" />
            </parameter>
            <parameter name="pDispParams">
              <type api="T:System.IntPtr" ref="false" />
            </parameter>
            <parameter name="pVarResult">
              <type api="T:System.IntPtr" ref="false" />
            </parameter>
            <parameter name="pExcepInfo">
              <type api="T:System.IntPtr" ref="false" />
            </parameter>
            <parameter name="puArgErr">
              <type api="T:System.IntPtr" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Runtime.InteropServices._Attribute.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)">
              <type api="T:System.Runtime.InteropServices._Attribute" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="P:System.Attribute.TypeId">
          <apidata name="TypeId" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_TypeId" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Transactions" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Class" />
              <field name="Struct" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:OOAdvantech.Transactions.TransactionalAttribute.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Transactions" />
        <type api="T:OOAdvantech.Transactions.TransactionalAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:OOAdvantech.Transactions.TransactionalMemberAttribute">
      <apidata name="TransactionalMemberAttribute" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="F:OOAdvantech.Transactions.TransactionalMemberAttribute.MemberTransactionLockOption" />
        <element api="M:OOAdvantech.Transactions.TransactionalMemberAttribute.#ctor" />
        <element api="M:OOAdvantech.Transactions.TransactionalMemberAttribute.#ctor(System.String)" />
        <element api="M:OOAdvantech.Transactions.TransactionalMemberAttribute.#ctor(OOAdvantech.Transactions.LockOptions)" />
        <element api="M:OOAdvantech.Transactions.TransactionalMemberAttribute.#ctor(OOAdvantech.Transactions.LockOptions,System.String)" />
        <element api="P:OOAdvantech.Transactions.TransactionalMemberAttribute.Member" />
        <element api="M:System.Attribute.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.Equals(System.Object)">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.GetHashCode">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.Match(System.Object)">
          <apidata name="Match" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.IsDefaultAttribute">
          <apidata name="IsDefaultAttribute" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)">
          <apidata name="GetTypeInfoCount" group="member" subgroup="method" />
          <memberdata visibility="private" />
          <proceduredata virtual="true" final="true" eii="true" />
          <parameters>
            <parameter name="pcTInfo" out="true">
              <referenceTo>
                <type api="T:System.UInt32" ref="false" />
              </referenceTo>
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Runtime.InteropServices._Attribute.GetTypeInfoCount(System.UInt32@)">
              <type api="T:System.Runtime.InteropServices._Attribute" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)">
          <apidata name="GetTypeInfo" group="member" subgroup="method" />
          <memberdata visibility="private" />
          <proceduredata virtual="true" final="true" eii="true" />
          <parameters>
            <parameter name="iTInfo">
              <type api="T:System.UInt32" ref="false" />
            </parameter>
            <parameter name="lcid">
              <type api="T:System.UInt32" ref="false" />
            </parameter>
            <parameter name="ppTInfo">
              <type api="T:System.IntPtr" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Runtime.InteropServices._Attribute.GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)">
              <type api="T:System.Runtime.InteropServices._Attribute" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)">
          <apidata name="GetIDsOfNames" group="member" subgroup="method" />
          <memberdata visibility="private" />
          <proceduredata virtual="true" final="true" eii="true" />
          <parameters>
            <parameter name="riid" in="true">
              <referenceTo>
                <type api="T:System.Guid" ref="false" />
              </referenceTo>
            </parameter>
            <parameter name="rgszNames">
              <type api="T:System.IntPtr" ref="false" />
            </parameter>
            <parameter name="cNames">
              <type api="T:System.UInt32" ref="false" />
            </parameter>
            <parameter name="lcid">
              <type api="T:System.UInt32" ref="false" />
            </parameter>
            <parameter name="rgDispId">
              <type api="T:System.IntPtr" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Runtime.InteropServices._Attribute.GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)">
              <type api="T:System.Runtime.InteropServices._Attribute" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)">
          <apidata name="Invoke" group="member" subgroup="method" />
          <memberdata visibility="private" />
          <proceduredata virtual="true" final="true" eii="true" />
          <parameters>
            <parameter name="dispIdMember">
              <type api="T:System.UInt32" ref="false" />
            </parameter>
            <parameter name="riid" in="true">
              <referenceTo>
                <type api="T:System.Guid" ref="false" />
              </referenceTo>
            </parameter>
            <parameter name="lcid">
              <type api="T:System.UInt32" ref="false" />
            </parameter>
            <parameter name="wFlags">
              <type api="T:System.Int16" ref="false" />
            </parameter>
            <parameter name="pDispParams">
              <type api="T:System.IntPtr" ref="false" />
            </parameter>
            <parameter name="pVarResult">
              <type api="T:System.IntPtr" ref="false" />
            </parameter>
            <parameter name="pExcepInfo">
              <type api="T:System.IntPtr" ref="false" />
            </parameter>
            <parameter name="puArgErr">
              <type api="T:System.IntPtr" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Runtime.InteropServices._Attribute.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)">
              <type api="T:System.Runtime.InteropServices._Attribute" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="P:System.Attribute.TypeId">
          <apidata name="TypeId" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_TypeId" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Transactions" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Property" />
              <field name="Field" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:OOAdvantech.Transactions.TransactionalMemberAttribute.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Transactions" />
        <type api="T:OOAdvantech.Transactions.TransactionalMemberAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Transactions.TransactionalMemberAttribute.#ctor(OOAdvantech.Transactions.LockOptions)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="memberTransactionLockOption">
          <type api="T:OOAdvantech.Transactions.LockOptions" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Transactions" />
        <type api="T:OOAdvantech.Transactions.TransactionalMemberAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Transactions.TransactionalMemberAttribute.#ctor(OOAdvantech.Transactions.LockOptions,System.String)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="memberTransactionLockOption">
          <type api="T:OOAdvantech.Transactions.LockOptions" ref="false" />
        </parameter>
        <parameter name="implentationField">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Transactions" />
        <type api="T:OOAdvantech.Transactions.TransactionalMemberAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Transactions.TransactionalMemberAttribute.#ctor(System.String)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="implentationField">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Transactions" />
        <type api="T:OOAdvantech.Transactions.TransactionalMemberAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:OOAdvantech.Transactions.TransactionalMemberAttribute.Member">
      <apidata name="Member" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Member" />
      <returns>
        <type api="T:System.Reflection.MemberInfo" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Transactions" />
        <type api="T:OOAdvantech.Transactions.TransactionalMemberAttribute" ref="true" />
      </containers>
    </api>
    <api id="F:OOAdvantech.Transactions.TransactionalMemberAttribute.MemberTransactionLockOption">
      <apidata name="MemberTransactionLockOption" group="member" subgroup="field" />
      <memberdata visibility="public" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:OOAdvantech.Transactions.LockOptions" ref="false" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Transactions" />
        <type api="T:OOAdvantech.Transactions.TransactionalMemberAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:OOAdvantech.Transactions.TransactionCompletedEventHandler">
      <apidata name="TransactionCompletedEventHandler" group="type" subgroup="delegate" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <parameters>
        <parameter name="transaction">
          <type api="T:OOAdvantech.Transactions.Transaction" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Transactions" />
      </containers>
    </api>
    <api id="T:OOAdvantech.Transactions.TransactionDistributedEventHandler">
      <apidata name="TransactionDistributedEventHandler" group="type" subgroup="delegate" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <parameters>
        <parameter name="transaction">
          <type api="T:OOAdvantech.Transactions.Transaction" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Transactions" />
      </containers>
    </api>
    <api id="T:OOAdvantech.Transactions.TransactionInterop">
      <apidata name="TransactionInterop" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:OOAdvantech.Transactions.TransactionInterop.GetSystemTransaction(OOAdvantech.Transactions.Transaction)" />
        <element api="M:OOAdvantech.Transactions.TransactionInterop.#ctor" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Transactions" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Transactions.TransactionInterop.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Transactions" />
        <type api="T:OOAdvantech.Transactions.TransactionInterop" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Transactions.TransactionInterop.GetSystemTransaction(OOAdvantech.Transactions.Transaction)">
      <apidata name="GetSystemTransaction" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="transaction">
          <type api="T:OOAdvantech.Transactions.Transaction" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Transactions" />
        <type api="T:OOAdvantech.Transactions.TransactionInterop" ref="true" />
      </containers>
    </api>
    <api id="T:OOAdvantech.Transactions.TransactionManager">
      <apidata name="TransactionManager" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.MarshalByRefObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:OOAdvantech.Remoting.IExtMarshalByRefObject" ref="true" />
      </implements>
      <elements>
        <element api="F:OOAdvantech.Transactions.TransactionManager.ObjectEnlistmentTimeOut" />
        <element api="M:OOAdvantech.Transactions.TransactionManager.GetTransactionChannelUri(OOAdvantech.Transactions.Transaction)" />
        <element api="M:OOAdvantech.Transactions.TransactionManager.RegisterTransactionContextProvider(OOAdvantech.Transactions.ITransactionContextProvider)" />
        <element api="M:OOAdvantech.Transactions.TransactionManager.GetTransactionContext(OOAdvantech.Transactions.Transaction)" />
        <element api="M:OOAdvantech.Transactions.TransactionManager.EnlistObjectOnActiveTransaction(System.Object,System.Reflection.MemberInfo)" />
        <element api="M:OOAdvantech.Transactions.TransactionManager.UnMarshal(System.String)" />
        <element api="M:OOAdvantech.Transactions.TransactionManager.IsLocked(System.Object,System.Reflection.MemberInfo)" />
        <element api="M:OOAdvantech.Transactions.TransactionManager.#ctor" />
        <element api="M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="cloneIdentity">
              <type api="T:System.Boolean" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.MarshalByRefObject" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.MarshalByRefObject" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.MarshalByRefObject.GetLifetimeService">
          <apidata name="GetLifetimeService" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.MarshalByRefObject" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Security.Permissions.SecurityPermissionAttribute" ref="true" />
              <argument>
                <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
                <enumValue>
                  <field name="LinkDemand" />
                </enumValue>
              </argument>
              <assignment name="Flags">
                <type api="T:System.Security.Permissions.SecurityPermissionFlag" ref="false" />
                <enumValue>
                  <field name="Infrastructure" />
                </enumValue>
              </assignment>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.MarshalByRefObject.InitializeLifetimeService">
          <apidata name="InitializeLifetimeService" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.MarshalByRefObject" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Security.Permissions.SecurityPermissionAttribute" ref="true" />
              <argument>
                <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
                <enumValue>
                  <field name="LinkDemand" />
                </enumValue>
              </argument>
              <assignment name="Flags">
                <type api="T:System.Security.Permissions.SecurityPermissionFlag" ref="false" />
                <enumValue>
                  <field name="Infrastructure" />
                </enumValue>
              </assignment>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.MarshalByRefObject.CreateObjRef(System.Type)">
          <apidata name="CreateObjRef" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="requestedType">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Runtime.Remoting.ObjRef" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.MarshalByRefObject" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Security.Permissions.SecurityPermissionAttribute" ref="true" />
              <argument>
                <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
                <enumValue>
                  <field name="LinkDemand" />
                </enumValue>
              </argument>
              <assignment name="Flags">
                <type api="T:System.Security.Permissions.SecurityPermissionFlag" ref="false" />
                <enumValue>
                  <field name="Infrastructure" />
                </enumValue>
              </assignment>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Transactions" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Transactions.TransactionManager.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Transactions" />
        <type api="T:OOAdvantech.Transactions.TransactionManager" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Transactions.TransactionManager.EnlistObjectOnActiveTransaction(System.Object,System.Reflection.MemberInfo)">
      <apidata name="EnlistObjectOnActiveTransaction" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="transactionedObject">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="fieldInfo">
          <type api="T:System.Reflection.MemberInfo" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Transactions" />
        <type api="T:OOAdvantech.Transactions.TransactionManager" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Transactions.TransactionManager.GetTransactionChannelUri(OOAdvantech.Transactions.Transaction)">
      <apidata name="GetTransactionChannelUri" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="transaction">
          <type api="T:OOAdvantech.Transactions.Transaction" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Transactions" />
        <type api="T:OOAdvantech.Transactions.TransactionManager" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Transactions.TransactionManager.GetTransactionContext(OOAdvantech.Transactions.Transaction)">
      <apidata name="GetTransactionContext" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="transaction">
          <type api="T:OOAdvantech.Transactions.Transaction" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:OOAdvantech.Transactions.ITransactionContext" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Transactions" />
        <type api="T:OOAdvantech.Transactions.TransactionManager" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Transactions.TransactionManager.IsLocked(System.Object,System.Reflection.MemberInfo)">
      <apidata name="IsLocked" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="transactionalObject">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="memberInfo">
          <type api="T:System.Reflection.MemberInfo" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Transactions" />
        <type api="T:OOAdvantech.Transactions.TransactionManager" ref="true" />
      </containers>
    </api>
    <api id="F:OOAdvantech.Transactions.TransactionManager.ObjectEnlistmentTimeOut">
      <apidata name="ObjectEnlistmentTimeOut" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.TimeSpan" ref="false" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Transactions" />
        <type api="T:OOAdvantech.Transactions.TransactionManager" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Transactions.TransactionManager.RegisterTransactionContextProvider(OOAdvantech.Transactions.ITransactionContextProvider)">
      <apidata name="RegisterTransactionContextProvider" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="transactionedContextProvider">
          <type api="T:OOAdvantech.Transactions.ITransactionContextProvider" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Transactions" />
        <type api="T:OOAdvantech.Transactions.TransactionManager" ref="true" />
      </containers>
    </api>
    <api id="M:OOAdvantech.Transactions.TransactionManager.UnMarshal(System.String)">
      <apidata name="UnMarshal" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="globalTransactionUri">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:OOAdvantech.Transactions.Transaction" ref="true" />
      </returns>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Transactions" />
        <type api="T:OOAdvantech.Transactions.TransactionManager" ref="true" />
      </containers>
    </api>
    <api id="T:OOAdvantech.Transactions.TransactionOption">
      <apidata name="TransactionOption" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="F:OOAdvantech.Transactions.TransactionOption.Suppress" />
        <element api="F:OOAdvantech.Transactions.TransactionOption.NotSupported" />
        <element api="F:OOAdvantech.Transactions.TransactionOption.Supported" />
        <element api="F:OOAdvantech.Transactions.TransactionOption.Required" />
        <element api="F:OOAdvantech.Transactions.TransactionOption.RequiresNew" />
        <element api="F:OOAdvantech.Transactions.TransactionOption.RequiredNested" />
      </elements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Transactions" />
      </containers>
    </api>
    <api id="F:OOAdvantech.Transactions.TransactionOption.NotSupported">
      <apidata name="NotSupported" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:OOAdvantech.Transactions.TransactionOption" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Transactions" />
        <type api="T:OOAdvantech.Transactions.TransactionOption" ref="false" />
      </containers>
    </api>
    <api id="F:OOAdvantech.Transactions.TransactionOption.Required">
      <apidata name="Required" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:OOAdvantech.Transactions.TransactionOption" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Transactions" />
        <type api="T:OOAdvantech.Transactions.TransactionOption" ref="false" />
      </containers>
    </api>
    <api id="F:OOAdvantech.Transactions.TransactionOption.RequiredNested">
      <apidata name="RequiredNested" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:OOAdvantech.Transactions.TransactionOption" ref="false" />
      </returns>
      <value>4</value>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Transactions" />
        <type api="T:OOAdvantech.Transactions.TransactionOption" ref="false" />
      </containers>
    </api>
    <api id="F:OOAdvantech.Transactions.TransactionOption.RequiresNew">
      <apidata name="RequiresNew" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:OOAdvantech.Transactions.TransactionOption" ref="false" />
      </returns>
      <value>3</value>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Transactions" />
        <type api="T:OOAdvantech.Transactions.TransactionOption" ref="false" />
      </containers>
    </api>
    <api id="F:OOAdvantech.Transactions.TransactionOption.Supported">
      <apidata name="Supported" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:OOAdvantech.Transactions.TransactionOption" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Transactions" />
        <type api="T:OOAdvantech.Transactions.TransactionOption" ref="false" />
      </containers>
    </api>
    <api id="F:OOAdvantech.Transactions.TransactionOption.Suppress">
      <apidata name="Suppress" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:OOAdvantech.Transactions.TransactionOption" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Transactions" />
        <type api="T:OOAdvantech.Transactions.TransactionOption" ref="false" />
      </containers>
    </api>
    <api id="T:OOAdvantech.Transactions.TransactionStatus">
      <apidata name="TransactionStatus" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="F:OOAdvantech.Transactions.TransactionStatus.Continue" />
        <element api="F:OOAdvantech.Transactions.TransactionStatus.Committed" />
        <element api="F:OOAdvantech.Transactions.TransactionStatus.Aborted" />
        <element api="F:OOAdvantech.Transactions.TransactionStatus.InDoubt" />
      </elements>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Transactions" />
      </containers>
    </api>
    <api id="F:OOAdvantech.Transactions.TransactionStatus.Aborted">
      <apidata name="Aborted" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:OOAdvantech.Transactions.TransactionStatus" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Transactions" />
        <type api="T:OOAdvantech.Transactions.TransactionStatus" ref="false" />
      </containers>
    </api>
    <api id="F:OOAdvantech.Transactions.TransactionStatus.Committed">
      <apidata name="Committed" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:OOAdvantech.Transactions.TransactionStatus" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Transactions" />
        <type api="T:OOAdvantech.Transactions.TransactionStatus" ref="false" />
      </containers>
    </api>
    <api id="F:OOAdvantech.Transactions.TransactionStatus.Continue">
      <apidata name="Continue" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:OOAdvantech.Transactions.TransactionStatus" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Transactions" />
        <type api="T:OOAdvantech.Transactions.TransactionStatus" ref="false" />
      </containers>
    </api>
    <api id="F:OOAdvantech.Transactions.TransactionStatus.InDoubt">
      <apidata name="InDoubt" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:OOAdvantech.Transactions.TransactionStatus" ref="false" />
      </returns>
      <value>3</value>
      <containers>
        <library assembly="OOAdvantech" module="OOAdvantech" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:OOAdvantech.Transactions" />
        <type api="T:OOAdvantech.Transactions.TransactionStatus" ref="false" />
      </containers>
    </api>
  </apis>
</reflection>